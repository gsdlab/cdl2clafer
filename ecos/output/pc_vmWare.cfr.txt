

CYGPKG_HAL
    display = "eCos HAL"
    [CYGPKG_INFRA]

    CYGPKG_HAL_COMMON
        display = "Platform-independent HAL options"

        CYGFUN_HAL_COMMON_KERNEL_SUPPORT ?
            display = "Provide eCos kernel support"
            -- default_value = CYGPKG_KERNEL
            [CYGPKG_KERNEL]

        CYGPKG_HAL_EXCEPTIONS ?
            display = "HAL exception support"
            -- default_value = CYGPKG_KERNEL_EXCEPTIONS
            [CYGPKG_KERNEL_EXCEPTIONS]

        CYGSEM_HAL_STOP_CONSTRUCTORS_ON_FLAG ?
            display = "Stop calling constructors early"
            -- default_value = 0
            [CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS]

        abstract CYGINT_HAL_SUPPORTS_MMU_TABLES
            display = "HAL uses the MMU and allows for CDL manipulation of it's use"

        CYGSEM_HAL_INSTALL_MMU_TABLES ?
            display = "Install MMU tables."
            -- default_value = CYG_HAL_STARTUP != "RAM"
            -- ifActive
            [CYGINT_HAL_SUPPORTS_MMU_TABLES]

        CYGSEM_HAL_STATIC_MMU_TABLES ?
            display = "Use static MMU tables."
            -- default_value = 0
            [CYGSEM_HAL_INSTALL_MMU_TABLES]

        CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
            display = "Route diagnostic output to debug channel"
            -- default_value = ((CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS || CYG_HAL_STARTUP = "RAM") => 1 else 0)
            -- ifActive
            [!CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE]
            -- ifActive
            [CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG]

            CYGSEM_HAL_DIAG_MANGLER -> CYGSEM_HAL_DIAG_MANGLER_ENUM 
                display = "Mangler used on diag output"
                -- default_value = "GDB"
enum CYGSEM_HAL_DIAG_MANGLER_ENUM = "GDB" | "None"

        CYGBLD_HAL_LINKER_GROUPED_LIBS
            display = "Grouped libraries for linking"
            -- default_value = CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT
            [is_substr(CYGBLD_HAL_LINKER_GROUPED_LIBS,StringLiteral("libtarget.a"))]

            CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT -> string 
                display = "Default setting"
                -- default_value = "libtarget.a libgcc.a libsupc++.a"

    CYGPKG_HAL_COMMON_INTERRUPTS
        display = "HAL interrupt handling"

        CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK ?
            display = "Use separate stack for interrupts"
            -- default_value = 1

        CYGNUM_HAL_COMMON_INTERRUPTS_STACK_SIZE -> integer 
            display = "Interrupt stack size"
            -- default_value = ((CYGPKG_KERNEL) => 4096 else 32768)
            [128 <= this && this <= 1048576]

        CYGSEM_HAL_COMMON_INTERRUPTS_ALLOW_NESTING ?
            display = "Allow nested interrupts"
            -- default_value = 0

        CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT ?
            display = "Save minimum context on interrupt"
            -- default_value = 1

        CYGIMP_HAL_COMMON_INTERRUPTS_CHAIN ?
            display = "Chain all interrupts together"
            -- default_value = 0

        CYGIMP_HAL_COMMON_INTERRUPTS_IGNORE_SPURIOUS ?
            display = "Ignore spurious [fleeting] interrupts"
            -- default_value = 0

    CYGPKG_HAL_COMMON_CONTEXT
        display = "HAL context switch support"

        CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM ?
            display = "Use minimum thread context"
            -- default_value = 1

    CYGPKG_HAL_CACHE_CONTROL
        display = "Explicit control over cache behaviour"

        CYGSEM_HAL_ENABLE_DCACHE_ON_STARTUP
            display = "Enable DATA cache on startup"
            -- default_value = 1

            CYGSEM_HAL_DCACHE_STARTUP_MODE -> CYGSEM_HAL_DCACHE_STARTUP_MODE_ENUM 
                display = "DATA cache mode on startup"
                -- default_value = "COPYBACK"
enum CYGSEM_HAL_DCACHE_STARTUP_MODE_ENUM = "COPYBACK" | "WRITETHRU"

        CYGSEM_HAL_ENABLE_ICACHE_ON_STARTUP ?
            display = "Enable INSTRUCTION cache on startup"
            -- default_value = 1

    CYGPKG_HAL_DEBUG
        display = "Source-level debugging support"

        abstract CYGINT_HAL_DEBUG_GDB_STUBS
            display = "Support for GDB stubs"

        CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS ?
            display = "Include GDB stubs in HAL"
            -- default_value = 0
            -- ifActive
            [CYGINT_HAL_DEBUG_GDB_STUBS]
            [!CYGSEM_HAL_USE_ROM_MONITOR]
            [!CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT]
            [!CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM]
            [!CYGSEM_HAL_VIRTUAL_VECTOR_DIAG || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS]

        abstract CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
            display = "Support for external break support in GDB stubs"

        CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT ?
            display = "Include GDB external break support for stubs"
            -- default_value = CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
            -- ifActive
            [CYGINT_HAL_DEBUG_GDB_STUBS_BREAK]
            [CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS]

        abstract CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED
            display = "Platform does not support CTRLC"

        CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT ?
            display = "Include GDB external break support when no stubs"
            -- default_value = !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
            -- ifActive
            [CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS]
            -- ifActive
            [#CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED = 0]
            [!CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT]

        CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT ?
            display = "Include GDB multi-threading debug support"
            -- default_value = 1
            -- ifActive
            [CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT]

        CYGNUM_HAL_DEBUG_GDB_PROTOCOL_RETRIES -> integer 
            display = "Number of times to retry sending a $O packet"
            -- default_value = 0

        CYGNUM_HAL_DEBUG_GDB_PROTOCOL_TIMEOUT -> integer 
            display = "Timeout period for GDB packets"
            -- default_value = 500

        CYGDBG_HAL_CRCTABLE_LOCATION -> CYGDBG_HAL_CRCTABLE_LOCATION_ENUM 
            display = "Location of CRC32 table"
            -- default_value = "RAM"
enum CYGDBG_HAL_CRCTABLE_LOCATION_ENUM = "ROM" | "RAM"

        CYGDBG_HAL_DEBUG_GDB_INITIAL_BREAK ?
            display = "Enable initial breakpoint"
            -- default_value = !CYGPKG_REDBOOT
            -- ifActive
            [CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS]

    CYGPKG_HAL_ROM_MONITOR
        display = "ROM monitor support"

        abstract CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
            display = "Target has virtual vector support"

        abstract CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT
            display = "Target supports baud rate control via vectors"

        CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
            display = "Enable use of virtual vector calling interface"
            -- ifActive
            [CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT]
            calculated: [this = 
            1]

            CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE ?
                display = "Inherit console settings from ROM monitor"
                -- default_value = !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
                -- ifActive
                [CYGSEM_HAL_USE_ROM_MONITOR]

            CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE ?
                display = "Debug channel is configurable"
                calculated: [this = 
                CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS]

            CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE ?
                display = "Console channel is configurable"
                calculated: [this = 
                !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN]

            CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE ?
                display = "Initialize whole of virtual vector table"
                -- default_value = CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR
                [CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET]
                [CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US]
                [CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA]
                [CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS]

            CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT ?
                display = "Claim virtual vector table entries by default"
                -- default_value = 1
                -- ifActive
                [!CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE]

            CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET ?
                display = "Claim reset virtual vectors"
                -- default_value = CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT

            CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_VERSION ?
                display = "Claim version virtual vectors"
                -- default_value = CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE

            CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US ?
                display = "Claim delay_us virtual vector"
                -- default_value = CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT

            CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA ?
                display = "Claim data virtual vectors"
                -- default_value = CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT

            CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS ?
                display = "Claim comms virtual vectors"
                -- default_value = CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS

            CYGSEM_HAL_VIRTUAL_VECTOR_DIAG ?
                display = "Do diagnostic IO via virtual vector table"
                calculated: [this = 
                1]

        CYGSEM_HAL_ROM_MONITOR ?
            display = "Behave as a ROM monitor"
            -- default_value = 0
            [CYG_HAL_STARTUP = "FLOPPY" || CYG_HAL_STARTUP = "ROM" || CYG_HAL_STARTUP = "GRUB"]
            [!CYGHWR_HAL_I386_FPU_SWITCH_LAZY]

        CYGSEM_HAL_USE_ROM_MONITOR -> CYGSEM_HAL_USE_ROM_MONITOR_ENUM 
            display = "Work with a ROM monitor"
            -- default_value = ((CYG_HAL_STARTUP = "RAM") => "GDB_stubs" else 0)
            [CYG_HAL_STARTUP = "RAM"]
enum CYGSEM_HAL_USE_ROM_MONITOR_ENUM = "Generic" | "GDB_stubs"

    abstract CYGINT_HAL_PLF_IF_INIT
        display = "Platform defined I/O channels."

    abstract CYGINT_HAL_PLF_IF_IDE
        display = "Platform IDE I/O support."

    CYGPKG_HAL_GDB_FILEIO ?
        display = "File I/O operations via GDB"
        -- default_value = 0
        -- ifActive
        [CYGSEM_REDBOOT_BSP_SYSCALLS]
        [CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS]

    CYGPKG_HAL_BUILD_COMPILER_TESTS ?
        display = "Build Compiler sanity checking tests"

    CYGPKG_HAL_TESTS -> string 
        display = "Common HAL tests"
        calculated: [this = 
        ((("tests/context tests/basic") ++
                (!CYGINT_HAL_TESTS_NO_CACHES => " tests/cache" else "")) ++
                (CYGPKG_HAL_BUILD_COMPILER_TESTS => " tests/cpp1 tests/vaargs" else "")) ++
                (!CYGVAR_KERNEL_COUNTERS_CLOCK => " tests/intr" else "")]

        CYGINT_HAL_TESTS_NO_CACHES
            display = "Interface for cache presence"

    CYGPKG_HAL_I386 extends CYGINT_PROFILE_HAL_MCOUNT
        display = "i386 architecture"

        CYGPKG_HAL_SMP_SUPPORT
            display = "SMP support"
            -- default_value = 0
            [#CYGHWR_HAL_I386_FPU_SWITCH_LAZY = 0]

            CYGPKG_HAL_SMP_CPU_MAX -> integer 
                display = "Max number of CPUs supported"
                -- default_value = 2

        CYGHWR_HAL_I386_FPU
            display = "Enable I386 FPU support"
            -- default_value = 1

            CYGHWR_HAL_I386_FPU_SWITCH_LAZY ?
                display = "Use lazy FPU state switching"
                -- default_value = 1

        CYGHWR_HAL_I386_PENTIUM
            display = "Enable Pentium class CPU features"
            -- default_value = 0

            CYGHWR_HAL_I386_PENTIUM_SSE ?
                display = "Save/Restore SSE registers on context switch"
                -- default_value = 0

            CYGHWR_HAL_I386_PENTIUM_GDB_REGS ?
                display = "Support extra Pentium registers in GDB stub"
                -- default_value = 0

        CYGBLD_LINKER_SCRIPT -> string 
            display = "Linker script"
            calculated: [this = 
            "src/i386.ld"]

        abstract CYGINT_HAL_I386_MEM_REAL_REGION_TOP
            display = "Implementations of hal_i386_mem_real_region_top()"

        CYGPKG_REDBOOT_I386_LINUX_EXEC
            display = "Provide the exec command in RedBoot"
            -- ifActive
            [CYGBLD_BUILD_REDBOOT_WITH_EXEC]

            CYGHWR_REDBOOT_I386_TRAMPOLINE_ADDRESS -> integer 
                display = "Address for the trampoline code"
                -- default_value = 0x7C000

        CYGPKG_HAL_I386_GENERIC
            display = "i386 generic target"

        CYGPKG_HAL_I386_PC
            display = "i386 PC Target"
            'CYGINT_HAL_DEBUG_GDB_STUBS
            'CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
            'CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
            'CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT_GUARANTEED

            CYGPKG_HAL_I386_PC_MEMSIZE -> CYGPKG_HAL_I386_PC_MEMSIZE_ENUM 
                display = "How to discover the size of available RAM."
                -- default_value = "BIOS"
enum CYGPKG_HAL_I386_PC_MEMSIZE_ENUM = "BIOS" | "HARDCODE"

                CYGNUM_HAL_I386_PC_MEMSIZE_BASE -> integer 
                    display = "Amount of Base RAM available."
                    -- default_value = 0x000F0000
                    -- ifActive
                    [CYGPKG_HAL_I386_PC_MEMSIZE = "HARDCODE"]

                CYGNUM_HAL_I386_PC_MEMSIZE_EXTENDED -> integer 
                    display = "Amount of Extended RAM available."
                    -- default_value = 0x00100000
                    -- ifActive
                    [CYGPKG_HAL_I386_PC_MEMSIZE = "HARDCODE"]

            CYG_HAL_STARTUP -> CYG_HAL_STARTUP_ENUM 
                display = "Startup type"
                -- default_value = "RAM"
enum CYG_HAL_STARTUP_ENUM = "RAM" | "FLOPPY" | "ROM" | "GRUB"

            CYGBLD_BUILD_I386_ROMBOOT ?
                display = "Build ROM bootstrap code"
                calculated: [this = 
                CYG_HAL_STARTUP = "ROM"]

            CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD -> CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD_ENUM 
                display = "Diagnostic serial port baud rate"
                -- default_value = 38400
enum CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD_ENUM = 9600 | 19200 | 38400 | 57600 | 115200

            CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_BAUD -> CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_BAUD_ENUM 
                display = "GDB serial port baud rate"
                -- default_value = 38400
enum CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_BAUD_ENUM = 9600 | 19200 | 38400 | 57600 | 115200

            CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS -> integer 
                display = "Number of communication channels on the board"
                -- default_value = ((CYGSEM_HAL_I386_PC_DIAG_SCREEN) => 3 else 2)
                [1 <= this && this <= 3]

            CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL -> integer 
                display = "Debug serial port"
                -- default_value = 0
                [0 <= this && this <= CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1]

            CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_DEFAULT -> integer 
                display = "Default console channel."
                -- default_value = 0
                [0 <= this && this <= CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1]

            CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL -> integer 
                display = "Diagnostic serial port"
                -- default_value = CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_DEFAULT
                [0 <= this && this <= CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1]

            CYGSEM_HAL_I386_PC_DIAG_SCREEN extends CYGINT_HAL_I386_PCMB_SCREEN_SUPPORT ?
                display = "Output to PC screen"
                -- default_value = 1

            CYGHWR_HAL_I386_PC_LOAD_HIGH ?
                display = "Load into higher memory (2MB)"
                -- default_value = 0
                [CYG_HAL_STARTUP = "RAM" || CYG_HAL_STARTUP = "GRUB"]

            CYGHWR_MEMORY_LAYOUT -> string 
                display = "Memory layout"
                calculated: [this = 
                                    CYG_HAL_STARTUP = "RAM" => (CYGHWR_HAL_I386_PC_LOAD_HIGH => "i386_pc_ram_hi" else "i386_pc_ram")
                        else 
                                    CYG_HAL_STARTUP = "ROM" => "i386_pc_rom"
                            else 
                                        CYG_HAL_STARTUP = "GRUB" => (CYGHWR_HAL_I386_PC_LOAD_HIGH => "i386_pc_grub_hi" else "i386_pc_grub")
                                else 
                        "i386_pc_floppy"]

                CYGHWR_MEMORY_LAYOUT_LDI -> string 
                    display = "Memory layout linker script fragment"
                    calculated: [this = 
                                            CYG_HAL_STARTUP = "RAM" => (CYGHWR_HAL_I386_PC_LOAD_HIGH => "<pkgconf/mlt_i386_pc_ram_hi.ldi>" else "<pkgconf/mlt_i386_pc_ram.ldi>")
                            else 
                                            CYG_HAL_STARTUP = "ROM" => "<pkgconf/mlt_i386_pc_rom.ldi>"
                                else 
                                                CYG_HAL_STARTUP = "GRUB" => (CYGHWR_HAL_I386_PC_LOAD_HIGH => "<pkgconf/mlt_i386_pc_grub_hi.ldi>" else "<pkgconf/mlt_i386_pc_grub.ldi>")
                                    else 
                            "<pkgconf/mlt_i386_pc_floppy.ldi>"]

                CYGHWR_MEMORY_LAYOUT_H -> string 
                    display = "Memory layout header file"
                    calculated: [this = 
                                            CYG_HAL_STARTUP = "RAM" => (CYGHWR_HAL_I386_PC_LOAD_HIGH => "<pkgconf/mlt_i386_pc_ram_hi.h>" else "<pkgconf/mlt_i386_pc_ram.h>")
                            else 
                                            CYG_HAL_STARTUP = "ROM" => "<pkgconf/mlt_i386_pc_rom.h>"
                                else 
                                                CYG_HAL_STARTUP = "GRUB" => (CYGHWR_HAL_I386_PC_LOAD_HIGH => "<pkgconf/mlt_i386_pc_grub_hi.h>" else "<pkgconf/mlt_i386_pc_grub.h>")
                                    else 
                            "<pkgconf/mlt_i386_pc_floppy.h>"]

        CYGPKG_HAL_I386_PCMB
            display = "i386 PC Motherboard Support"
            'CYGINT_HAL_I386_MEM_REAL_REGION_TOP
            'CYGINT_HAL_PLF_IF_IDE

            CYGNUM_HAL_RTC_CONSTANTS
                display = "Real-time clock constants."

                CYGNUM_HAL_RTC_NUMERATOR -> integer 
                    display = "Real-time clock numerator"
                    -- default_value = 1000000000

                CYGNUM_HAL_RTC_DENOMINATOR -> integer 
                    display = "Real-time clock denominator"
                    -- default_value = 100

                CYGNUM_HAL_RTC_PERIOD -> integer 
                    display = "Real-time clock period"
                    -- default_value = 11932

            CYGSEM_HAL_I386_PC_LARGE_PCI_SPACE ?
                display = "Search entire PCI space"
                -- default_value = 0

            CYGNUM_HAL_I386_PC_STARTUP_VIDEO_MODE -> integer 
                display = "Switch the display to an alternative video mode"
                -- default_value = 0
                -- ifActive
                [CYGPKG_REDBOOT]
                [!CYGSEM_HAL_I386_PC_DIAG_SCREEN]

            CYGPKG_HAL_I386_PCMB_SMP_SUPPORT
                -- ifActive
                [CYGPKG_HAL_SMP_SUPPORT]
                calculated: [this = 
                CYGPKG_HAL_SMP_SUPPORT]

            CYGFUN_HAL_I386_PCMB_GPROF_SUPPORT extends CYGINT_PROFILE_HAL_TIMER ?
                display = "Support for gprof profiling"
                -- ifActive
                [CYGPKG_PROFILE_GPROF]
                [CYGVAR_KERNEL_COUNTERS_CLOCK]
                calculated: [this = 
                1]

            abstract CYGINT_HAL_I386_PCMB_SCREEN_SUPPORT
                display = "Enable PC screen support"

CYGPKG_IO
    display = "I/O sub-system"
    [CYGPKG_ERROR]

    CYGDBG_IO_INIT ?
        display = "Debug I/O sub-system"
        -- default_value = 0

    CYGPKG_IO_FILE_SUPPORT
        display = "Basic support for file based I/O"
        -- default_value = 1
        -- ifActive
        [!CYGPKG_IO_FILEIO]

        CYGPKG_IO_NFILE -> integer 
            display = "Number of open files"
            -- default_value = 16

    CYGPKG_IO_SERIAL
        display = "Serial device drivers"
        -- ifActive
        [CYGPKG_IO]
        [CYGPKG_ERROR]

        CYGOPT_IO_SERIAL_SUPPORT_NONBLOCKING ?
            display = "Support non-blocking read and write calls"
            -- default_value = 0

        abstract CYGINT_IO_SERIAL_BLOCK_TRANSFER
            display = "Driver requires block transfer callback functions"

        abstract CYGINT_IO_SERIAL_LINE_STATUS_HW
            display = "Serial driver supports line status"

        CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS ?
            display = "Support line status callbacks"
            -- default_value = 0 != #CYGINT_IO_SERIAL_LINE_STATUS_HW
            [#CYGINT_IO_SERIAL_LINE_STATUS_HW > 0]

        CYGPKG_IO_SERIAL_FLOW_CONTROL
            display = "Flow control"
            -- default_value = 0
            [CYGOPT_IO_SERIAL_FLOW_CONTROL_SOFTWARE || CYGOPT_IO_SERIAL_FLOW_CONTROL_HW]

            CYGOPT_IO_SERIAL_FLOW_CONTROL_SOFTWARE
                display = "Software flow control"
                -- default_value = 1

                CYGDAT_IO_SERIAL_FLOW_CONTROL_XON_CHAR -> integer 
                    display = "Start character"
                    -- default_value = 17
                    [0 <= this && this <= 255]

                CYGDAT_IO_SERIAL_FLOW_CONTROL_XOFF_CHAR -> integer 
                    display = "Stop character"
                    -- default_value = 19
                    [0 <= this && this <= 255]

            CYGOPT_IO_SERIAL_FLOW_CONTROL_HW ?
                display = "Hardware flow control"
                -- default_value = ((#CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0) => CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS else 0)
                -- ifActive
                [#CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0]
                [#CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0]
                [CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS]

            abstract CYGINT_IO_SERIAL_FLOW_CONTROL_HW
                display = "Serial h/w supports hardware flow control"

            CYGDAT_IO_SERIAL_FLOW_CONTROL_DEFAULT -> CYGDAT_IO_SERIAL_FLOW_CONTROL_DEFAULT_ENUM 
                display = "Default flow control method"
                -- default_value = "NONE"
enum CYGDAT_IO_SERIAL_FLOW_CONTROL_DEFAULT_ENUM = "NONE" | "XONXOFF" | "RTSCTS" | "DSRDTR"

            CYGNUM_IO_SERIAL_FLOW_CONTROL_LOW_WATER_PERCENT -> integer 
                display = "Rx flow control low water mark"
                -- default_value = 33
                [1 <= this && this <= 100]

            CYGNUM_IO_SERIAL_FLOW_CONTROL_HIGH_WATER_PERCENT -> integer 
                display = "Rx flow control high water mark"
                -- default_value = 66
                [1 <= this && this <= 100]
                [CYGNUM_IO_SERIAL_FLOW_CONTROL_HIGH_WATER_PERCENT >= CYGNUM_IO_SERIAL_FLOW_CONTROL_LOW_WATER_PERCENT]

        CYGPKG_IO_SERIAL_TTY
            display = "TTY-mode serial device drivers"
            -- default_value = 1

            CYGPKG_IO_SERIAL_HALDIAG
                display = "HAL/diag serial device driver"
                -- default_value = 1

            CYGDAT_IO_SERIAL_TTY_CONSOLE -> string 
                display = "Console device name"
                -- default_value = "\"/dev/ttydiag\""

            CYGPKG_IO_SERIAL_TTY_TTYDIAG
                display = "TTY mode HAL/diag channel"
                -- default_value = 1

            CYGPKG_IO_SERIAL_TTY_TTY0
                display = "TTY mode channel #0"
                -- default_value = 0

                CYGDAT_IO_SERIAL_TTY_TTY0_DEV -> string 
                    display = "TTY mode channel #0 device"
                    -- default_value = "\"/dev/ser0\""

            CYGPKG_IO_SERIAL_TTY_TTY1
                display = "TTY mode channel #1"
                -- default_value = 0

                CYGDAT_IO_SERIAL_TTY_TTY1_DEV -> string 
                    display = "TTY mode channel #1 device"
                    -- default_value = "\"/dev/ser1\""

            CYGPKG_IO_SERIAL_TTY_TTY2
                display = "TTY mode channel #2"
                -- default_value = 0

                CYGDAT_IO_SERIAL_TTY_TTY2_DEV -> string 
                    display = "TTY mode channel #2 device"
                    -- default_value = "\"/dev/ser2\""

            CYGPKG_IO_SERIAL_TTY_TTY3
                display = "TTY mode channel #3"
                -- default_value = 0

                CYGDAT_IO_SERIAL_TTY_TTY3_DEV -> string 
                    display = "TTY mode channel #3 device"
                    -- default_value = "\"/dev/ser3\""

        CYGPKG_IO_SERIAL_TERMIOS extends CYGINT_ISO_TERMIOS
            display = "Termios compatible TTY drivers"
            -- default_value = 0 != #CYGPKG_ISOINFRA && 0 != #CYGPKG_IO_FILEIO && 0 != #CYGINT_ISO_ERRNO_CODES && 0 != #CYGINT_ISO_ERRNO
            [CYGPKG_ISOINFRA]
            [CYGPKG_IO_FILEIO]
            [CYGINT_ISO_ERRNO_CODES]
            [CYGINT_ISO_ERRNO]
            [CYGINT_ISO_MALLOC]

            abstract CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY
                display = "Interface for termios tty driver file enabling"

            CYGBLD_IO_SERIAL_TERMIOS_TERMIOS_TTY ?
                display = "Build termios tty driver file"
                -- ifActive
                [#CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY > 0]
                calculated: [this = 
                1]

            CYGPKG_IO_SERIAL_TERMIOS_TERMIOS0 extends CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY
                display = "Termios TTY channel #0"
                -- default_value = 0

                CYGDAT_IO_SERIAL_TERMIOS_TERMIOS0_DEV -> string 
                    display = "Termios TTY channel #0 device"
                    -- default_value = "\"/dev/ser0\""

            CYGPKG_IO_SERIAL_TERMIOS_TERMIOS1 extends CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY
                display = "Termios TTY channel #1"
                -- default_value = 0

                CYGDAT_IO_SERIAL_TERMIOS_TERMIOS1_DEV -> string 
                    display = "Termios TTY channel #1 device"
                    -- default_value = "\"/dev/ser1\""

            CYGPKG_IO_SERIAL_TERMIOS_TERMIOS2 extends CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY
                display = "Termios TTY channel #2"
                -- default_value = 0

                CYGDAT_IO_SERIAL_TERMIOS_TERMIOS2_DEV -> string 
                    display = "Termios TTY channel #2 device"
                    -- default_value = "\"/dev/ser2\""

            CYGPKG_IO_SERIAL_TERMIOS_TERMIOS3 extends CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY
                display = "Termios TTY channel #3"
                -- default_value = 0

                CYGDAT_IO_SERIAL_TERMIOS_TERMIOS3_DEV -> string 
                    display = "Termios TTY channel #3 device"
                    -- default_value = "\"/dev/ser3\""

            CYGSEM_IO_SERIAL_TERMIOS_USE_SIGNALS ?
                display = "Support signals"
                -- default_value = #CYGINT_ISO_SIGNAL_NUMBERS != 0 && #CYGINT_ISO_SIGNAL_IMPL != 0
                [CYGINT_ISO_SIGNAL_NUMBERS]
                [CYGINT_ISO_SIGNAL_IMPL]

        CYGPKG_IO_SERIAL_DEVICES
            display = "Hardware serial device drivers"
            -- default_value = 0

            CYGPKG_IO_SERIAL_GENERIC_16X5X
                display = "16x5x generic serial device drivers"
                -- ifActive
                [CYGPKG_IO_SERIAL]
                -- ifActive
                [CYGINT_IO_SERIAL_GENERIC_16X5X_REQUIRED]
                [CYGPKG_ERROR]

                CYGINT_IO_SERIAL_GENERIC_16X5X_CHAN_INTPRIO
                    display = "Per channel interrupt priority support"

                CYGPKG_IO_SERIAL_GENERIC_16X5X_XMIT_REQUIRE_PRIME ?
                    display = "Transmission require priming"
                    -- default_value = 0

                CYGPKG_IO_SERIAL_GENERIC_16X5X_FIFO
                    display = "16x5x FIFO support"
                    -- default_value = 1

                    CYGPKG_IO_SERIAL_GENERIC_16X5X_FIFO_RX_THRESHOLD -> CYGPKG_IO_SERIAL_GENERIC_16X5X_FIFO_RX_THRESHOLD_ENUM 
                        display = "Threshold for RX interrupt on 16550 FIFO"
                        -- default_value = 1
enum CYGPKG_IO_SERIAL_GENERIC_16X5X_FIFO_RX_THRESHOLD_ENUM = 14 | 8 | 4 | 1

                    CYGNUM_IO_SERIAL_GENERIC_16X5X_FIFO_TX_SIZE -> integer 
                        display = "16x5x TX FIFO size"
                        -- default_value = 16

                CYGPKG_IO_SERIAL_GENERIC_16X5X_OPTIONS
                    display = "Serial device driver build options"

                    CYGPKG_IO_SERIAL_GENERIC_16X5X_CFLAGS_ADD -> string 
                        display = "Additional compiler flags"
                        -- default_value = ""

                    CYGPKG_IO_SERIAL_GENERIC_16X5X_CFLAGS_REMOVE -> string 
                        display = "Suppressed compiler flags"
                        -- default_value = ""

            CYGPKG_IO_SERIAL_I386_PC
                display = "PC serial device drivers"
                -- ifActive
                [CYGPKG_IO_SERIAL]
                -- ifActive
                [CYGPKG_HAL_I386_PCMB]
                [CYGPKG_ERROR]

                abstract CYGINT_IO_SERIAL_GENERIC_16X5X_REQUIRED
                    display = "Generic 16x5x serial driver required"

                CYGPKG_IO_SERIAL_I386_PC_SERIAL0
                    display = "PC serial port 0 driver"
                    'CYGINT_IO_SERIAL_GENERIC_16X5X_REQUIRED
                    'CYGINT_IO_SERIAL_FLOW_CONTROL_HW
                    'CYGINT_IO_SERIAL_LINE_STATUS_HW
                    -- default_value = 1

                    CYGDAT_IO_SERIAL_I386_PC_SERIAL0_NAME -> string 
                        display = "Device name for PC serial port 0"
                        -- default_value = "\"/dev/ser0\""

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL0_BAUD -> CYGNUM_IO_SERIAL_I386_PC_SERIAL0_BAUD_ENUM 
                        display = "Baud rate for the PC serial port 0 driver"
                        -- default_value = 38400
enum CYGNUM_IO_SERIAL_I386_PC_SERIAL0_BAUD_ENUM = 50 | 75 | 110 | "134_5" | 150 | 200 | 300 | 600 | 1200 | 1800 | 2400 | 3600 | 4800 | 7200 | 9600 | 14400 | 19200 | 38400 | 57600 | 115200 | 230400

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL0_BUFSIZE -> integer 
                        display = "Buffer size for the PC serial port 0 driver"
                        -- default_value = 128
                        [0 <= this && this <= 8192]

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL0_IOBASE -> integer 
                        display = "I/O base address for the i386-PC serial port 0"
                        -- default_value = 0x3F8
                        [0 <= this && this <= 0xFF8]

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL0_IRQ -> integer 
                        display = "IRQ for the i386-PC serial port 0"
                        -- default_value = 4
                        [0 <= this && this <= 15]

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL0_INT -> integer 
                        display = "INT for the i386-PC serial port 0"
                        -- default_value = #CYGNUM_IO_SERIAL_I386_PC_SERIAL0_IRQ + 32
                        [32 <= this && this <= 47]

                CYGPKG_IO_SERIAL_I386_PC_SERIAL1
                    display = "PC serial port 1 driver"
                    'CYGINT_IO_SERIAL_GENERIC_16X5X_REQUIRED
                    'CYGINT_IO_SERIAL_FLOW_CONTROL_HW
                    'CYGINT_IO_SERIAL_LINE_STATUS_HW
                    -- default_value = 1

                    CYGDAT_IO_SERIAL_I386_PC_SERIAL1_NAME -> string 
                        display = "Device name for PC serial port 1"
                        -- default_value = "\"/dev/ser1\""

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL1_BAUD -> CYGNUM_IO_SERIAL_I386_PC_SERIAL1_BAUD_ENUM 
                        display = "Baud rate for the PC serial port 1 driver"
                        -- default_value = 38400
enum CYGNUM_IO_SERIAL_I386_PC_SERIAL1_BAUD_ENUM = 50 | 75 | 110 | "134_5" | 150 | 200 | 300 | 600 | 1200 | 1800 | 2400 | 3600 | 4800 | 7200 | 9600 | 14400 | 19200 | 38400 | 57600 | 115200 | 230400

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL1_BUFSIZE -> integer 
                        display = "Buffer size for the PC serial port 1 driver"
                        -- default_value = 128
                        [0 <= this && this <= 8192]

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL1_IOBASE -> integer 
                        display = "I/O base address for the i386-PC serial port 1"
                        -- default_value = 0x2F8
                        [0 <= this && this <= 0xFF8]

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL1_IRQ -> integer 
                        display = "IRQ for the i386-PC serial port 1"
                        -- default_value = 3
                        [0 <= this && this <= 15]

                    CYGNUM_IO_SERIAL_I386_PC_SERIAL1_INT -> integer 
                        display = "INT for the i386-PC serial port 1"
                        -- default_value = #CYGNUM_IO_SERIAL_I386_PC_SERIAL1_IRQ + 32
                        [32 <= this && this <= 47]

                CYGPKG_IO_SERIAL_I386_PC_OPTIONS
                    display = "Serial device driver build options"

                    CYGPKG_IO_SERIAL_I386_PC_CFLAGS_ADD -> string 
                        display = "Additional compiler flags"
                        -- default_value = ""

                    CYGPKG_IO_SERIAL_I386_PC_CFLAGS_REMOVE -> string 
                        display = "Suppressed compiler flags"
                        -- default_value = ""

                CYGPKG_IO_SERIAL_I386_PC_TESTING
                    display = "Testing parameters"
                    -- ifActive
                    [CYGPKG_IO_SERIAL_I386_PC_SERIAL0]
                    calculated: [this = 
                    1]

                    CYGPRI_SER_TEST_SER_DEV
                        display = "Serial device used for testing"
                        -- default_value = CYGDAT_IO_SERIAL_I386_PC_SERIAL0_NAME

        CYGBLD_IO_SERIAL_EXTRA_TESTS ?
            display = "Build extra serial tests"
            -- default_value = 0

        CYGPKG_IO_SERIAL_OPTIONS
            display = "Serial device driver build options"

            CYGPKG_IO_SERIAL_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_IO_SERIAL_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_IO_SERIAL_TESTS -> string 
                display = "Serial device driver tests"
                calculated: [this = 
                CYGPKG_IO_SERIAL_DEVICES => "tests/serial1 tests/serial2 tests/serial3 tests/serial4 tests/serial5 tests/tty1 tests/tty2 tests/flow1 tests/flow2" else ""]

        CYGPKG_IO_SERIAL_SELECT_SUPPORT ?
            display = "Enable serial device select support"
            -- default_value = 1
            -- ifActive
            [CYGPKG_IO_FILEIO]
            [#CYGFUN_IO_FILEIO_SELECT = 1]

        CYGPKG_IO_SERIAL_TEST_SPECS
            display = "Serial testing specification"
            calculated: [this = 
            1]

            abstract CYGINT_IO_SERIAL_TEST_SKIP_9600
                display = "Skip 9600 baud testing"

            abstract CYGINT_IO_SERIAL_TEST_SKIP_14400
                display = "Skip 14400 baud testing"

            abstract CYGINT_IO_SERIAL_TEST_SKIP_19200
                display = "Skip 19200 baud testing"

            abstract CYGINT_IO_SERIAL_TEST_SKIP_38400
                display = "Skip 38400 baud testing"

            abstract CYGINT_IO_SERIAL_TEST_SKIP_57600
                display = "Skip 57600 baud testing"

            abstract CYGINT_IO_SERIAL_TEST_SKIP_115200
                display = "Skip 115200 baud testing"

            abstract CYGINT_IO_SERIAL_TEST_SKIP_PARITY_EVEN
                display = "Skip even-parity testing"

            abstract CYGINT_IO_SERIAL_TEST_SKIP_PARITY_ODD
                display = "Skip odd-parity testing"

            abstract CYGINT_IO_SERIAL_TEST_SKIP_STOP_2
                display = "Skip 2-stop bit testing"

    CYGPKG_IO_ETH_DRIVERS extends CYGPKG_NET_DRIVER_FRAMEWORK
        display = "Common ethernet support"

        abstract CYGHWR_NET_DRIVERS
            display = "Network drivers"

        abstract CYGINT_IO_ETH_MULTICAST
            display = "Driver supports multicast addressing"

        CYGDBG_IO_ETH_DRIVERS_DEBUG
            display = "Support printing driver debug information"
            -- default_value = 1

            CYGDBG_IO_ETH_DRIVERS_DEBUG_VERBOSITY -> integer 
                display = "Driver debug output verbosity"
                -- default_value = 0

        CYGNUM_IO_ETH_DRIVERS_SG_LIST_SIZE -> integer 
            display = "Size of scatter-gather I/O lists"
            -- default_value = 32

        CYGPKG_IO_ETH_DRIVERS_NET extends CYGINT_IO_ETH_INT_SUPPORT_REQUIRED
            display = "Support for standard eCos TCP/IP stack."
            -- default_value = 1
            -- ifActive
            [CYGPKG_NET]
            [CYGINT_ISO_STRING_STRFUNCS]

            CYGPKG_IO_ETH_DRIVERS_WARN_NO_MBUFS
                display = "Warn when there are no more mbufs"
                -- default_value = 1

            CYGPKG_IO_ETH_DRIVERS_SIMULATED_FAILURES
                display = "Simulate network failures for testing"
                -- default_value = 0

                CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_RX -> CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_RX_ENUM 
                    display = "Drop incoming packets (percentage)"
                    -- default_value = 10
enum CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_RX_ENUM = 10 | 50 | 80

                CYGPKG_IO_ETH_DRIVERS_SIMULATE_CORRUPT_RX -> CYGPKG_IO_ETH_DRIVERS_SIMULATE_CORRUPT_RX_ENUM 
                    display = "Corrupt incoming packets (percentage)"
                    -- default_value = 10
enum CYGPKG_IO_ETH_DRIVERS_SIMULATE_CORRUPT_RX_ENUM = 10 | 50 | 80

                CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_TX -> CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_TX_ENUM 
                    display = "Drop outgoing packets (percentage)"
                    -- default_value = 10
enum CYGPKG_IO_ETH_DRIVERS_SIMULATE_DROP_TX_ENUM = 10 | 50 | 80

                CYGPKG_IO_ETH_DRIVERS_SIMULATE_LINE_CUT ?
                    display = "Simulate a line cut from time to time"
                    -- default_value = 0

        CYGPKG_IO_ETH_DRIVERS_STAND_ALONE
            display = "Support for stand-alone network stack."
            -- default_value = 1
            -- ifActive
            [!CYGPKG_NET]
            [CYGINT_ISO_STRING_MEMFUNCS]

            CYGSEM_IO_ETH_DRIVERS_PASS_PACKETS ?
                display = "Pass packets to an alternate stack"
                -- default_value = 0 != #CYGPKG_REDBOOT_NETWORKING

            CYGNUM_IO_ETH_DRIVERS_NUM_PKT -> integer 
                display = "Number of [network] buffers"
                -- default_value = 4
                [2 <= this && this <= 32]

            CYGSEM_IO_ETH_DRIVERS_WARN ?
                display = "Show driver warnings"
                -- default_value = 0
                -- ifActive
                [CYGPKG_REDBOOT]

        CYGPKG_IO_ETH_DRIVERS_LWIP extends CYGINT_IO_ETH_INT_SUPPORT_REQUIRED
            display = "Support for lwIP network stack."
            -- default_value = 1
            -- ifActive
            [CYGPKG_NET_LWIP]
            [!CYGPKG_NET]

        CYGINT_IO_ETH_INT_SUPPORT_REQUIRED
            display = "Interrupt support required"

        CYGPKG_IO_ETH_DRIVERS_OPTIONS
            display = "Common ethernet support build options"

            CYGPKG_IO_ETH_DRIVERS_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = "-D_KERNEL -D__ECOS"

        CYGPKG_DEVS_ETH_AMD_LANCEPCI
            display = "AMD LANCE compatible ethernet driver"
            -- ifActive
            [CYGPKG_IO_ETH_DRIVERS]
            -- ifActive
            [CYGINT_DEVS_ETH_AMD_LANCEPCI_REQUIRED]

            CYGNUM_DEVS_ETH_AMD_LANCEPCI_DEV_COUNT
                display = "Number of supported interfaces."
                calculated: [this = 
                CYGINT_DEVS_ETH_AMD_LANCEPCI_REQUIRED]

            CYGPKG_DEVS_ETH_AMD_LANCEPCI_OPTIONS
                display = "LANCEPCI ethernet driver build options"

                CYGPKG_DEVS_ETH_AMD_LANCEPCI_CFLAGS_ADD -> string 
                    display = "Additional compiler flags"
                    -- default_value = "-D_KERNEL -D__ECOS"

        CYGPKG_DEVS_ETH_I386_PC_LANCEPCI
            display = "PC Lance PCI board ethernet driver"
            -- ifActive
            [CYGPKG_IO_ETH_DRIVERS]

            abstract CYGINT_DEVS_ETH_AMD_LANCEPCI_REQUIRED
                display = "AMD Lance PCI ethernet driver required"

            CYGPKG_DEVS_ETH_I386_PC_LANCEPCI_ETH0
                display = "Lance PCI ethernet port 0 driver"
                'CYGHWR_NET_DRIVERS
                'CYGHWR_NET_DRIVER_ETH0
                'CYGINT_DEVS_ETH_AMD_LANCEPCI_REQUIRED
                -- default_value = 1

                CYGNUM_DEVS_ETH_I386_PC_LANCEPCI_ETH0_RX_RING_SIZE -> CYGNUM_DEVS_ETH_I386_PC_LANCEPCI_ETH0_RX_RING_SIZE_ENUM 
                    display = "Size of RX ring for ETH0"
                    -- default_value = 4
enum CYGNUM_DEVS_ETH_I386_PC_LANCEPCI_ETH0_RX_RING_SIZE_ENUM = 4 | 8 | 16 | 32 | 64 | 128

                CYGNUM_DEVS_ETH_I386_PC_LANCEPCI_ETH0_TX_RING_SIZE -> CYGNUM_DEVS_ETH_I386_PC_LANCEPCI_ETH0_TX_RING_SIZE_ENUM 
                    display = "Size of TX ring for ETH0"
                    -- default_value = 4
enum CYGNUM_DEVS_ETH_I386_PC_LANCEPCI_ETH0_TX_RING_SIZE_ENUM = 4 | 8 | 16 | 32 | 64 | 128

                CYGDAT_DEVS_ETH_I386_PC_LANCEPCI_ETH0_NAME -> string 
                    display = "Device name for the ETH0 ethernet port 0 driver"
                    -- default_value = "\"eth0\""

                CYGSEM_DEVS_ETH_I386_PC_LANCEPCI_ETH0_SET_ESA
                    display = "Set the ethernet station address"
                    -- default_value = 0

                    CYGDAT_DEVS_ETH_I386_PC_LANCEPCI_ETH0_ESA -> string 
                        display = "The ethernet station address"
                        -- default_value = "{0x08, 0x88, 0x12, 0x34, 0x56, 0x78}"

    CYGPKG_POWER
        display = "Generic power management support"

        CYGIMP_POWER_PROVIDE_STRINGS ?
            display = "Provide a string for every power controller"
            -- default_value = 1

        CYGIMP_POWER_PROVIDE_POLICY_DATA ?
            display = "Reserve space in each power controller for use by the policy manager"
            -- default_value = 1

        CYGPKG_POWER_THREAD
            display = "Run a separate thread within the power management package"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL]

            CYGNUM_POWER_THREAD_STACKSIZE
                display = "Stack size for the power management thread"
                -- default_value = ((is_loaded(CYGNUM_LIBC_MAIN_DEFAULT_STACK_SIZE)) => CYGNUM_LIBC_MAIN_DEFAULT_STACK_SIZE else (2 * CYGNUM_HAL_COMMON_INTERRUPTS_STACK_SIZE))

            CYGNUM_POWER_THREAD_PRIORITY -> integer 
                display = "Thread priority to use"
                -- default_value = 1
                -- ifActive
                [#CYGNUM_KERNEL_SCHED_PRIORITIES > 2]

        CYGPKG_POWER_OPTIONS
            display = "Power management build options"

            CYGPKG_POWER_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_POWER_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_POWER_TESTS -> string 
                display = "Power management tests"
                calculated: [this = 
                "tests/powertest"]

    CYGPKG_IO_PCI
        display = "PCI configuration library"

        CYGPKG_IO_PCI_OPTIONS
            display = "PCI build options"

            CYGPKG_IO_PCI_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_IO_PCI_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_IO_PCI_DEBUG ?
                display = "Enable debugging."
                -- default_value = 0

            CYGPKG_IO_PCI_TESTS -> string 
                display = "PCI tests"
                calculated: [this = 
                "tests/pci1 tests/pci2"]

            CYGPKG_IO_PCI_CONFIGURE_INTLINE ?
                display = "Writeback Interrupt Line register."
                -- default_value = 0

CYGPKG_INFRA
    display = "Infrastructure"

    CYGPKG_INFRA_DEBUG
        display = "Asserts & Tracing"
        -- default_value = 0

        CYGDBG_USE_ASSERTS
            display = "Use asserts"
            -- default_value = 1
            [1 = #CYGINT_INFRA_DEBUG_TRACE_IMPL]

            CYGDBG_INFRA_DEBUG_PRECONDITIONS ?
                display = "Preconditions"
                -- default_value = 1

            CYGDBG_INFRA_DEBUG_POSTCONDITIONS ?
                display = "Postconditions"
                -- default_value = 1

            CYGDBG_INFRA_DEBUG_LOOP_INVARIANTS ?
                display = "Loop invariants"
                -- default_value = 1

            CYGDBG_INFRA_DEBUG_ASSERT_MESSAGE ?
                display = "Use assert text"
                -- default_value = 1

        CYGDBG_USE_TRACING
            display = "Use tracing"
            -- default_value = 0
            [1 = #CYGINT_INFRA_DEBUG_TRACE_IMPL]

            CYGDBG_INFRA_DEBUG_FUNCTION_REPORTS ?
                display = "Trace function reports"
                -- default_value = 1

            CYGDBG_INFRA_DEBUG_TRACE_MESSAGE ?
                display = "Use trace text"
                -- default_value = 1

        abstract CYGINT_INFRA_DEBUG_TRACE_IMPL
            display = "Trace output implementations"

        CYGDBG_INFRA_DEBUG_TRACE_ASSERT_NULL extends CYGINT_INFRA_DEBUG_TRACE_IMPL ?
            display = "Null output"
            -- default_value = 0

        CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE extends CYGINT_INFRA_DEBUG_TRACE_IMPL ?
            display = "Simple output"
            -- default_value = 0

        CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY extends CYGINT_INFRA_DEBUG_TRACE_IMPL ?
            display = "Fancy output"
            -- default_value = 0

        CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER extends CYGINT_INFRA_DEBUG_TRACE_IMPL
            display = "Buffered tracing"
            -- default_value = 1

            CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE -> integer 
                display = "Trace buffer size"
                -- default_value = 32
                [5 <= this && this <= 65535]
                -- ifActive
                [CYGDBG_USE_TRACING]

            CYGDBG_INFRA_DEBUG_TRACE_BUFFER_WRAP ?
                display = "Wrap trace buffer when full"
                -- default_value = 1
                -- ifActive
                [CYGDBG_USE_TRACING]

            CYGDBG_INFRA_DEBUG_TRACE_BUFFER_HALT ?
                display = "Halt trace buffer when full"
                -- default_value = 0
                -- ifActive
                [CYGDBG_USE_TRACING]

            CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT ?
                display = "Print trace buffer when full"
                -- default_value = 0
                -- ifActive
                [CYGDBG_USE_TRACING]

            CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT_ON_ASSERT ?
                display = "Print trace buffer on assert fail"
                -- default_value = 1
                -- ifActive
                [CYGDBG_USE_TRACING]

        CYGDBG_INFRA_DEBUG_FUNCTION_PSEUDOMACRO ?
            display = "Use function names"
            -- default_value = 1

    CYGPKG_INFRA_STARTUP
        display = "Startup options"

        CYGSEM_START_UITRON_COMPATIBILITY ?
            display = "Start uITRON subsystem"
            -- default_value = 0
            -- ifActive
            [CYGPKG_UITRON]
            [CYGPKG_UITRON]

    CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMCPY ?
        display = "Smaller slower memcpy()"
        -- default_value = 0

    CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMSET ?
        display = "Smaller slower memset()"
        -- default_value = 0

    CYGFUN_INFRA_EMPTY_DELETE_FUNCTIONS ?
        display = "Provide empty C++ delete functions"
        -- default_value = 1

    CYGNUM_INFRA_EMPTY_DELETE_THRESHOLD -> integer 
        display = "Threshold for valid number of delete calls"
        -- default_value = 100
        -- ifActive
        [CYGPKG_INFRA_DEBUG]

    CYGFUN_INFRA_DUMMY_ABORT ?
        display = "Provide dummy abort() function"
        -- default_value = #CYGINT_ISO_EXIT = 0
        [!CYGINT_ISO_EXIT]

    CYGSEM_INFRA_RESET_ON_TEST_EXIT ?
        display = "Reset platform at end of test case execution"
        -- default_value = 0

    CYGFUN_INFRA_DUMMY_STRLEN ?
        display = "Provide dummy strlen() function"
        -- default_value = #CYGINT_ISO_STRING_STRFUNCS = 0
        [!CYGINT_ISO_STRING_STRFUNCS]

    CYGBLD_INFRA_CFLAGS_WARNINGS_AS_ERRORS ?
        display = "Make all compiler warnings show as errors"
        -- default_value = 0
        [is_substr(CYGBLD_GLOBAL_CFLAGS,StringLiteral(" -Werror"))]

    CYGBLD_INFRA_CFLAGS_PIPE ?
        display = "Make compiler and assembler communicate by pipe"
        -- default_value = 0
        [is_substr(CYGBLD_GLOBAL_CFLAGS,StringLiteral(" -pipe"))]

    CYGPKG_INFRA_OPTIONS
        display = "Infra build options"

        CYGPKG_INFRA_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_INFRA_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

        CYGPKG_INFRA_LDFLAGS_REMOVE -> string 
            display = "Suppressed linker flags"
            -- default_value = "-Wl,--gc-sections"

        CYGPKG_INFRA_LDFLAGS_ADD -> string 
            display = "Additional linker flags"
            -- default_value = "-Wl,--fatal-warnings"

        CYGPKG_INFRA_TESTS -> string 
            display = "Infra package tests"
            calculated: [this = 
            "tests/cxxsupp tests/diag_sprintf1 tests/diag_sprintf2"]

            CYGNUM_TESTS_RUN_COUNT -> integer 
                display = "Number of times a test runs"
                -- default_value = 1

CYGPKG_KERNEL
    display = "eCos kernel"

    CYGPKG_KERNEL_INTERRUPTS
        display = "Kernel interrupt handling"

        CYGIMP_KERNEL_INTERRUPTS_DSRS
            display = "Use delayed service routines (DSRs)"
            -- default_value = 1

            abstract CYGINT_KERNEL_INTERRUPTS_DSRS
                [1 = #CYGINT_KERNEL_INTERRUPTS_DSRS]

            CYGIMP_KERNEL_INTERRUPTS_DSRS_LIST extends CYGINT_KERNEL_INTERRUPTS_DSRS
                display = "Use linked lists for DSRs"
                -- default_value = 1

                CYGSEM_KERNEL_INTERRUPTS_DSRS_LIST_FIFO ?
                    display = "Schedule DSRs in FIFO order"
                    -- default_value = 1

            CYGIMP_KERNEL_INTERRUPTS_DSRS_TABLE extends CYGINT_KERNEL_INTERRUPTS_DSRS
                display = "Use fixed-size table for DSRs"
                -- default_value = 0

                CYGNUM_KERNEL_INTERRUPTS_DSRS_TABLE_SIZE -> integer 
                    display = "Number of entries in fixed-size DSR table"
                    -- default_value = 32
                    [2 <= this && this <= 1024]

            CYGIMP_KERNEL_INTERRUPTS_CHAIN ?
                display = "Chain all interrupts together"
                -- default_value = 0
                [CYGIMP_HAL_COMMON_INTERRUPTS_CHAIN]

    CYGPKG_KERNEL_EXCEPTIONS
        display = "Exception handling"
        -- default_value = 1
        [CYGPKG_HAL_EXCEPTIONS]

        CYGSEM_KERNEL_EXCEPTIONS_DECODE ?
            display = "Decode exception types in kernel"
            -- default_value = 0

        CYGSEM_KERNEL_EXCEPTIONS_GLOBAL ?
            display = "Use global exception handlers"
            -- default_value = 1

    CYGPKG_KERNEL_SCHED
        display = "Kernel schedulers"

        abstract CYGINT_KERNEL_SCHEDULER
            display = "Number of schedulers in this configuration"
            [1 = #CYGINT_KERNEL_SCHEDULER]

        abstract CYGINT_KERNEL_SCHEDULER_UNIQUE_PRIORITIES
            display = "Non-zero if the active schedule only has unique priorities"

        CYGSEM_KERNEL_SCHED_MLQUEUE extends CYGINT_KERNEL_SCHEDULER
            display = "Multi-level queue scheduler"
            -- default_value = 1

            CYGDBG_KERNEL_TRACE_TIMESLICE ?
                display = "Output timeslices when tracing"
                -- default_value = 0
                -- ifActive
                [CYGDBG_USE_TRACING]
                [!CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE]
                [!CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY]

        CYGSEM_KERNEL_SCHED_BITMAP ?
            display = "Bitmap scheduler"
            'CYGINT_KERNEL_SCHEDULER
            'CYGINT_KERNEL_SCHEDULER_UNIQUE_PRIORITIES
            -- default_value = 0
            [!CYGPKG_KERNEL_SMP_SUPPORT]

        CYGPRI_KERNEL_SCHED_IMPL_HXX -> string 
            display = "Scheduler header file"
            calculated: [this = 
                            CYGSEM_KERNEL_SCHED_BITMAP => "<cyg/kernel/bitmap.hxx>"
                    else 
                            CYGSEM_KERNEL_SCHED_MLQUEUE => "<cyg/kernel/mlqueue.hxx>"
                        else 
                (CYGSEM_KERNEL_SCHED_LOTTERY => "<cyg/kernel/lottery.hxx>" else "!!!-- Configuration broken - no scheduler selected --!!!")]

        CYGNUM_KERNEL_SCHED_PRIORITIES -> integer 
            display = "Number of priority levels"
            -- default_value = 32
            [1 <= this && this <= 32]

            CYGNUM_KERNEL_SCHED_BITMAP_SIZE -> string 
                display = "Bitmap size"
                calculated: [this = 
                "CYGNUM_KERNEL_SCHED_PRIORITIES"]

            CYGIMP_KERNEL_SCHED_SORTED_QUEUES ?
                display = "Dequeue highest priority threads first"
                -- default_value = 0

        CYGSEM_KERNEL_SCHED_TIMESLICE
            display = "Scheduler timeslicing"
            -- default_value = 1
            [!CYGSEM_KERNEL_SCHED_BITMAP]
            [CYGVAR_KERNEL_COUNTERS_CLOCK]

            CYGNUM_KERNEL_SCHED_TIMESLICE_TICKS -> integer 
                display = "Number of clock ticks between timeslices"
                -- default_value = 5
                [1 <= this && this <= 65535]

            CYGSEM_KERNEL_SCHED_TIMESLICE_ENABLE ?
                display = "Support runtime enable of timeslice per-thread"
                -- default_value = FALSE

        CYGSEM_KERNEL_SCHED_ASR_SUPPORT
            display = "Enable ASR support"
            -- default_value = FALSE

            CYGSEM_KERNEL_SCHED_ASR_GLOBAL ?
                display = "Make ASR function global"
                -- default_value = TRUE

            CYGSEM_KERNEL_SCHED_ASR_DATA_GLOBAL ?
                display = "Make ASR data global"
                -- default_value = TRUE

    CYGPKG_KERNEL_SMP_SUPPORT
        display = "SMP support"
        -- default_value = 0
        [CYGPKG_HAL_SMP_SUPPORT]

    CYGPKG_KERNEL_COUNTERS
        display = "Counters and clocks"

        CYGVAR_KERNEL_COUNTERS_CLOCK ?
            display = "Provide real-time clock"
            -- default_value = 1
            [CYGIMP_KERNEL_INTERRUPTS_DSRS]

        CYGNUM_KERNEL_COUNTERS_CLOCK_ISR_PRIORITY
            display = "Interrupt priority for the real-time clock"
            -- default_value = ((is_loaded(CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY)) => CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY else 1)
            -- ifActive
            [CYGVAR_KERNEL_COUNTERS_CLOCK]

        abstract CYGINT_KERNEL_COUNTERS
            [1 = #CYGINT_KERNEL_COUNTERS]

        CYGIMP_KERNEL_COUNTERS_SINGLE_LIST extends CYGINT_KERNEL_COUNTERS ?
            display = "Implement counters using a single list"
            -- default_value = 1

        CYGIMP_KERNEL_COUNTERS_MULTI_LIST extends CYGINT_KERNEL_COUNTERS
            display = "Implement counters using a table of lists"
            -- default_value = 0

            CYGNUM_KERNEL_COUNTERS_MULTI_LIST_SIZE -> integer 
                display = "Size of counter list table"
                -- default_value = 8
                [1 <= this && this <= 1024]

        CYGIMP_KERNEL_COUNTERS_SORT_LIST ?
            display = "Sort the counter list"
            -- default_value = 0

        CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY ?
            display = "Measure real-time [clock] interrupt latency"
            -- default_value = 0
            [CYGVAR_KERNEL_COUNTERS_CLOCK]

        CYGVAR_KERNEL_COUNTERS_CLOCK_DSR_LATENCY ?
            display = "Measure real-time [clock] DSR latency"
            -- default_value = CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY
            [CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY]

        CYGNUM_KERNEL_COUNTERS_RTC_RESOLUTION -> string 
            display = "RTC resolution"
            calculated: [this = 
            "{CYGNUM_HAL_RTC_NUMERATOR, CYGNUM_HAL_RTC_DENOMINATOR}"]

        CYGNUM_KERNEL_COUNTERS_RTC_PERIOD -> string 
            display = "RTC period"
            calculated: [this = 
            "CYGNUM_HAL_RTC_PERIOD"]

    CYGPKG_KERNEL_THREADS
        display = "Thread-related options"

        CYGFUN_KERNEL_THREADS_TIMER ?
            display = "Allow per-thread timers"
            -- default_value = 1
            [CYGVAR_KERNEL_COUNTERS_CLOCK]

        CYGVAR_KERNEL_THREADS_NAME ?
            display = "Support optional name for each thread"
            -- default_value = 1

        CYGVAR_KERNEL_THREADS_LIST ?
            display = "Keep track of all threads using a linked list"
            -- default_value = 1

        CYGFUN_KERNEL_THREADS_STACK_LIMIT ?
            display = "Keep track of the base of each thread's stack"
            -- default_value = 1

        CYGFUN_KERNEL_THREADS_STACK_CHECKING
            display = "Check thread stacks for overflows"
            -- default_value = 1
            -- ifActive
            [CYGPKG_INFRA_DEBUG]
            -- ifActive
            [CYGDBG_USE_ASSERTS]

            CYGFUN_KERNEL_ALL_THREADS_STACK_CHECKING ?
                display = "Check all threads whenever possible"
                -- default_value = 0
                [CYGVAR_KERNEL_THREADS_LIST]

            CYGNUM_KERNEL_THREADS_STACK_CHECK_DATA_SIZE -> integer 
                display = "Signature size in bytes, at stack top and bottom"
                -- default_value = 32
                [8 <= this && this <= 512]

        CYGFUN_KERNEL_THREADS_STACK_MEASUREMENT
            display = "Measure stack usage"
            -- default_value = 0 != #CYGPKG_INFRA_DEBUG

            CYGDBG_KERNEL_THREADS_STACK_MEASUREMENT_VERBOSE_EXIT ?
                display = "Output stack usage on thread exit"
                -- default_value = 0

        CYGVAR_KERNEL_THREADS_DATA
            display = "Support for per-thread data"
            -- default_value = 1
            [CYGFUN_KERNEL_THREADS_STACK_LIMIT]

            CYGNUM_KERNEL_THREADS_DATA_MAX -> integer 
                display = "Number of words of per-thread data"
                -- default_value = 6
                [4 <= this && this <= 32]

            CYGNUM_KERNEL_THREADS_DATA_ALL -> integer 
                display = "Bitmap of preallocated slots of thread data"
                calculated: [this = 
                15]

                CYGNUM_KERNEL_THREADS_DATA_KERNEL -> integer 
                    display = "Slot 0 preallocated for the kernel"
                    calculated: [this = 
                    0]

                CYGNUM_KERNEL_THREADS_DATA_ITRON -> integer 
                    display = "Slot 1 preallocated for uITRON"
                    calculated: [this = 
                    1]

                CYGNUM_KERNEL_THREADS_DATA_ERRNO -> integer 
                    display = "Slot 2 preallocated for errno"
                    calculated: [this = 
                    2]

                CYGNUM_KERNEL_THREADS_DATA_POSIX -> integer 
                    display = "Slot 3 preallocated for POSIX"
                    calculated: [this = 
                    3]

        CYGPKG_KERNEL_THREADS_DESTRUCTORS
            display = "Thread destructors"
            -- default_value = 0

            CYGNUM_KERNEL_THREADS_DESTRUCTORS -> integer 
                display = "Number of possible destructors"
                -- default_value = 8
                [1 <= this && this <= 65535]

            CYGSEM_KERNEL_THREADS_DESTRUCTORS_PER_THREAD ?
                display = "Per-thread destructors"
                -- default_value = 1

        CYGNUM_KERNEL_THREADS_IDLE_STACK_SIZE -> integer 
            display = "Stack size for the idle thread"
            -- default_value = 2048
            [512 <= this && this <= 65536]

        CYGNUM_KERNEL_MAX_SUSPEND_COUNT_ASSERT -> integer 
            display = "Maximal suspend count"
            -- default_value = 500

        CYGNUM_KERNEL_MAX_COUNTED_WAKE_COUNT_ASSERT -> integer 
            display = "Maximal wake count"
            -- default_value = 500

        CYGIMP_IDLE_THREAD_YIELD ?
            display = "Idle thread must always yield"
            -- ifActive
            [#CYGNUM_KERNEL_SCHED_PRIORITIES = 1]
            calculated: [this = 
            1]

    CYGPKG_KERNEL_SYNCH
        display = "Synchronization primitives"

        CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL -> CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_ENUM 
            display = "Priority inversion protection protocols"
            -- default_value = "SIMPLE"
            -- ifActive
            [CYGSEM_KERNEL_SCHED_MLQUEUE]
            [#CYGINT_KERNEL_SCHEDULER_UNIQUE_PRIORITIES = 0]
enum CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_ENUM = "SIMPLE"

            CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_INHERIT extends CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT ?
                display = "Enable priority inheritance protocol"
                -- default_value = 1

            CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING extends CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT
                display = "Enable priority ceiling protocol"
                -- default_value = 1

                CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT_PRIORITY -> integer 
                    display = "Default priority ceiling"
                    -- default_value = 0
                    [0 <= this && this <= #CYGNUM_KERNEL_SCHED_PRIORITIES - 1]
                    -- ifActive
                    [CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING]

            CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_NONE extends CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT ?
                display = "No priority inversion protocol"
                -- default_value = 1

            CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT -> CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT_ENUM 
                display = "Default priority inversion protocol"
                -- default_value = ((CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_INHERIT) => "INHERIT" else ((CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING) => "CEILING" else "NONE"))
                -- ifActive
                [#CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT > 1]
enum CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT_ENUM = "INHERIT" | "CEILING" | "NONE"

            CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DYNAMIC ?
                display = "Specify mutex priority inversion protocol at runtime"
                -- default_value = 1
                -- ifActive
                [#CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT > 1]

            abstract CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT
                display = "Number of protocols selected"

        CYGIMP_MBOX_USE_MBOXT_PLAIN ?
            display = "Use mboxt_plain mbox implementation"
            -- default_value = 1

        CYGMFN_KERNEL_SYNCH_MBOXT_PUT_CAN_WAIT ?
            display = "Message box blocking put support"
            -- default_value = 1

        CYGNUM_KERNEL_SYNCH_MBOX_QUEUE_SIZE -> integer 
            display = "Message box queue size"
            -- default_value = 10
            [1 <= this && this <= 65535]

        CYGMFN_KERNEL_SYNCH_CONDVAR_TIMED_WAIT ?
            display = "Condition variable timed-wait support"
            -- default_value = 1
            [CYGFUN_KERNEL_THREADS_TIMER]

        CYGMFN_KERNEL_SYNCH_CONDVAR_WAIT_MUTEX ?
            display = "Condition variable explicit mutex wait support"
            -- default_value = 1

        CYGIMP_KERNEL_SYNCH_MQUEUE_NOT_INLINE ?
            display = "Avoid inlines in mqueue implementation"
            -- default_value = 0

    CYGPKG_KERNEL_INSTRUMENT
        display = "Kernel instrumentation"
        -- default_value = 0

        CYGVAR_KERNEL_INSTRUMENT_EXTERNAL_BUFFER ?
            display = "Use buffer provided by the application"
            -- default_value = 0

        CYGNUM_KERNEL_INSTRUMENT_BUFFER_SIZE -> integer 
            display = "Size of instrumentation buffer size"
            -- default_value = 256
            [16 <= this && this <= 0x100000]

        CYGDBG_KERNEL_INSTRUMENT_BUFFER_WRAP ?
            display = "Wrap instrument buffer"
            -- default_value = 1

        CYGDBG_KERNEL_INSTRUMENT_FLAGS ?
            display = "Perform selective instrumentation"
            -- default_value = 1

        CYGDBG_KERNEL_INSTRUMENT_SCHED ?
            display = "Instrument the scheduler"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL_SCHED]

        CYGDBG_KERNEL_INSTRUMENT_THREAD ?
            display = "Instrument thread operations"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL_THREADS]

        CYGDBG_KERNEL_INSTRUMENT_INTR ?
            display = "Instrument interrupts"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL_INTERRUPTS]

        CYGDBG_KERNEL_INSTRUMENT_MUTEX ?
            display = "Instrument mutex operations"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL_SYNCH]

        CYGDBG_KERNEL_INSTRUMENT_CONDVAR ?
            display = "Instrument condition variable operations"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL_SYNCH]

        CYGDBG_KERNEL_INSTRUMENT_BINSEM ?
            display = "Instrument binary semaphore operations"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL_SYNCH]

        CYGDBG_KERNEL_INSTRUMENT_CNTSEM ?
            display = "Instrument counting semaphore operations"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL_SYNCH]

        CYGDBG_KERNEL_INSTRUMENT_MBOXT ?
            display = "Instrument message box operations"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL_SYNCH]

        CYGDBG_KERNEL_INSTRUMENT_CLOCK ?
            display = "Instrument clock operations"
            -- default_value = 1
            -- ifActive
            [CYGVAR_KERNEL_COUNTERS_CLOCK]

        CYGDBG_KERNEL_INSTRUMENT_ALARM ?
            display = "Instrument alarm-related operations"
            -- default_value = 1
            -- ifActive
            [CYGVAR_KERNEL_COUNTERS_CLOCK]

        CYGDBG_KERNEL_INSTRUMENT_SMP ?
            display = "Instrument SMP-related operations"
            -- default_value = 1
            -- ifActive
            [CYGVAR_KERNEL_COUNTERS_CLOCK]

        CYGDBG_KERNEL_INSTRUMENT_USER ?
            display = "Support application-level instrumentation"
            -- default_value = 1

        CYGDBG_KERNEL_INSTRUMENT_MSGS
            display = "Print user friendly instrument messages"
            -- default_value = 1

            CYGDBG_KERNEL_INSTRUMENT_MSGS_BUILD_HEADERFILE ?
                display = "Rebuild the header file"
                -- default_value = 0

            CYGDBG_KERNEL_INSTRUMENT_BUILD_HOST_DUMP
                display = "Build the host tool to print out a dump"
                -- default_value = 0

    CYGPKG_KERNEL_DEBUG
        display = "Source-level debugging support"

        CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT ?
            display = "Include GDB multi-threading debug support"
            -- default_value = 1
            [CYGVAR_KERNEL_THREADS_LIST]
            [CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT]

    CYGPKG_KERNEL_API
        display = "Kernel APIs"

        CYGFUN_KERNEL_API_C ?
            display = "Provide C API"
            -- default_value = 1

    CYGPKG_KERNEL_OPTIONS
        display = "Kernel build options"

        CYGPKG_KERNEL_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_KERNEL_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

        CYGPKG_KERNEL_TESTS -> string 
            display = "Kernel tests"
            calculated: [this = 
            (((("tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2") ++
                    (CYGFUN_KERNEL_API_C => " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" else "")) ++
                    (!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C => " tests/dhrystone" else "")) ++
                    (CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C => " tests/smp" else "")) ++
                    (!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C => " tests/kcache1 tests/kcache2" else "")]

CYGPKG_MEMALLOC
    display = "Dynamic memory allocation"

    CYGPKG_MEMALLOC_ALLOCATORS
        display = "Memory allocator implementations"

        CYGPKG_MEMALLOC_ALLOCATOR_FIXED
            display = "Fixed block allocator"

            CYGSEM_MEMALLOC_ALLOCATOR_FIXED_THREADAWARE ?
                display = "Make thread safe"
                -- default_value = 1
                -- ifActive
                [CYGPKG_KERNEL]

        CYGPKG_MEMALLOC_ALLOCATOR_VARIABLE
            display = "Simple variable block allocator"

            CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_THREADAWARE ?
                display = "Make thread safe"
                -- default_value = 1
                -- ifActive
                [CYGPKG_KERNEL]

            CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE ?
                display = "Coalesce memory"
                -- default_value = 1

        CYGPKG_MEMALLOC_ALLOCATOR_DLMALLOC
            display = "Doug Lea's malloc"

            CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG ?
                display = "Debug build"
                -- default_value = 0 != #CYGDBG_USE_ASSERTS
                [CYGDBG_USE_ASSERTS]

            CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_THREADAWARE ?
                display = "Make thread safe"
                -- default_value = 1
                -- ifActive
                [CYGPKG_KERNEL]
                [CYGPKG_KERNEL]

            CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_SAFE_MULTIPLE ?
                display = "Support more than one instance"
                -- default_value = 1

            CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY ?
                display = "Use system memmove() and memset()"
                -- default_value = 0 != #CYGPKG_ISOINFRA && 0 != #CYGINT_ISO_STRING_MEMFUNCS
                [CYGPKG_ISOINFRA]
                [CYGINT_ISO_STRING_MEMFUNCS]

            CYGNUM_MEMALLOC_ALLOCATOR_DLMALLOC_ALIGNMENT -> integer 
                display = "Minimum alignment of allocated blocks"
                -- default_value = 3
                [3 <= this && this <= 10]

        CYGPKG_MEMALLOC_ALLOCATOR_SEPMETA
            display = "Variable block allocator with separate metadata"

            CYGSEM_MEMALLOC_ALLOCATOR_SEPMETA_THREADAWARE ?
                display = "Make thread safe"
                -- default_value = 1
                -- ifActive
                [CYGPKG_KERNEL]

    CYGFUN_MEMALLOC_KAPI ?
        display = "Kernel C API support for memory allocation"
        -- default_value = CYGFUN_KERNEL_API_C
        -- ifActive
        [CYGPKG_KERNEL]

    CYGSEM_MEMALLOC_MALLOC_ZERO_RETURNS_NULL ?
        display = "malloc(0) returns NULL"
        -- default_value = 0

    CYGSEM_MEMALLOC_INVOKE_OUT_OF_MEMORY ?
        display = "Breakpoint site when running out of memory"
        -- default_value = 0

    CYGPKG_MEMALLOC_MALLOC_ALLOCATORS
        display = "malloc() and supporting allocators"
        'CYGINT_ISO_MALLOC
        'CYGINT_ISO_MALLINFO
        -- default_value = 1
        -- ifActive
        [CYGPKG_ISOINFRA]

        CYGBLD_MEMALLOC_MALLOC_EXTERNAL_HEAP_H -> integer 
            display = "Use external heap definition"
            -- default_value = 0

        CYGBLD_MEMALLOC_MALLOC_EXTERNAL_JOIN_H -> integer 
            display = "Use external implementation of joining multiple heaps"
            -- default_value = 0

        abstract CYGINT_MEMALLOC_MALLOC_ALLOCATORS
            display = "malloc() allocator implementations"
            [#CYGINT_MEMALLOC_MALLOC_ALLOCATORS = 1]

        CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER -> string 
            display = "malloc() implementation instantiation data"
            -- default_value = "<cyg/memalloc/dlmalloc.hxx>"

        CYGIMP_MEMALLOC_MALLOC_VARIABLE_SIMPLE extends CYGINT_MEMALLOC_MALLOC_ALLOCATORS ?
            display = "Simple variable block implementation"
            -- default_value = 0
            [CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER = "<cyg/memalloc/memvar.hxx>"]
            [CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE]

        CYGIMP_MEMALLOC_MALLOC_DLMALLOC extends CYGINT_MEMALLOC_MALLOC_ALLOCATORS ?
            display = "Doug Lea's malloc implementation"
            -- default_value = 1
            [CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER = "<cyg/memalloc/dlmalloc.hxx>"]

    CYGNUM_MEMALLOC_FALLBACK_MALLOC_POOL_SIZE -> integer 
        display = "Size of the fallback dynamic memory pool in bytes"
        -- default_value = 16384
        [32 <= this && this <= 0x7fffffff]

    CYGPKG_MEMALLOC_OPTIONS
        display = "Common memory allocator package build options"

        CYGPKG_MEMALLOC_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_MEMALLOC_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

        CYGPKG_MEMALLOC_TESTS -> string 
            display = "Tests"
            calculated: [this = 
            "tests/dlmalloc1 tests/dlmalloc2 tests/heaptest tests/kmemfix1 tests/kmemvar1 tests/malloc1 tests/malloc2 tests/malloc3 tests/malloc4 tests/memfix1 tests/memfix2 tests/memvar1 tests/memvar2 tests/realloc tests/sepmeta1 tests/sepmeta2"]

CYGPKG_ISOINFRA
    display = "ISO C and POSIX infrastructure"

    CYGPKG_ISO_STARTUP
        display = "Startup and termination"

        abstract CYGINT_ISO_MAIN_STARTUP
            display = "main() startup implementations"
            [1 >= #CYGINT_ISO_MAIN_STARTUP]

        abstract CYGINT_ISO_ENVIRON
            display = "environ implementations"
            [1 >= #CYGINT_ISO_ENVIRON]

    CYGPKG_ISO_CTYPE_H
        display = "ctype.h functions"

        abstract CYGINT_ISO_CTYPE
            display = "Number of implementations of ctype functions"
            [1 >= #CYGINT_ISO_CTYPE]

        CYGBLD_ISO_CTYPE_HEADER -> integer 
            display = "Ctype implementation header"
            -- default_value = 0

    CYGPKG_ISO_ERRNO
        display = "Error handling"

        abstract CYGINT_ISO_ERRNO_CODES
            display = "Number of implementations of error codes"
            [1 >= #CYGINT_ISO_ERRNO_CODES]

        CYGBLD_ISO_ERRNO_CODES_HEADER -> integer 
            display = "Error codes implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_ERRNO
            display = "Number of implementations of errno variable"
            [1 >= #CYGINT_ISO_ERRNO]

        CYGBLD_ISO_ERRNO_HEADER -> integer 
            display = "errno variable implementation header"
            -- default_value = 0

    CYGPKG_ISO_LOCALE
        display = "Locale-related functions"

        abstract CYGINT_ISO_LOCALE
            display = "Number of implementations of locale functions"
            [1 >= #CYGINT_ISO_LOCALE]

        CYGBLD_ISO_LOCALE_HEADER -> integer 
            display = "Locale implementation header"
            -- default_value = 0

    CYGPKG_ISO_STDIO
        display = "Standard I/O-related functionality"

        CYGINT_ISO_STDIO_FILETYPES
            display = "Number of implementations of stdio file types"
            [1 >= #CYGINT_ISO_STDIO_FILETYPES]

        CYGBLD_ISO_STDIO_FILETYPES_HEADER -> integer 
            display = "Stdio file types implementation header"
            -- default_value = 0

        CYGINT_ISO_STDIO_STREAMS
            display = "Stdio standard streams implementations"
            [1 >= #CYGINT_ISO_STDIO_STREAMS]

        CYGBLD_ISO_STDIO_STREAMS_HEADER -> integer 
            display = "Stdio standard streams implementation header"
            -- default_value = 0

        CYGINT_ISO_STDIO_FILEOPS
            display = "Number of implementations of stdio file operations"
            [1 >= #CYGINT_ISO_STDIO_FILEOPS]

        CYGBLD_ISO_STDIO_FILEOPS_HEADER -> integer 
            display = "Stdio file operations implementation header"
            -- default_value = 0

        CYGINT_ISO_STDIO_FILEACCESS
            display = "Number of implementations of stdio file access  functionals"
            [1 >= #CYGINT_ISO_STDIO_FILEACCESS]

        CYGBLD_ISO_STDIO_FILEACCESS_HEADER -> integer 
            display = "Stdio file access implementation header"
            -- default_value = 0

        CYGINT_ISO_STDIO_FORMATTED_IO
            display = "Number of implementations of stdio formatted I/O"
            [1 >= #CYGINT_ISO_STDIO_FORMATTED_IO]

        CYGBLD_ISO_STDIO_FORMATTED_IO_HEADER -> integer 
            display = "Stdio formatted I/O implementation header"
            -- default_value = 0

        CYGINT_ISO_STDIO_CHAR_IO
            display = "Number of implementations of stdio character I/O"
            [1 >= #CYGINT_ISO_STDIO_CHAR_IO]

        CYGBLD_ISO_STDIO_CHAR_IO_HEADER -> integer 
            display = "Stdio character I/O implementation header"
            -- default_value = 0

        CYGINT_ISO_STDIO_DIRECT_IO
            display = "Number of implementations of stdio direct I/O"
            [1 >= #CYGINT_ISO_STDIO_DIRECT_IO]

        CYGBLD_ISO_STDIO_DIRECT_IO_HEADER -> integer 
            display = "Stdio direct I/O implementation header"
            -- default_value = 0

        CYGINT_ISO_STDIO_FILEPOS
            display = "Number of implementations of stdio file positioning"
            [1 >= #CYGINT_ISO_STDIO_FILEPOS]

        CYGBLD_ISO_STDIO_FILEPOS_HEADER -> integer 
            display = "Stdio file positioning implementation header"
            -- default_value = 0

        CYGINT_ISO_STDIO_ERROR
            display = "Number of implementations of stdio error handling"
            [1 >= #CYGINT_ISO_STDIO_ERROR]

        CYGBLD_ISO_STDIO_ERROR_HEADER -> integer 
            display = "Stdio error handling implementation header"
            -- default_value = 0

        CYGINT_ISO_STDIO_POSIX_FDFUNCS
            display = "POSIX fd-related function implementations"
            [1 >= #CYGINT_ISO_STDIO_POSIX_FDFUNCS]

        CYGBLD_ISO_STDIO_POSIX_FDFUNCS_HEADER -> integer 
            display = "POSIX fd-related function implementation header"
            -- default_value = 0

    CYGPKG_ISO_STDLIB
        display = "Standard general utility functions"

        abstract CYGINT_ISO_STDLIB_STRCONV
            display = "String conversion function implementations"
            [1 >= #CYGINT_ISO_STDLIB_STRCONV]

        CYGBLD_ISO_STDLIB_STRCONV_HEADER -> integer 
            display = "String conversion function implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_STDLIB_STRCONV_FLOAT
            display = "String to FP conversion function implementations"
            [1 >= #CYGINT_ISO_STDLIB_STRCONV_FLOAT]

        CYGBLD_ISO_STDLIB_STRCONV_FLOAT_HEADER -> integer 
            display = "String to FP conversion function implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_RAND
            display = "Random number generator implementations"
            [1 >= #CYGINT_ISO_RAND]

        CYGBLD_ISO_RAND_HEADER -> integer 
            display = "Random number generator implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_MALLOC
            display = "Malloc implementations"
            [1 >= #CYGINT_ISO_MALLOC]

        CYGBLD_ISO_MALLOC_HEADER -> integer 
            display = "Malloc implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_MALLINFO
            display = "Mallinfo() implementations"
            [1 >= #CYGINT_ISO_MALLINFO]

        CYGBLD_ISO_MALLINFO_HEADER -> integer 
            display = "Mallinfo() implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_EXIT
            display = "Program exit functionality implementations"
            [1 >= #CYGINT_ISO_EXIT]

        CYGBLD_ISO_EXIT_HEADER -> integer 
            display = "Program exit functionality implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_STDLIB_ENVIRON
            display = "Program environment implementations"
            [1 >= #CYGINT_ISO_STDLIB_ENVIRON]

        CYGBLD_ISO_STDLIB_ENVIRON_HEADER -> integer 
            display = "Program environment implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_STDLIB_SYSTEM
            display = "system() implementations"
            [1 >= #CYGINT_ISO_STDLIB_SYSTEM]

        CYGBLD_ISO_STDLIB_SYSTEM_HEADER -> integer 
            display = "system() implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_BSEARCH
            display = "bsearch() implementations"
            [1 >= #CYGINT_ISO_BSEARCH]

        CYGBLD_ISO_BSEARCH_HEADER -> integer 
            display = "bsearch() implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_QSORT
            display = "qsort() implementations"
            [1 >= #CYGINT_ISO_STDLIB_QSORT]

        CYGBLD_ISO_QSORT_HEADER -> integer 
            display = "qsort() implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_ABS
            display = "abs()/labs() implementations"
            [1 >= #CYGINT_ISO_STDLIB_ABS]

        CYGBLD_ISO_STDLIB_ABS_HEADER -> integer 
            display = "abs()/labs() implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_DIV
            display = "div()/ldiv() implementations"
            [1 >= #CYGINT_ISO_STDLIB_DIV]

        CYGBLD_ISO_STDLIB_DIV_HEADER -> integer 
            display = "div()/ldiv() implementation header"
            -- default_value = 0

        CYGBLD_ISO_STDLIB_MB_CUR_MAX_HEADER -> integer 
            display = "Header defining the implementation's MB_CUR_MAX"
            -- default_value = 0

        abstract CYGINT_ISO_STDLIB_MULTIBYTE
            display = "Multibyte character implementations"
            [1 >= #CYGINT_ISO_STDLIB_MULTIBYTE]

        CYGBLD_ISO_STDLIB_MULTIBYTE_HEADER -> integer 
            display = "Multibyte character implementation header"
            -- default_value = 0

    CYGPKG_ISO_STRING
        display = "String functions"

        CYGINT_ISO_STRERROR
            display = "Number of implementations of strerror() function"
            [1 >= #CYGINT_ISO_STRERROR]

        CYGBLD_ISO_STRERROR_HEADER -> integer 
            display = "strerror() implementation header"
            -- default_value = 0

        CYGBLD_ISO_MEMCPY_HEADER -> integer 
            display = "memcpy() implementation header"
            -- default_value = 0

        CYGBLD_ISO_MEMSET_HEADER -> integer 
            display = "memset() implementation header"
            -- default_value = 0

        CYGINT_ISO_STRTOK_R
            display = "Number of implementations of strtok_r() function"
            [1 >= #CYGINT_ISO_STRTOK_R]

        CYGBLD_ISO_STRTOK_R_HEADER -> integer 
            display = "strtok_r() implementation header"
            -- default_value = 0

        CYGINT_ISO_STRING_LOCALE_FUNCS
            display = "Number of implementations of locale-specific string  functions"
            [1 >= #CYGINT_ISO_STRING_LOCALE_FUNCS]

        CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER -> integer 
            display = "Locale-specific string functions' implementation  header"
            -- default_value = 0

        CYGINT_ISO_STRING_BSD_FUNCS
            display = "Number of implementations of BSD string functions"
            [1 >= #CYGINT_ISO_STRING_BSD_FUNCS]

        CYGBLD_ISO_STRING_BSD_FUNCS_HEADER -> integer 
            display = "BSD string functions' implementation header"
            -- default_value = 0

        CYGINT_ISO_STRING_MEMFUNCS
            display = "Number of implementations of other mem*() functions"
            [1 >= #CYGINT_ISO_STRING_MEMFUNCS]

        CYGBLD_ISO_STRING_MEMFUNCS_HEADER -> integer 
            display = "Other mem*() functions' implementation header"
            -- default_value = 0

        CYGINT_ISO_STRING_STRFUNCS
            display = "Number of implementations of other ISO C str*()  functions"
            [1 >= #CYGINT_ISO_STRING_STRFUNCS]

        CYGBLD_ISO_STRING_STRFUNCS_HEADER -> integer 
            display = "Other ISO C str*() functions' implementation  header"
            -- default_value = 0

    CYGPKG_ISO_TIME
        display = "Clock and time functionality"

        CYGBLD_ISO_TIME_T_HEADER -> integer 
            display = "time_t implementation header"
            -- default_value = 0

        CYGBLD_ISO_CLOCK_T_HEADER -> integer 
            display = "clock_t implementation header"
            -- default_value = 0

        CYGBLD_ISO_STRUCTTIMEVAL_HEADER -> integer 
            display = "struct timeval implementation header"
            -- default_value = 0

        CYGBLD_ISO_FNMATCH_HEADER -> integer 
            display = "fnmatch implementation header"
            -- default_value = 0

        CYGINT_ISO_POSIX_TIMER_TYPES
            display = "Number of implementations of POSIX timer types"
            [1 >= #CYGINT_ISO_POSIX_TIMER_TYPES]

        CYGBLD_ISO_POSIX_TIMER_TYPES_HEADER -> integer 
            display = "POSIX timer types implementation header"
            -- default_value = 0

        CYGINT_ISO_POSIX_CLOCK_TYPES
            display = "Number of implementations of POSIX clock types"
            [1 >= #CYGINT_ISO_POSIX_CLOCK_TYPES]

        CYGBLD_ISO_POSIX_CLOCK_TYPES_HEADER -> integer 
            display = "POSIX clock types implementation header"
            -- default_value = 0

        CYGINT_ISO_C_TIME_TYPES
            display = "Number of implementations of ISO C types"
            [1 >= #CYGINT_ISO_C_TIME_TYPES]

        CYGBLD_ISO_C_TIME_TYPES_HEADER -> integer 
            display = "ISO C time types implementation header"
            -- default_value = 0

        CYGINT_ISO_POSIX_TIMERS
            display = "Number of implementations of POSIX timers"
            [1 >= #CYGINT_ISO_POSIX_TIMERS]

        CYGBLD_ISO_POSIX_TIMERS_HEADER -> integer 
            display = "POSIX timer implementation header"
            -- default_value = 0

        CYGINT_ISO_POSIX_CLOCKS
            display = "Number of implementations of POSIX clocks"
            [1 >= #CYGINT_ISO_POSIX_CLOCKS]

        CYGBLD_ISO_POSIX_CLOCKS_HEADER -> integer 
            display = "POSIX clocks implementation header"
            -- default_value = 0

        CYGINT_ISO_C_CLOCK_FUNCS
            display = "Number of implementations of ISO C clock functions"
            [1 >= #CYGINT_ISO_C_CLOCK_FUNCS]

        CYGBLD_ISO_C_CLOCK_FUNCS_HEADER -> integer 
            display = "ISO C clock functions' implementation header"
            -- default_value = 0

        CYGINT_ISO_TZSET
            display = "Number of implementations of tzset() function"
            [1 >= #CYGINT_ISO_TZSET]

        CYGBLD_ISO_TZSET_HEADER -> integer 
            display = "tzset() implementation header"
            -- default_value = 0

    CYGPKG_ISO_SIGNAL
        display = "Signal functionality"

        abstract CYGINT_ISO_SIGNAL_NUMBERS
            display = "Number of implementations of signal numbers"
            [1 >= #CYGINT_ISO_SIGNAL_NUMBERS]

        CYGBLD_ISO_SIGNAL_NUMBERS_HEADER -> integer 
            display = "Signal numbering implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_SIGNAL_IMPL
            display = "Number of signal implementations"
            [1 >= #CYGINT_ISO_SIGNAL_IMPL]

        CYGBLD_ISO_SIGNAL_IMPL_HEADER -> integer 
            display = "Signals implementation header"
            -- default_value = 0

        abstract CYGINT_POSIX_REALTIME_SIGNALS
            display = "POSIX real time signals feature test macro"
            [1 >= #CYGINT_POSIX_REALTIME_SIGNALS]

    CYGPKG_ISO_SETJMP
        display = "Non-local jumps functionality"

        abstract CYGINT_ISO_SETJMP
            display = "setjmp() / longjmp() implementations"
            [1 >= #CYGINT_ISO_SETJMP]

        CYGBLD_ISO_SETJMP_HEADER -> integer 
            display = "setjmp() / longjmp() implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_SIGSETJMP
            display = "sigsetjmp() / siglongjmp() implementations"
            [1 >= #CYGINT_ISO_SIGSETJMP]

        CYGBLD_ISO_SIGSETJMP_HEADER -> integer 
            display = "sigsetjmp() / siglongjmp() implementation header"
            -- default_value = 0

    CYGBLD_ISO_ASSERT_HEADER -> integer 
        display = "Assertions implementation header"
        -- default_value = 0

    CYGPKG_ISO_POSIX_FCNTL
        display = "POSIX file control"

        CYGBLD_ISO_OFLAG_HEADER -> integer 
            display = "POSIX open flags implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_FCNTL
            display = "POSIX fcntl() implementations"
            [1 >= #CYGINT_ISO_FCNTL]

        CYGBLD_ISO_FCNTL_HEADER -> integer 
            display = "POSIX fcntl() implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_OPEN
            display = "POSIX file open implementations"
            [1 >= #CYGINT_ISO_OPEN]

        CYGBLD_ISO_OPEN_HEADER -> integer 
            display = "POSIX file open implementation header"
            -- default_value = 0

    CYGBLD_ISO_STAT_DEFS_HEADER -> integer 
        display = "<sys/stat.h> definitions implementation header"
        -- default_value = 0

    abstract CYGINT_ISO_DIRENT
        display = "POSIX directory reading implementation"
        [1 >= #CYGINT_ISO_DIRENT]

    CYGBLD_ISO_DIRENT_HEADER -> integer 
        display = "<dirent.h> definitions implementation header"
        -- default_value = 0

    CYGPKG_ISO_POSIX_TYPES
        display = "POSIX <sys/types.h> contents"

        abstract CYGINT_ISO_PTHREADTYPES
            display = "POSIX thread types implementations"
            [1 >= #CYGINT_ISO_PTHREADTYPES]

        CYGBLD_ISO_PTHREADTYPES_HEADER -> integer 
            display = "POSIX thread types implementation header"
            -- default_value = 0

        abstract CYGINT_ISO_PMUTEXTYPES
            display = "POSIX mutex types implementations"
            [1 >= #CYGINT_ISO_PTHREADTYPES]

        CYGBLD_ISO_PMUTEXTYPES_HEADER -> integer 
            display = "POSIX mutex types implementation header"
            -- default_value = 0

        CYGBLD_ISO_SSIZE_T_HEADER -> integer 
            display = "ssize_t implementation header"
            -- default_value = 0

        CYGBLD_ISO_FSTYPES_HEADER -> integer 
            display = "Filesystem types implementation header"
            -- default_value = 0

        CYGBLD_ISO_SCHEDTYPES_HEADER -> integer 
            display = "gid_t, pid_t, uid_t implementation header"
            -- default_value = 0

    CYGPKG_ISO_EXTRA_TYPES
        display = "Non-POSIX <sys/types.h> contents"

        abstract CYGINT_ISO_BSDTYPES
            display = "BSD compatible types"
            [1 >= #CYGINT_ISO_BSDTYPES]

        CYGBLD_ISO_BSDTYPES_HEADER -> integer 
            display = "BSD types header"
            -- default_value = 0

    CYGPKG_ISO_UTSNAME
        display = "Utsname structure"

        CYGBLD_ISO_UTSNAME_HEADER -> integer 
            display = "Utsname header"
            -- default_value = 0

    CYGPKG_ISO_SCHED
        display = "POSIX scheduler"

        abstract CYGINT_ISO_SCHED_IMPL
            display = "POSIX scheduler implementations"
            [1 >= #CYGINT_ISO_SCHED_IMPL]

        CYGBLD_ISO_SCHED_IMPL_HEADER -> integer 
            display = "POSIX scheduler implementation header"
            -- default_value = 0

    CYGPKG_ISO_SEMAPHORES
        display = "POSIX semaphores"

        abstract CYGINT_ISO_SEMAPHORES
            display = "POSIX semaphore implementations"
            [1 >= #CYGINT_ISO_SEMAPHORES]

        CYGBLD_ISO_SEMAPHORES_HEADER -> integer 
            display = "POSIX semaphore implementation header"
            -- default_value = 0

    CYGPKG_ISO_MQUEUE
        display = "POSIX message queues"

        abstract CYGINT_ISO_MQUEUE
            display = "Implementations"
            [1 >= #CYGINT_ISO_MQUEUE]

        CYGBLD_ISO_MQUEUE_HEADER -> integer 
            display = "Implementation header"
            -- default_value = 0

        CYGNUM_ISO_MQUEUE_OPEN_MAX
            display = "Maximum number of open message queues"
            -- default_value = ((#CYGNUM_POSIX_MQUEUE_OPEN_MAX > 0) => CYGNUM_POSIX_MQUEUE_OPEN_MAX else 0)
            -- ifActive
            [CYGINT_ISO_MQUEUE]

        CYGNUM_ISO_MQUEUE_PRIO_MAX -> integer 
            display = "Maximum number of message priorities"
            -- default_value = 65535
            -- ifActive
            [CYGINT_ISO_MQUEUE]

    CYGPKG_ISO_PTHREAD
        display = "POSIX threads"

        CYGINT_ISO_PTHREAD_IMPL
            display = "POSIX pthread implementations"
            [1 >= #CYGINT_ISO_PTHREAD_IMPL]

        CYGBLD_ISO_PTHREAD_IMPL_HEADER -> integer 
            display = "POSIX pthread implementation header"
            -- default_value = 0

        CYGINT_ISO_PTHREAD_MUTEX
            display = "POSIX mutex/cond var implementations"
            [1 >= #CYGINT_ISO_PTHREAD_MUTEX]

        CYGBLD_ISO_PTHREAD_MUTEX_HEADER -> integer 
            display = "POSIX mutex/cond var implementation header"
            -- default_value = 0

    CYGPKG_ISO_LIMITS
        display = "Limits"

        abstract CYGINT_ISO_POSIX_LIMITS
            display = "POSIX pthread limits implementations"
            [1 >= #CYGINT_ISO_POSIX_LIMITS]

        CYGBLD_ISO_POSIX_LIMITS_HEADER -> integer 
            display = "POSIX pthread limits implementation header"
            -- default_value = 0

        CYGBLD_ISO_OPEN_MAX_HEADER -> integer 
            display = "OPEN_MAX implementation header"
            -- default_value = 0

        CYGBLD_ISO_LINK_MAX_HEADER -> integer 
            display = "LINK_MAX implementation header"
            -- default_value = 0

        CYGBLD_ISO_NAME_MAX_HEADER -> integer 
            display = "NAME_MAX implementation header"
            -- default_value = 0

        CYGBLD_ISO_PATH_MAX_HEADER -> integer 
            display = "PATH_MAX implementation header"
            -- default_value = 0

    CYGPKG_ISO_TERMIOS
        display = "POSIX termios"

        abstract CYGINT_ISO_TERMIOS
            display = "POSIX termios implementations"
            [1 >= #CYGINT_ISO_TERMIOS]

        CYGBLD_ISO_TERMIOS_HEADER -> integer 
            display = "POSIX termios implementation header"
            -- default_value = 0

    CYGPKG_ISO_DLFCN
        display = "Dynamic load API"

        abstract CYGINT_ISO_DLFCN
            display = "Dynamic load implementations"
            [1 >= #CYGINT_ISO_DLFCN]

        CYGBLD_ISO_DLFCN_HEADER -> integer 
            display = "Dynamic load implementation header"
            -- default_value = 0

    CYGPKG_ISO_UNISTD
        display = "UNIX standard functions"

        CYGINT_ISO_POSIX_TIMER_OPS
            display = "POSIX timer operations implementations"
            [1 >= #CYGINT_ISO_POSIX_TIMER_OPS]

        CYGBLD_ISO_POSIX_TIMER_OPS_HEADER -> integer 
            display = "POSIX timer operations implementation header"
            -- default_value = 0

        CYGINT_ISO_POSIX_SLEEP
            display = "POSIX sleep() implementations"
            [1 >= #CYGINT_ISO_POSIX_SLEEP]

        CYGBLD_ISO_POSIX_SLEEP_HEADER -> integer 
            display = "POSIX sleep() implementation header"
            -- default_value = 0

    CYGPKG_ISO_SELECT
        display = "select()/poll() functions"

        CYGINT_ISO_SELECT
            display = "select() implementations"
            [1 >= #CYGINT_ISO_SELECT]

        CYGBLD_ISO_SELECT_HEADER -> integer 
            display = "select() implementation header"
            -- default_value = 0

        CYGINT_ISO_POLL
            display = "poll() implementations"
            [1 >= #CYGINT_ISO_POLL]

        CYGBLD_ISO_POLL_HEADER -> integer 
            display = "poll() implementation header"
            -- default_value = 0

    CYGPKG_ISO_NETDB
        display = "NetDB utility functions"

        CYGINT_ISO_DNS
            display = "DNS implementations"
            [1 >= #CYGINT_ISO_DNS]

        CYGBLD_ISO_DNS_HEADER -> integer 
            display = "DNS implementation header"
            -- default_value = 0

        CYGINT_ISO_NETDB_PROTO
            display = "Protocol network database implementations"
            [1 >= #CYGINT_ISO_NETDB_PROTO]

        CYGBLD_ISO_NETDB_PROTO_HEADER -> integer 
            display = "Protocol network database implementation header"
            -- default_value = 0

        CYGINT_ISO_NETDB_SERV
            display = "Services network database implementations"
            [1 >= #CYGINT_ISO_NETDB_SERV]

        CYGBLD_ISO_NETDB_SERV_HEADER -> integer 
            display = "Services network database implementation header"
            -- default_value = 0

    CYGPKG_ISOINFRA_OPTIONS
        display = "Build options"

        CYGPKG_ISOINFRA_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_ISOINFRA_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

CYGPKG_LIBC
    display = "ISO C library"

    CYGPKG_LIBC_I18N
        display = "ISO C library internationalization functions"
        'CYGINT_ISO_LOCALE
        'CYGINT_ISO_CTYPE
        'CYGINT_ISO_STDLIB_MULTIBYTE
        [CYGPKG_ISOINFRA]

        CYGPKG_LIBC_I18N_LOCALES
            display = "Supported locales"

            CYGINT_LIBC_I18N_MB_REQUIRED
                display = "Support for multiple locales required"
                [CYGBLD_ISO_STDLIB_MB_CUR_MAX_HEADER = "<cyg/libc/i18n/mb.h>"]

            CYGFUN_LIBC_I18N_LOCALE_C_SJIS extends CYGINT_LIBC_I18N_MB_REQUIRED ?
                display = "C-SJIS locale support"
                -- default_value = 0

            CYGFUN_LIBC_I18N_LOCALE_C_JIS extends CYGINT_LIBC_I18N_MB_REQUIRED ?
                display = "C-JIS locale support"
                -- default_value = 0

            CYGFUN_LIBC_I18N_LOCALE_C_EUCJP extends CYGINT_LIBC_I18N_MB_REQUIRED ?
                display = "C-EUCJP locale support"
                -- default_value = 0

        CYGPKG_LIBC_I18N_NEWLIB_CTYPE ?
            display = "Newlib's ctype implementation"
            -- default_value = 0
            [CYGBLD_ISO_CTYPE_HEADER = "<cyg/libc/i18n/newlibctype.h>"]

        CYGSEM_LIBC_I18N_PER_THREAD_MB ?
            display = "Per-thread multibyte state"
            -- default_value = #CYGVAR_KERNEL_THREADS_DATA != 0
            -- ifActive
            [CYGPKG_KERNEL]
            [CYGVAR_KERNEL_THREADS_DATA]

        CYGNUM_LIBC_I18N_MAX_LOCALE_NAME_SIZE -> integer 
            display = "Size of locale name strings"
            -- default_value = ((CYGFUN_LIBC_I18N_LOCALE_C_EUCJP) => 8 else ((CYGFUN_LIBC_I18N_LOCALE_C_SJIS) => 7 else ((CYGFUN_LIBC_I18N_LOCALE_C_JIS) => 6 else 2)))
            [((CYGFUN_LIBC_I18N_LOCALE_C_EUCJP) => 8 else ((CYGFUN_LIBC_I18N_LOCALE_C_SJIS) => 7 else ((CYGFUN_LIBC_I18N_LOCALE_C_JIS) => 6 else 2))) <= this && this <= 0x7fffffff]

        CYGIMP_LIBC_I18N_CTYPE_INLINES ?
            display = "Inline versions of <ctype.h> functions"
            -- default_value = 1
            [CYGBLD_ISO_CTYPE_HEADER = "<cyg/libc/i18n/ctype.inl>"]

        CYGPKG_LIBC_I18N_OPTIONS
            display = "C library i18n functions build options"

            CYGPKG_LIBC_I18N_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_I18N_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_I18N_TESTS -> string 
                display = "C library i18n function tests"
                calculated: [this = 
                "tests/ctype tests/setlocale tests/i18nmb"]

    CYGPKG_LIBC_SETJMP extends CYGINT_ISO_SETJMP
        display = "ISO C library setjmp/longjmp functions"
        [CYGPKG_ISOINFRA]
        [CYGBLD_ISO_SETJMP_HEADER = "<cyg/libc/setjmp/setjmp.h>"]

        CYGPKG_LIBC_SETJMP_OPTIONS
            display = "C library setjmp build options"

            CYGPKG_LIBC_SETJMP_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_SETJMP_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_SETJMP_TESTS -> string 
                display = "C library setjmp tests"
                calculated: [this = 
                "tests/setjmp"]

    CYGPKG_LIBC_STARTUP
        display = "ISO environment startup/termination"
        'CYGINT_ISO_EXIT
        'CYGINT_ISO_MAIN_STARTUP
        'CYGINT_ISO_ENVIRON
        [CYGPKG_ISOINFRA]
        [#CYGINT_LIBC_STARTUP_CONTEXT = 1]

        CYGINT_LIBC_STARTUP_EXTERNAL_INVOKE_MAIN_POSSIBLE
            display = "main() can be invoked elsewhere"

        CYGDAT_LIBC_ARGUMENTS -> string 
            display = "Arguments to main()"
            -- default_value = "{(char *)\"\", (char *)NULL}"

        CYGPKG_LIBC_STARTUP_CONTEXT
            display = "Startup context for main()"

            abstract CYGINT_LIBC_STARTUP_CONTEXT
                display = "Startup context implementors"

            CYGSEM_LIBC_STARTUP_MAIN_INITCONTEXT ?
                display = "Invoked from initialization context"
                'CYGINT_LIBC_STARTUP_CONTEXT
                'CYGINT_LIBC_STARTUP_MAIN_NO_STACK_SIZE
                -- default_value = 0 = #CYGPKG_KERNEL && 0 = #CYGINT_LIBC_STARTUP_EXTERNAL_INVOKE_MAIN_POSSIBLE

            CYGSEM_LIBC_STARTUP_MAIN_THREAD extends CYGINT_LIBC_STARTUP_CONTEXT
                display = "Invoked as eCos thread"
                -- default_value = 0 != #CYGPKG_KERNEL && 0 = #CYGINT_LIBC_STARTUP_EXTERNAL_INVOKE_MAIN_POSSIBLE
                [CYGPKG_KERNEL]

                CYGSEM_LIBC_MAIN_STACK_FROM_SYSTEM ?
                    display = "System provides stack for main()'s thread"
                    -- default_value = 1

                CYGNUM_LIBC_MAIN_THREAD_PRIORITY -> integer 
                    display = "Priority of main()'s thread"
                    -- default_value = 10
                    [0 <= this && this <= 0x7fffffff]

            CYGSEM_LIBC_STARTUP_MAIN_OTHER extends CYGINT_LIBC_STARTUP_CONTEXT ?
                display = "Invoked elsewhere"
                -- default_value = 0 != #CYGINT_LIBC_STARTUP_EXTERNAL_INVOKE_MAIN_POSSIBLE
                [CYGINT_LIBC_STARTUP_EXTERNAL_INVOKE_MAIN_POSSIBLE]

        CYGINT_LIBC_STARTUP_MAIN_NO_STACK_SIZE
            display = "Don't allow main()'s stack size to be set"

        CYGNUM_LIBC_MAIN_DEFAULT_STACK_SIZE -> integer 
            display = "main()'s default thread stack size"
            -- default_value = 8192
            [16 <= this && this <= 0x7fffffff]
            -- ifActive
            [!CYGINT_LIBC_STARTUP_MAIN_NO_STACK_SIZE]

        CYGFUN_LIBC_ATEXIT
            display = "Include atexit() function"
            -- default_value = 1

            CYGNUM_LIBC_ATEXIT_HANDLERS -> integer 
                display = "Number of functions atexit() supports"
                -- default_value = 32
                [1 <= this && this <= 0x7fffffff]

        CYGSEM_LIBC_EXIT_CALLS_FFLUSH ?
            display = "Make exit() call fflush()"
            -- default_value = 0 != #CYGINT_ISO_STDIO_FILEACCESS
            [CYGINT_ISO_STDIO_FILEACCESS]

        CYGSEM_LIBC_EXIT_STOPS_SYSTEM ?
            display = "_exit() stops all threads"
            -- default_value = 0
            [CYGPKG_KERNEL]

        CYGDAT_LIBC_DEFAULT_ENVIRONMENT -> string 
            display = "Default environment"
            -- default_value = "{ NULL }"

        CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS ?
            display = "Invoke default static constructors"
            -- default_value = 0
            [CYGSEM_HAL_STOP_CONSTRUCTORS_ON_FLAG]
            [CYGSEM_LIBC_STARTUP_MAIN_THREAD || CYGSEM_LIBC_STARTUP_MAIN_OTHER && CYGPKG_POSIX_PTHREAD]

        CYGPKG_LIBC_STARTUP_OPTIONS
            display = "ISO environment startup/termination build options"

            CYGPKG_LIBC_STARTUP_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_STARTUP_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_STARTUP_TESTS -> string 
                display = "ISO environment startup/termination tests"
                calculated: [this = 
                "tests/atexit"]

    CYGPKG_LIBC_STDIO
        display = "ISO C library standard input/output functions"
        'CYGINT_ISO_STDIO_FILETYPES
        'CYGINT_ISO_STDIO_FILEACCESS
        'CYGINT_ISO_STDIO_FILEPOS
        'CYGINT_ISO_STDIO_FILEOPS
        'CYGINT_ISO_STDIO_FORMATTED_IO
        'CYGINT_ISO_STDIO_CHAR_IO
        'CYGINT_ISO_STDIO_DIRECT_IO
        'CYGINT_ISO_STDIO_ERROR
        'CYGINT_ISO_STDIO_STREAMS
        [CYGPKG_IO]
        [CYGPKG_LIBC_I18N]
        [((CYGDAT_LIBC_STDIO_DEFAULT_CONSOLE = "\"/dev/ttydiag\"") => CYGPKG_IO_SERIAL_HALDIAG else 1)]
        [CYGBLD_ISO_STDIO_FILETYPES_HEADER = "<cyg/libc/stdio/stdio.h>"]
        [CYGBLD_ISO_STDIO_FILEACCESS_HEADER = "<cyg/libc/stdio/stdio.h>"]
        [CYGBLD_ISO_STDIO_FILEPOS_HEADER = "<cyg/libc/stdio/stdio.h>"]
        [CYGBLD_ISO_STDIO_FILEOPS_HEADER = "<cyg/libc/stdio/stdio.h>"]
        [CYGBLD_ISO_STDIO_FORMATTED_IO_HEADER = "<cyg/libc/stdio/stdio.h>"]
        [CYGBLD_ISO_STDIO_CHAR_IO_HEADER = "<cyg/libc/stdio/stdio.h>"]
        [CYGBLD_ISO_STDIO_DIRECT_IO_HEADER = "<cyg/libc/stdio/stdio.h>"]
        [CYGBLD_ISO_STDIO_ERROR_HEADER = "<cyg/libc/stdio/stdio.h>"]
        [CYGBLD_ISO_STDIO_STREAMS_HEADER = "<cyg/libc/stdio/stdio.h>"]
        [CYGPKG_ISOINFRA]
        [CYGINT_ISO_ERRNO_CODES]
        [CYGINT_ISO_ERRNO]
        [CYGINT_ISO_STRERROR]
        [CYGINT_ISO_STRING_STRFUNCS]
        [CYGINT_ISO_STRING_MEMFUNCS]
        [CYGINT_ISO_STDLIB_STRCONV]

        CYGIMP_LIBC_STDIO_INLINES ?
            display = "Inline versions of <stdio.h> functions"
            -- default_value = 1

        FOPEN_MAX -> integer 
            display = "Permitted number of open files"
            -- default_value = 8
            [3 <= this && this <= 0x7fffffff]

        FILENAME_MAX -> integer 
            display = "Maximum length of filename"
            -- default_value = 16
            [1 <= this && this <= 0x7fffffff]

        L_tmpnam -> integer 
            display = "Maximum length of filenames for temporary files"
            -- default_value = 16
            [4 <= this && this <= 0x7fffffff]

        TMP_MAX -> integer 
            display = "Unique file names generated by tmpnam()"
            -- default_value = 25
            [1 <= this && this <= 0x7fffffff]

        CYGSEM_LIBC_STDIO_WANT_BUFFERED_IO
            display = "Buffered I/O"
            -- default_value = 1

            CYGNUM_LIBC_STDIO_BUFSIZE -> integer 
                display = "Default buffer size"
                -- default_value = 256
                [1 <= this && this <= 0x7fffffff]

            CYGSEM_LIBC_STDIO_DYNAMIC_SETVBUF ?
                display = "setbuf()/setvbuf() allows dynamic setting"
                -- default_value = 1

            CYGSEM_LIBC_STDIO_SETVBUF_MALLOC ?
                display = "setbuf()/setvbuf() uses malloc()"
                -- default_value = 0 != #CYGINT_ISO_MALLOC
                [CYGINT_ISO_MALLOC]
                [CYGSEM_LIBC_STDIO_DYNAMIC_SETVBUF]

        BUFSIZ
            display = "Default buffer size (BUFSIZ)"
            calculated: [this = 
            CYGSEM_LIBC_STDIO_WANT_BUFFERED_IO => CYGNUM_LIBC_STDIO_BUFSIZE else 0]

        CYGFUN_LIBC_STDIO_ungetc ?
            display = "Support for ungetc()"
            -- default_value = 1

        CYGPKG_LIBC_STDIO_OPEN
            display = "Dynamic opening/closing of files"
            -- default_value = 0 != #CYGINT_ISO_MALLOC
            [CYGINT_ISO_MALLOC]

            CYGFUN_LIBC_STDIO_OPEN_POSIX_FDFUNCS extends CYGINT_ISO_STDIO_POSIX_FDFUNCS ?
                display = "POSIX fdopen/fileno functions"
                -- ifActive
                [CYGPKG_LIBC_STDIO_FILEIO]
                calculated: [this = 
                1]

        CYGDAT_LIBC_STDIO_DEFAULT_CONSOLE
            display = "Default console device"
            -- default_value = ((CYGDAT_IO_SERIAL_TTY_CONSOLE) => CYGDAT_IO_SERIAL_TTY_CONSOLE else "\"/dev/null\"")

        CYGPKG_LIBC_STDIO_FLOATING_POINT
            display = "Floating point support"

            CYGSEM_LIBC_STDIO_PRINTF_FLOATING_POINT ?
                display = "printf() family"
                -- default_value = 0 != #CYGPKG_LIBM
                [CYGPKG_LIBM]

            CYGSEM_LIBC_STDIO_SCANF_FLOATING_POINT ?
                display = "scanf() family"
                -- default_value = 0 != #CYGPKG_LIBM && 0 != #CYGINT_ISO_STDLIB_STRCONV_FLOAT
                [CYGPKG_LIBM]
                [CYGINT_ISO_STDLIB_STRCONV_FLOAT]

        CYGFUN_LIBC_STDIO_LONGLONG ?
            display = "Long long support"
            -- default_value = 1
            [CYGFUN_LIBC_STDLIB_CONV_LONGLONG]

        CYGSEM_LIBC_STDIO_THREAD_SAFE_STREAMS ?
            display = "Thread safe I/O streams"
            -- default_value = 1
            -- ifActive
            [CYGPKG_KERNEL]

        CYGPKG_LIBC_STDIO_FILEIO ?
            display = "Enable use of FILEIO package for IO operations."
            -- ifActive
            [CYGPKG_IO_FILEIO]
            [CYGSEM_LIBC_STDIO_WANT_BUFFERED_IO]
            [CYGSEM_LIBC_STDIO_DYNAMIC_SETVBUF]
            calculated: [this = 
            1]

        CYGPKG_LIBC_STDIO_OPTIONS
            display = "C library stdio functions build options"

            CYGPKG_LIBC_STDIO_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_STDIO_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_STDIO_TESTS -> string 
                display = "C library stdio function tests"
                calculated: [this = 
                ("tests/sprintf1 tests/sprintf2 tests/sscanf tests/stdiooutput ") ++
                        (CYGPKG_IO_FILEIO && CYGPKG_FS_RAM => "tests/fileio " else "")]

    CYGPKG_LIBC_STDLIB
        display = "ISO C library general utility functions"
        'CYGINT_ISO_STDLIB_STRCONV
        'CYGINT_ISO_STDLIB_ENVIRON
        'CYGINT_ISO_STDLIB_SYSTEM
        'CYGINT_ISO_BSEARCH
        'CYGINT_ISO_QSORT
        'CYGINT_ISO_ABS
        'CYGINT_ISO_DIV
        [CYGPKG_ISOINFRA]
        [CYGINT_ISO_CTYPE]
        [CYGINT_ISO_STRING_STRFUNCS]

        CYGIMP_LIBC_STDLIB_INLINES
            display = "Inline versions of <stdlib.h> functions"

            CYGIMP_LIBC_STDLIB_INLINE_ABS ?
                display = "abs() / labs()"
                -- default_value = 1
                [CYGBLD_ISO_STDLIB_ABS_HEADER = "<cyg/libc/stdlib/abs.inl>"]

            CYGIMP_LIBC_STDLIB_INLINE_DIV ?
                display = "div() / ldiv()"
                -- default_value = 1
                [CYGBLD_ISO_STDLIB_DIV_HEADER = "<cyg/libc/stdlib/div.inl>"]

            CYGIMP_LIBC_STDLIB_INLINE_ATOX ?
                display = "atof() / atoi() / atol()"
                -- default_value = 1
                [CYGBLD_ISO_STDLIB_STRCONV_HEADER = "<cyg/libc/stdlib/atox.inl>"]

        CYGPKG_LIBC_RAND
            display = "Random number generation"

            CYGSEM_LIBC_PER_THREAD_RAND ?
                display = "Per-thread random seed"
                -- default_value = 0
                [CYGVAR_KERNEL_THREADS_DATA]

            CYGNUM_LIBC_RAND_SEED -> integer 
                display = "Random number seed"
                -- default_value = 1
                [0 <= this && this <= 0x7fffffff]

            CYGNUM_LIBC_RAND_TRACE_LEVEL -> integer 
                display = "Tracing level"
                -- default_value = 0
                [0 <= this && this <= 1]

            CYGIMP_LIBC_RAND_SIMPLEST extends CYGINT_ISO_RAND ?
                display = "Simplest implementation"
                -- default_value = 0

            CYGIMP_LIBC_RAND_SIMPLE1 extends CYGINT_ISO_RAND ?
                display = "Simple implementation #1"
                -- default_value = 1

            CYGIMP_LIBC_RAND_KNUTH1 extends CYGINT_ISO_RAND ?
                display = "Knuth implementation #1"
                -- default_value = 0

        CYGFUN_LIBC_strtod extends CYGINT_ISO_STDLIB_STRCONV_FLOAT ?
            display = "Provides strtod()"
            -- default_value = 0 != #CYGPKG_LIBM
            [CYGPKG_LIBM]

        CYGFUN_LIBC_STDLIB_CONV_LONGLONG ?
            display = "Provides long long conversion functions"
            -- default_value = 1

        CYGNUM_LIBC_BSEARCH_TRACE_LEVEL -> integer 
            display = "bsearch() tracing level"
            -- default_value = 0
            [0 <= this && this <= 1]

        CYGNUM_LIBC_QSORT_TRACE_LEVEL -> integer 
            display = "qsort() tracing level"
            -- default_value = 0
            [0 <= this && this <= 1]

        CYGPKG_LIBC_STDLIB_OPTIONS
            display = "C library stdlib build options"

            CYGPKG_LIBC_STDLIB_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_STDLIB_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_STDLIB_TESTS -> string 
                display = "C library stdlib tests"
                calculated: [this = 
                "tests/abs tests/atoi tests/atol tests/bsearch tests/div tests/getenv tests/labs tests/ldiv tests/qsort tests/rand1 tests/rand2 tests/rand3 tests/rand4 tests/srand tests/strtol tests/strtoul"]

    CYGPKG_LIBC_STRING
        display = "ISO C library string functions"
        'CYGINT_ISO_STRTOK_R
        'CYGINT_ISO_STRING_LOCALE_FUNCS
        'CYGINT_ISO_STRING_MEMFUNCS
        'CYGINT_ISO_STRING_STRFUNCS
        [CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER = "<cyg/libc/string/string.h>"]
        [CYGBLD_ISO_STRING_MEMFUNCS_HEADER = "<cyg/libc/string/string.h>"]
        [CYGBLD_ISO_STRING_STRFUNCS_HEADER = "<cyg/libc/string/string.h>"]
        [CYGBLD_ISO_STRTOK_R_HEADER = "<cyg/libc/string/string.h>"]
        [CYGPKG_ISOINFRA]

        CYGIMP_LIBC_STRING_INLINES ?
            display = "Inline versions of <string.h> functions"
            -- default_value = 1

        CYGIMP_LIBC_STRING_PREFER_SMALL_TO_FAST ?
            display = "Optimize string functions for code size"
            -- default_value = 0

        CYGFUN_LIBC_STRING_BSD_FUNCS extends CYGINT_ISO_STRING_BSD_FUNCS ?
            display = "Provide BSD compatibility functions"
            -- default_value = 1
            [CYGBLD_ISO_STRING_BSD_FUNCS_HEADER = "<cyg/libc/string/bsdstring.h>"]
            [CYGINT_ISO_CTYPE]

        CYGPKG_LIBC_STRING_STRTOK
            display = "strtok"

            CYGSEM_LIBC_STRING_PER_THREAD_STRTOK ?
                display = "Per-thread strtok()"
                -- default_value = CYGVAR_KERNEL_THREADS_DATA
                -- ifActive
                [CYGPKG_KERNEL]
                [CYGVAR_KERNEL_THREADS_DATA]

            CYGNUM_LIBC_STRING_STRTOK_TRACE_LEVEL -> integer 
                display = "Tracing level"
                -- default_value = 0
                [0 <= this && this <= 1]

        CYGFUN_LIBC_STRING_STRDUP ?
            display = "strdup"
            -- ifActive
            [CYGINT_ISO_MALLOC]
            calculated: [this = 
            1]

        CYGPKG_LIBC_STRING_OPTIONS
            display = "C library string functions build options"

            CYGPKG_LIBC_STRING_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_STRING_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_STRING_TESTS -> string 
                display = "C library string function tests"
                calculated: [this = 
                "tests/memchr tests/memcmp1 tests/memcmp2 tests/memcpy1 tests/memcpy2 tests/memmove1 tests/memmove2 tests/memset tests/strcat1 tests/strcat2 tests/strchr tests/strcmp1 tests/strcmp2 tests/strcoll1 tests/strcoll2 tests/strcpy1 tests/strcpy2 tests/strcspn tests/strcspn tests/strlen tests/strncat1 tests/strncat2 tests/strncpy1 tests/strncpy2 tests/strpbrk tests/strrchr tests/strspn tests/strstr tests/strtok tests/strxfrm1 tests/strxfrm2"]

    CYGPKG_LIBC_TIME
        display = "ISO C library date and time functions"
        'CYGINT_ISO_C_TIME_TYPES
        'CYGINT_ISO_C_CLOCK_FUNCS
        [CYGBLD_ISO_C_TIME_TYPES_HEADER = "<cyg/libc/time/time.h>"]
        [CYGBLD_ISO_C_CLOCK_FUNCS_HEADER = "<cyg/libc/time/time.h>"]
        [CYGPKG_ISOINFRA]
        [CYGINT_ISO_DIV]
        [CYGINT_ISO_ABS]

        CYGSEM_LIBC_TIME_CLOCK_WORKING ?
            display = "Working clock() function"
            -- default_value = 1
            [CYGFUN_KERNEL_THREADS_TIMER]
            [CYGVAR_KERNEL_COUNTERS_CLOCK]

        CYGSEM_LIBC_TIME_TIME_WORKING ?
            display = "Working time() function"
            -- default_value = 1
            [CYGPKG_IO_WALLCLOCK]

        CYGSEM_LIBC_TIME_SETTIME_WORKING ?
            display = "Working cyg_libc_time_settime() function"
            -- default_value = 1
            [CYGPKG_IO_WALLCLOCK]

        CYGFUN_LIBC_TIME_POSIX ?
            display = "POSIX time functions"
            -- default_value = 1
            [CYGINT_ISO_STRING_BSD_FUNCS]

        CYGFUN_LIBC_TIME_SUS_EXTNS ?
            display = "Single UNIX extensions"
            -- default_value = 0

        CYGPKG_LIBC_TIME_ZONES
            display = "Time zone offsets"

            CYGNUM_LIBC_TIME_DST_DEFAULT_STATE -> integer 
                display = "Default Daylight Savings Time state"
                -- default_value = -1
                [-1 <= this && this <= 1]

            CYGNUM_LIBC_TIME_STD_DEFAULT_OFFSET -> integer 
                display = "Default Standard Time offset"
                -- default_value = 0
                [-90000 <= this && this <= 90000]

            CYGNUM_LIBC_TIME_DST_DEFAULT_OFFSET -> integer 
                display = "Default Daylight Savings Time offset"
                -- default_value = 3600
                [-90000 <= this && this <= 90000]

        CYGPKG_LIBC_TIME_INLINES
            display = "Inline functions"

            CYGIMP_LIBC_TIME_ASCTIME_INLINE ?
                display = "asctime()"
                -- default_value = 1

            CYGIMP_LIBC_TIME_CTIME_INLINE ?
                display = "ctime()"
                -- default_value = 1

            CYGIMP_LIBC_TIME_DIFFTIME_INLINE ?
                display = "difftime()"
                -- default_value = 1

            CYGIMP_LIBC_TIME_GMTIME_INLINE ?
                display = "gmtime()"
                -- default_value = 1

            CYGIMP_LIBC_TIME_LOCALTIME_INLINE ?
                display = "localtime()"
                -- default_value = 1

            CYGIMP_LIBC_TIME_MKTIME_INLINE ?
                display = "mktime()"
                -- default_value = 0

            CYGIMP_LIBC_TIME_ASCTIME_R_INLINE ?
                display = "asctime_r()"
                -- default_value = 1
                [CYGFUN_LIBC_TIME_POSIX]

            CYGIMP_LIBC_TIME_CTIME_R_INLINE ?
                display = "ctime_r()"
                -- default_value = 1
                [CYGFUN_LIBC_TIME_POSIX]

            CYGIMP_LIBC_TIME_GMTIME_R_INLINE ?
                display = "gmtime_r()"
                -- default_value = 0
                [CYGFUN_LIBC_TIME_POSIX]

            CYGIMP_LIBC_TIME_LOCALTIME_R_INLINE ?
                display = "localtime_r()"
                -- default_value = 1
                [CYGFUN_LIBC_TIME_POSIX]

        CYGNUM_LIBC_TIME_CLOCK_TRACE_LEVEL -> integer 
            display = "clock() tracing level"
            -- default_value = 0
            [0 <= this && this <= 1]

        CYGPKG_LIBC_TIME_OPTIONS
            display = "C library time functions build options"

            CYGPKG_LIBC_TIME_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = "-Wno-format"

            CYGPKG_LIBC_TIME_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_LIBC_TIME_TESTS -> string 
                display = "C library time and date function tests"
                calculated: [this = 
                ("tests/asctime tests/clock tests/ctime tests/gmtime tests/localtime tests/mktime tests/strftime tests/time ") ++
                        (CYGFUN_LIBC_TIME_POSIX => "tests/strptime" else "")]

CYGPKG_LIBM
    display = "Math library"

    CYGPKG_LIBM_COMPATIBILITY
        display = "Compatibility mode"

        abstract CYGINT_LIBM_COMPAT
            [1 = #CYGINT_LIBM_COMPAT]

        CYGSEM_LIBM_COMPAT_IEEE_ONLY extends CYGINT_LIBM_COMPAT ?
            display = "IEEE-only"
            -- default_value = 0

        CYGNUM_LIBM_COMPATIBILITY extends CYGINT_LIBM_COMPAT -> CYGNUM_LIBM_COMPATIBILITY_ENUM 
            display = "Default mode"
            -- default_value = "POSIX"
            [CYGPKG_LIBC]
enum CYGNUM_LIBM_COMPATIBILITY_ENUM = "POSIX" | "IEEE" | "XOPEN" | "SVID"

            CYGNUM_LIBM_COMPAT_DEFAULT -> string 
                display = "Numeric representation"
                calculated: [this = 
                                    CYGNUM_LIBM_COMPATIBILITY = "POSIX" => "CYGNUM_LIBM_COMPAT_POSIX"
                        else 
                                    CYGNUM_LIBM_COMPATIBILITY = "IEEE" => "CYGNUM_LIBM_COMPAT_IEEE"
                            else 
                                        CYGNUM_LIBM_COMPATIBILITY = "XOPEN" => "CYGNUM_LIBM_COMPAT_XOPEN"
                                else 
                        (CYGNUM_LIBM_COMPATIBILITY = "SVID" => "CYGNUM_LIBM_COMPAT_SVID" else "<undefined>")]

        CYGFUN_LIBM_SVID3_scalb ?
            display = "SVID3-style scalb()"
            -- default_value = 1

        CYGSYM_LIBM_NO_XOPEN_SVID_NAMESPACE_POLLUTION ?
            display = "Reduce namespace pollution"
            -- default_value = 0

        CYGSEM_LIBM_USE_STDERR ?
            display = "Output to stderr for math errors"
            -- default_value = 0
            [!CYGSEM_LIBM_COMPAT_IEEE_ONLY]
            [CYGPKG_LIBC_STDIO]

    CYGPKG_LIBM_THREAD_SAFETY
        display = "Thread safety"

        CYGSEM_LIBM_THREAD_SAFE_COMPAT_MODE ?
            display = "Compatibility mode setting"
            -- default_value = 0
            [!CYGSEM_LIBM_COMPAT_IEEE_ONLY]
            [CYGVAR_KERNEL_THREADS_DATA]

        CYGSEM_LIBM_THREAD_SAFE_GAMMA_FUNCTIONS ?
            display = "gamma() and lgamma()"
            -- default_value = 0
            [CYGVAR_KERNEL_THREADS_DATA]

    CYGPKG_LIBM_TRACE
        display = "Tracing output levels in math library"
        -- default_value = 0
        [CYGDBG_USE_TRACING]

        CYGNUM_LIBM_COMPATMODE_TRACE_LEVEL -> integer 
            display = "Compatibility mode get/set"
            -- default_value = 0
            [0 <= this && this <= 1]
            [CYGSEM_LIBM_THREAD_SAFE_COMPAT_MODE]

        CYGNUM_LIBM_SIGNGAM_TRACE_LEVEL -> integer 
            display = "signgam variable access"
            -- default_value = 0
            [0 <= this && this <= 1]
            [CYGSEM_LIBM_THREAD_SAFE_GAMMA_FUNCTIONS]

    CYGNUM_LIBM_X_TLOSS -> integer 
        display = "Bessel function limit of significance"
        -- default_value = 2147483647
        [1 <= this && this <= 2147483647]

    CYGPKG_LIBM_OPTIONS
        display = "Math library build options"

        CYGPKG_LIBM_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ((0 = #CYGPKG_HAL_I386 && 0 = #CYGPKG_HAL_SYNTH_I386) => "" else "-ffloat-store")

        CYGPKG_LIBM_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

        CYGPKG_LIBM_TESTS -> string 
            display = "Math library tests"
            calculated: [this = 
            "tests/vectors/acos tests/vectors/asin tests/vectors/atan tests/vectors/atan2 tests/vectors/ceil tests/vectors/cos tests/vectors/cosh tests/vectors/exp tests/vectors/fabs tests/vectors/floor tests/vectors/fmod tests/vectors/frexp tests/vectors/ldexp tests/vectors/log tests/vectors/log10 tests/vectors/modf tests/vectors/pow tests/vectors/sin tests/vectors/sinh tests/vectors/sqrt tests/vectors/tan tests/vectors/tanh"]

CYGPKG_POSIX extends CYGINT_ISO_POSIX_LIMITS
    display = "POSIX compatibility layer"
    [CYGPKG_KERNEL]
    [CYGPKG_ISOINFRA]
    [CYGPKG_ERROR]
    [CYGINT_ISO_ERRNO]
    [CYGINT_ISO_ERRNO_CODES]
    [CYGIMP_KERNEL_SCHED_SORTED_QUEUES]
    [CYGBLD_ISO_POSIX_LIMITS_HEADER = "<cyg/posix/limits.h>"]
    [CYGBLD_ISO_PMUTEXTYPES_HEADER = "<cyg/posix/muttypes.h>"]
    [CYGBLD_ISO_PTHREAD_MUTEX_HEADER = "<cyg/posix/mutex.h>"]

    CYGPKG_POSIX_PTHREAD_MUTEX
        display = "POSIX pthread mutexes"
        'CYGINT_ISO_PMUTEXTYPES
        'CYGINT_ISO_PTHREAD_MUTEX
        -- default_value = 1

        _POSIX_THREAD_PRIO_INHERIT ?
            display = "POSIX mutex priority inheritance feature test macro"
            -- default_value = 1
            [CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_INHERIT]

        _POSIX_THREAD_PRIO_PROTECT ?
            display = "POSIX mutex priority ceiling feature test macro"
            -- default_value = 1
            [CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING]

    CYGPKG_POSIX_SCHED extends CYGINT_ISO_SCHED_IMPL
        display = "POSIX scheduling configuration"
        -- default_value = 1
        [CYGPKG_POSIX_CLOCKS]

        _POSIX_PRIORITY_SCHEDULING ?
            display = "POSIX priority scheduling feature test macro"
            [CYGSEM_KERNEL_SCHED_MLQUEUE]
            calculated: [this = 
            1]

    CYGPKG_POSIX_PTHREAD
        display = "POSIX pthread configuration"
        -- default_value = 1

        CYGPKG_POSIX_PTHREAD_REQUIREMENTS ?
            display = "Generic requirements of pthread package"
            'CYGINT_ISO_PTHREADTYPES
            'CYGINT_ISO_PTHREAD_IMPL
            [CYGPKG_POSIX_SCHED]
            [CYGSEM_KERNEL_SCHED_TIMESLICE_ENABLE]
            [CYGSEM_KERNEL_SCHED_ASR_SUPPORT]
            [CYGSEM_KERNEL_SCHED_ASR_GLOBAL]
            [!CYGSEM_KERNEL_SCHED_ASR_DATA_GLOBAL]
            [CYGFUN_KERNEL_THREADS_STACK_LIMIT]
            [CYGBLD_ISO_PTHREADTYPES_HEADER = "<cyg/posix/types.h>"]
            [CYGBLD_ISO_PTHREAD_IMPL_HEADER = "<cyg/posix/pthread.h>"]
            calculated: [this = 
            1]

        CYGPKG_POSIX_PTHREAD_VALUES
            display = "Constant values used in pthread package"
            calculated: [this = 
            1]

            CYGNUM_POSIX_PTHREAD_DESTRUCTOR_ITERATIONS -> integer 
                display = "Maximum number of iterations of key destructors"
                -- default_value = 4
                [4 <= this && this <= 100]

            CYGNUM_POSIX_PTHREAD_KEYS_MAX -> integer 
                display = "Maximum number of per-thread data keys allowed"
                -- default_value = 128
                [128 <= this && this <= 65535]

            CYGNUM_POSIX_PTHREAD_THREADS_MAX -> integer 
                display = "Maximum number of threads allowed"
                -- default_value = 64
                [64 <= this && this <= 1024]

        CYGPKG_POSIX_PTHREAD_FEATURES
            display = "Fixed Feature test macros for POSIX"
            calculated: [this = 
            1]

            _POSIX_THREADS ?
                display = "POSIX thread support feature test macro"
                [CYGSEM_KERNEL_SCHED_TIMESLICE]
                [CYGVAR_KERNEL_THREADS_DATA]
                calculated: [this = 
                1]

            _POSIX_THREAD_PRIORITY_SCHEDULING ?
                display = "POSIX thread priority scheduling feature test macro"
                [CYGSEM_KERNEL_SCHED_MLQUEUE]
                [_POSIX_THREADS]
                calculated: [this = 
                1]

            _POSIX_THREAD_ATTR_STACKADDR ?
                display = "POSIX stack address attribute feature test macro"
                calculated: [this = 
                1]

            _POSIX_THREAD_ATTR_STACKSIZE ?
                display = "POSIX stack size attribute feature test macro"
                calculated: [this = 
                1]

            _POSIX_THREAD_PROCESS_SHARED ?
                display = "POSIX process shared attribute feature test macro"
                calculated: [this = 
                0]

        CYGPKG_POSIX_MAIN_THREAD extends CYGINT_LIBC_STARTUP_EXTERNAL_INVOKE_MAIN_POSSIBLE
            display = "Main thread configuration"
            [0 != #CYGPKG_LIBC_STARTUP]
            [CYGSEM_LIBC_STARTUP_MAIN_OTHER]
            calculated: [this = 
            1]

            CYGNUM_POSIX_MAIN_DEFAULT_PRIORITY -> integer 
                display = "main()'s default thread priority"
                -- default_value = 16
                [0 <= this && this <= 31]

    CYGPKG_POSIX_CLOCKS ?
        display = "POSIX clocks"
        'CYGINT_ISO_POSIX_CLOCK_TYPES
        'CYGINT_ISO_POSIX_CLOCKS
        'CYGINT_ISO_POSIX_SLEEP
        -- default_value = 1
        [CYGBLD_ISO_POSIX_CLOCK_TYPES_HEADER = "<cyg/posix/time.h>"]
        [CYGBLD_ISO_POSIX_CLOCKS_HEADER = "<cyg/posix/time.h>"]
        [CYGBLD_ISO_STRUCTTIMEVAL_HEADER = "<cyg/posix/sys/time.h>"]
        [CYGPKG_KERNEL]
        [CYGVAR_KERNEL_COUNTERS_CLOCK]

    CYGPKG_POSIX_TIMERS ?
        display = "POSIX timers"
        'CYGINT_ISO_POSIX_TIMER_TYPES
        'CYGINT_ISO_POSIX_TIMERS
        'CYGINT_ISO_POSIX_TIMER_OPS
        -- default_value = 1
        [CYGBLD_ISO_POSIX_TIMER_TYPES_HEADER = "<cyg/posix/time.h>"]
        [CYGBLD_ISO_POSIX_TIMERS_HEADER = "<cyg/posix/time.h>"]
        [CYGPKG_KERNEL]
        [CYGVAR_KERNEL_COUNTERS_CLOCK]
        [CYGPKG_POSIX_PTHREAD]
        [CYGPKG_POSIX_SIGNALS]
        [CYGINT_ISO_POSIX_CLOCKS]

    CYGPKG_POSIX_SEMAPHORES extends CYGINT_ISO_SEMAPHORES ?
        display = "POSIX semaphores"
        -- default_value = 1
        [CYGBLD_ISO_SEMAPHORES_HEADER = "<cyg/posix/semaphore.h>"]

    CYGPKG_POSIX_MQUEUES extends CYGINT_ISO_MQUEUE
        display = "POSIX message queues"
        -- default_value = 1
        [CYGPKG_KERNEL]
        [CYGINT_ISO_MALLOC]
        [CYGINT_ISO_ERRNO]
        [CYGINT_ISO_STRING_STRFUNCS]
        [CYGINT_ISO_PTHREAD_MUTEX]
        [CYGPKG_POSIX_CLOCKS]

        CYGNUM_POSIX_MQUEUE_OPEN_MAX -> integer 
            display = "Maximum number of message queues"
            -- default_value = 8
            [1 <= this && this <= 999999]

        CYGIMP_POSIX_MQUEUE_VALIDATE_DESCRIPTOR ?
            display = "Validate queue descriptors"
            -- default_value = 1

        CYGFUN_POSIX_MQUEUE_NOTIFY ?
            display = "Allow empty queue notification"
            -- default_value = CYGPKG_POSIX_SIGNALS
            [CYGPKG_POSIX_SIGNALS]

    CYGPKG_POSIX_SIGNALS
        display = "POSIX signals configuration"
        'CYGINT_POSIX_REALTIME_SIGNALS
        'CYGINT_ISO_SIGSETJMP
        'CYGINT_ISO_SIGNAL_NUMBERS
        'CYGINT_ISO_SIGNAL_IMPL
        -- default_value = 1
        [CYGPKG_KERNEL_EXCEPTIONS]
        [CYGPKG_POSIX_PTHREAD]
        [CYGPKG_POSIX_TIMERS]
        [CYGBLD_ISO_SIGSETJMP_HEADER = "<cyg/posix/sigsetjmp.h>"]
        [CYGBLD_ISO_SIGNAL_NUMBERS_HEADER = "<cyg/posix/signal.h>"]
        [CYGBLD_ISO_SIGNAL_IMPL_HEADER = "<cyg/posix/signal.h>"]

    CYGPKG_POSIX_UTSNAME
        display = "POSIX utsname configuration"
        -- default_value = 1
        [CYGBLD_ISO_UTSNAME_HEADER = "<cyg/posix/utsname.h>"]

        CYG_POSIX_UTSNAME_LENGTH -> integer 
            display = "Length of name strings in utsname structure"
            -- default_value = 65
            [1 <= this && this <= 99999999]

        CYG_POSIX_UTSNAME_NODENAME_LENGTH -> integer 
            display = "Length of nodename string in utsname structure"
            -- default_value = CYG_POSIX_UTSNAME_LENGTH
            [1 <= this && this <= 99999999]

    CYGPKG_POSIX_TESTS -> string 
        display = "POSIX tests"
        calculated: [this = 
        (((((CYGPKG_POSIX_PTHREAD => "tests/pthread1 tests/pthread2 tests/pthread3 " else "") ++
                (CYGPKG_POSIX_PTHREAD_MUTEX => "tests/pmutex3 " else "")) ++
                (CYGPKG_POSIX_MQUEUES => "tests/pmqueue1 tests/pmqueue2 " else "")) ++
                (CYGPKG_POSIX_SIGNALS => "tests/signal1 tests/signal2 tests/signal3 tests/sigsetjmp " else "")) ++
                (CYGPKG_POSIX_SIGNALS && CYGPKG_POSIX_TIMERS && CYGPKG_POSIX_SEMAPHORES => "tests/timer1 " else "")) ++
                (CYGPKG_POSIX_SIGNALS && CYGPKG_POSIX_TIMERS && CYGPKG_POSIX_PTHREAD && CYGPKG_POSIX_SEMAPHORES => "tests/tm_posix " else "")]

CYGPKG_UITRON
    display = "uITRON compatibility layer"
    [CYGPKG_KERNEL]

    abstract CYGINT_UITRON_CONFORMANCE
        [1 = #CYGINT_UITRON_CONFORMANCE]

    CYGIMP_UITRON_STRICT_CONFORMANCE extends CYGINT_UITRON_CONFORMANCE ?
        display = "Check strict uITRON standards conformance"
        -- default_value = 0
        [CYGVAR_KERNEL_COUNTERS_CLOCK]
        [CYGSEM_KERNEL_SCHED_MLQUEUE]
        [!CYGSEM_KERNEL_SCHED_TIMESLICE]
        [CYGFUN_KERNEL_THREADS_TIMER]
        [!CYGIMP_MBOX_USE_MBOXT_PLAIN]

    CYGIMP_UITRON_LOOSE_CONFORMANCE extends CYGINT_UITRON_CONFORMANCE ?
        display = "System configuration overrides uITRON"
        -- default_value = 1

    CYGIMP_UITRON_INLINE_FUNCS ?
        display = "Inline functions"
        -- default_value = 0

    CYGIMP_UITRON_CPP_OUTLINE_FUNCS ?
        display = "C++ function names"
        -- default_value = 0

    CYGSEM_UITRON_BAD_PARAMS_RETURN_ERRORS ?
        display = "Return error codes for bad params"
        -- default_value = 1

    CYGSEM_UITRON_PARAMS_NULL_IS_GOOD_PTR ?
        display = "NULL is a good pointer"
        -- default_value = 0

    CYGPKG_UITRON_SEMAS
        display = "Semaphores"
        -- default_value = 1

        CYGNUM_UITRON_SEMAS -> integer 
            display = "Number of semaphores"
            -- default_value = 3
            [1 <= this && this <= 65535]

        CYGPKG_UITRON_SEMAS_CREATE_DELETE
            display = "Support create and delete"
            -- default_value = 1

            CYGNUM_UITRON_SEMAS_INITIALLY -> integer 
                display = "Number of semaphores created initially"
                -- default_value = 3
                [0 <= this && this <= 65535]

        CYGPKG_UITRON_SEMAS_ARE_INITIALIZED
            display = "Initialize semaphore counts"
            -- default_value = 0

            CYGDAT_UITRON_SEMA_INITIALIZERS -> string 
                display = "Static initializers"
                -- default_value = "CYG_UIT_SEMA( 0 ), CYG_UIT_SEMA( 0 ), CYG_UIT_SEMA( 0 )"

    CYGPKG_UITRON_MBOXES
        display = "Mailboxes"
        -- default_value = 1

        CYGNUM_UITRON_MBOXES -> integer 
            display = "Number of mailboxes"
            -- default_value = 4
            [1 <= this && this <= 65535]

        CYGPKG_UITRON_MBOXES_CREATE_DELETE
            display = "Support create and delete"
            -- default_value = 1

            CYGNUM_UITRON_MBOXES_INITIALLY -> integer 
                display = "Number of mailboxes created initially"
                -- default_value = 4
                [0 <= this && this <= 65535]

    CYGPKG_UITRON_FLAGS
        display = "Eventflags"
        -- default_value = 1

        CYGNUM_UITRON_FLAGS -> integer 
            display = "Number of eventflags"
            -- default_value = 5
            [1 <= this && this <= 65535]

        CYGPKG_UITRON_FLAGS_CREATE_DELETE
            display = "Support create and delete"
            -- default_value = 1

            CYGNUM_UITRON_FLAGS_INITIALLY -> integer 
                display = "Number of eventflags created initially"
                -- default_value = 5
                [0 <= this && this <= 65535]

    CYGPKG_UITRON_TASKS
        display = "Tasks"

        CYGNUM_UITRON_TASKS -> integer 
            display = "Number of tasks"
            -- default_value = 4
            [1 <= this && this <= 65535]

        CYGNUM_UITRON_START_TASKS -> integer 
            display = "Start tasks"
            -- default_value = 1
            [0 <= this && this <= 65535]

        CYGPKG_UITRON_TASKS_CREATE_DELETE
            display = "Support create and delete"
            -- default_value = 1

            CYGNUM_UITRON_TASKS_INITIALLY -> integer 
                display = "Number of tasks created initially"
                -- default_value = 4
                [1 <= this && this <= 65535]

        CYGNUM_UITRON_STACK_SIZE -> integer 
            display = "Default stack size"
            -- default_value = 2048
            [128 <= this && this <= 0x7FFFFFFF]

        CYGDAT_UITRON_TASK_EXTERNS -> string 
            display = "Externs for initialization"
            -- default_value = "extern \"C\" void task1( unsigned int ); \\\n extern \"C\" void task2( unsigned int ); \\\n extern \"C\" void task3( unsigned int ); \\\n extern \"C\" void task4( unsigned int ); \\\n static char stack1[ MAX(CYGNUM_UITRON_STACK_SIZE, CYGNUM_HAL_STACK_SIZE_MINIMUM) ], \\\n stack2[ MAX(CYGNUM_UITRON_STACK_SIZE, CYGNUM_HAL_STACK_SIZE_MINIMUM) ], \\\n stack3[ MAX(CYGNUM_UITRON_STACK_SIZE, CYGNUM_HAL_STACK_SIZE_MINIMUM) ], \\\n stack4[ MAX(CYGNUM_UITRON_STACK_SIZE, CYGNUM_HAL_STACK_SIZE_MINIMUM) ];"

        CYGDAT_UITRON_TASK_INITIALIZERS -> string 
            display = "Static initializers"
            -- default_value = "CYG_UIT_TASK( \"t1\", 1, task1, &stack1, MAX(CYGNUM_UITRON_STACK_SIZE, CYGNUM_HAL_STACK_SIZE_MINIMUM) ), \\\n CYG_UIT_TASK( \"t2\", 2, task2, &stack2, MAX(CYGNUM_UITRON_STACK_SIZE, CYGNUM_HAL_STACK_SIZE_MINIMUM) ), \\\n CYG_UIT_TASK( \"t3\", 3, task3, &stack3, MAX(CYGNUM_UITRON_STACK_SIZE, CYGNUM_HAL_STACK_SIZE_MINIMUM) ), \\\n CYG_UIT_TASK( \"t4\", 4, task4, &stack4, MAX(CYGNUM_UITRON_STACK_SIZE, CYGNUM_HAL_STACK_SIZE_MINIMUM) ),"

    CYGPKG_UITRON_MEMPOOLFIXED
        display = "Fixed-size memorypools"
        -- default_value = 1
        [CYGPKG_MEMALLOC]

        CYGNUM_UITRON_MEMPOOLFIXED -> integer 
            display = "Number of fixed-size memorypools"
            -- default_value = 3
            [1 <= this && this <= 65535]

        CYGPKG_UITRON_MEMPOOLFIXED_CREATE_DELETE
            display = "Support create and delete"
            -- default_value = 1
            -- ifActive
            [0 < #CYGNUM_UITRON_MEMPOOLFIXED]

            CYGNUM_UITRON_MEMPOOLFIXED_INITIALLY -> integer 
                display = "Number of fixed mempools created initially"
                -- default_value = 3
                [0 <= this && this <= 65535]

        CYGDAT_UITRON_MEMPOOLFIXED_EXTERNS -> string 
            display = "Externs for initialization"
            -- default_value = "static char fpool1[ 2000 ], \\\n fpool2[ 2000 ], \\\n fpool3[ 2000 ];"

        CYGDAT_UITRON_MEMPOOLFIXED_INITIALIZERS -> string 
            display = "Static initializers"
            -- default_value = "CYG_UIT_MEMPOOLFIXED( fpool1, 2000, 20 ), \\\n CYG_UIT_MEMPOOLFIXED( fpool2, 2000, 100 ), \\\n CYG_UIT_MEMPOOLFIXED( fpool3, 2000, 500 ),"

    CYGPKG_UITRON_MEMPOOLVAR
        display = "Variable-size memorypools"
        -- default_value = 1
        [CYGPKG_MEMALLOC]

        CYGNUM_UITRON_MEMPOOLVAR -> integer 
            display = "Number of variable-size memory pools"
            -- default_value = 3
            [1 <= this && this <= 65535]

        CYGPKG_UITRON_MEMPOOLVAR_CREATE_DELETE
            display = "Support create and delete"
            -- default_value = 1
            -- ifActive
            [0 < #CYGNUM_UITRON_MEMPOOLVAR]

            CYGNUM_UITRON_MEMPOOLVAR_INITIALLY -> integer 
                display = "Number of variable-size mempools created initially"
                -- default_value = 3
                [0 <= this && this <= 65535]

        CYGDAT_UITRON_MEMPOOLVAR_EXTERNS -> string 
            display = "Externs for initialization"
            -- default_value = "static char vpool1[ 2000 ], \\\n vpool2[ 2000 ], \\\n vpool3[ 2000 ];"

        CYGDAT_UITRON_MEMPOOLVAR_INITIALIZERS -> string 
            display = "Static initializers"
            -- default_value = "CYG_UIT_MEMPOOLVAR( vpool1, 2000 ), \\\n CYG_UIT_MEMPOOLVAR( vpool2, 2000 ), \\\n CYG_UIT_MEMPOOLVAR( vpool3, 2000 ),"

    CYGSEM_UITRON_TIME_IS_MILLISECONDS ?
        display = "uITRON time unit is mS"
        -- default_value = 0
        -- ifActive
        [CYGVAR_KERNEL_COUNTERS_CLOCK]

    CYGPKG_UITRON_ALARMS
        display = "Alarm handlers"
        -- default_value = 1
        [CYGVAR_KERNEL_COUNTERS_CLOCK]

        CYGNUM_UITRON_ALARMS -> integer 
            display = "Number of alarm handlers"
            -- default_value = 3
            [1 <= this && this <= 65535]

    CYGPKG_UITRON_CYCLICS
        display = "Cyclic handlers"
        -- default_value = 1
        [CYGVAR_KERNEL_COUNTERS_CLOCK]

        CYGNUM_UITRON_CYCLICS -> integer 
            display = "Number cyclic handlers"
            -- default_value = 3
            [1 <= this && this <= 65535]

    CYGPKG_UITRON_INTERRUPT_FUNCTIONS
        display = "Interrupt-safe functions"

        CYGSEM_UITRON_ISRFUNCS_TRY_IMMEDIATE_EXECUTION ?
            display = "Execute in ISR if safe"
            -- default_value = 1

        CYGNUM_UITRON_ISR_ACTION_QUEUESIZE -> CYGNUM_UITRON_ISR_ACTION_QUEUESIZE_ENUM 
            display = "Deferred operation queue size"
            -- default_value = 32
enum CYGNUM_UITRON_ISR_ACTION_QUEUESIZE_ENUM = 4 | 8 | 16 | 32 | 64 | 128 | 256

    CYGPKG_UITRON_VERSION
        display = "Version information"

        CYGNUM_UITRON_VER_MAKER -> integer 
            display = "OS maker"
            -- default_value = 0
            [0 <= this && this <= 0xFFFF]

        CYGNUM_UITRON_VER_ID -> integer 
            display = "OS identification"
            -- default_value = 0
            [0 <= this && this <= 0xFFFF]

        CYGNUM_UITRON_VER_SPVER -> integer 
            display = "ITRON specification"
            -- default_value = 0x5302
            [0 <= this && this <= 0xFFFF]

        CYGNUM_UITRON_VER_PRVER -> integer 
            display = "OS product version"
            -- default_value = 0x0100
            [0 <= this && this <= 0xFFFF]

        CYGPKG_UITRON_VERSION_PRNO
            display = "Product info"

            CYGNUM_UITRON_VER_PRNO_0 -> integer 
                display = "Field 0"
                -- default_value = 0
                [0 <= this && this <= 0xFFFF]

            CYGNUM_UITRON_VER_PRNO_1 -> integer 
                display = "Field 1"
                -- default_value = 0
                [0 <= this && this <= 0xFFFF]

            CYGNUM_UITRON_VER_PRNO_2 -> integer 
                display = "Field 2"
                -- default_value = 0
                [0 <= this && this <= 0xFFFF]

            CYGNUM_UITRON_VER_PRNO_3 -> integer 
                display = "Field 3"
                -- default_value = 0
                [0 <= this && this <= 0xFFFF]

        CYGNUM_UITRON_VER_CPU -> integer 
            display = "CPU information"
            -- default_value = 0
            [0 <= this && this <= 0xFFFF]

        CYGNUM_UITRON_VER_VAR -> integer 
            display = "System variant"
            -- default_value = 0x8000
            [0 <= this && this <= 0xFFFF]

    CYGPKG_UITRON_OPTIONS
        display = "uITRON build options"

        CYGPKG_UITRON_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_UITRON_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

        CYGPKG_UITRON_TESTS -> string 
            display = "uITRON tests"
            calculated: [this = 
            ("tests/testcxx tests/testcx2 tests/testcx3 tests/testcx4 tests/testcx5 tests/testcx6 tests/testcx7 tests/testcx8 tests/testcx9") ++
                    (!CYGIMP_UITRON_INLINE_FUNCS && !CYGIMP_UITRON_CPP_OUTLINE_FUNCS => " tests/test1 tests/test2 tests/test3 tests/test4 tests/test5 tests/test6 tests/test7 tests/test8 tests/test9 tests/testintr" else "")]

CYGPKG_IO_WATCHDOG
    display = "Watchdog IO device"
    [1 = #CYGINT_WATCHDOG_IMPLEMENTATIONS]

    abstract CYGINT_WATCHDOG_HW_IMPLEMENTATIONS
        display = "Number of watchdog hardware implementations"

    abstract CYGINT_WATCHDOG_IMPLEMENTATIONS
        display = "Number of watchdog implementations"

    CYGPKG_IO_WATCHDOG_IMPLEMENTATION
        display = "Watchdog implementation"

        CYGPKG_WATCHDOG_EMULATE extends CYGINT_WATCHDOG_IMPLEMENTATIONS ?
            display = "Watchdog emulator"
            -- default_value = 0 = #CYGINT_WATCHDOG_HW_IMPLEMENTATIONS
            [CYGVAR_KERNEL_COUNTERS_CLOCK]

        CYGIMP_WATCHDOG_NONE extends CYGINT_WATCHDOG_IMPLEMENTATIONS ?
            display = "No watchdog"
            -- default_value = 0

    abstract CYGINT_WATCHDOG_RESETS_ON_TIMEOUT
        display = "Set if device causes a reset on timeout"

    CYGSEM_WATCHDOG_RESETS_ON_TIMEOUT ?
        display = "Set if device causes a reset on timeout"
        calculated: [this = 
        #CYGINT_WATCHDOG_RESETS_ON_TIMEOUT = 1]

    CYGPKG_IO_WATCHDOG_BUILD_INTERACTIVE_TEST ?
        display = "Build interactive watchdog test"
        -- default_value = 0

    CYGPKG_IO_WATCHDOG_OPTIONS
        display = "Watchdog build options"

        CYGPKG_IO_WATCHDOG_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_IO_WATCHDOG_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

        CYGPKG_IO_WATCHDOG_TESTS -> string 
            display = "Watchdog tests"
            calculated: [this = 
                            CYGPKG_IO_WATCHDOG_BUILD_INTERACTIVE_TEST => (CYGSEM_WATCHDOG_RESETS_ON_TIMEOUT => "tests/watchdog2 tests/watchdog_reset" else "tests/watchdog tests/watchdog2 tests/watchdog_reset")
                    else 
            (CYGSEM_WATCHDOG_RESETS_ON_TIMEOUT => "tests/watchdog2" else "tests/watchdog tests/watchdog2")]

CYGPKG_IO_WALLCLOCK
    display = "Wallclock device"

    abstract CYGINT_WALLCLOCK_HW_IMPLEMENTATIONS
        display = "Number of wallclock hardware implementations"

    abstract CYGINT_WALLCLOCK_IMPLEMENTATIONS
        display = "Number of wallclock implementations"
        [1 = #CYGINT_WALLCLOCK_IMPLEMENTATIONS]

    abstract CYGINT_WALLCLOCK_SET_GET_MODE_SUPPORTED
        display = "Wallclock driver supports set/get mode"

    CYGSEM_WALLCLOCK_MODE -> CYGSEM_WALLCLOCK_MODE_ENUM 
        display = "Wallclock mode"
        -- default_value = ((CYGINT_WALLCLOCK_SET_GET_MODE_SUPPORTED) => "set_get" else "init_get")
        [CYGINT_WALLCLOCK_SET_GET_MODE_SUPPORTED || CYGSEM_WALLCLOCK_MODE = "init_get"]
enum CYGSEM_WALLCLOCK_MODE_ENUM = "init_get" | "set_get"

    CYGSEM_WALLCLOCK_SET_GET_MODE ?
        display = "Wallclock set/get mode"
        calculated: [this = 
        CYGSEM_WALLCLOCK_MODE = "set_get" => 1 else 0]

    CYGPKG_IO_WALLCLOCK_IMPLEMENTATION
        display = "Wallclock implementation"

        CYGPKG_WALLCLOCK_EMULATE extends CYGINT_WALLCLOCK_IMPLEMENTATIONS ?
            display = "Wallclock emulator"
            -- default_value = 0 = #CYGINT_WALLCLOCK_HW_IMPLEMENTATIONS
            [CYGPKG_KERNEL]

        CYGIMP_WALLCLOCK_NONE extends CYGINT_WALLCLOCK_IMPLEMENTATIONS ?
            display = "No wallclock"
            -- default_value = !CYGPKG_KERNEL && 0 = #CYGINT_WALLCLOCK_HW_IMPLEMENTATIONS

        CYGIMP_WALLCLOCK_HARDWARE extends CYGINT_WALLCLOCK_IMPLEMENTATIONS ?
            display = "Hardware wallclock"
            -- default_value = 1

    CYGPKG_IO_WALLCLOCK_OPTIONS
        display = "Wallclock build options"

        CYGPKG_IO_WALLCLOCK_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_IO_WALLCLOCK_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

        CYGPKG_IO_WALLCLOCK_TESTS -> string 
            display = "Wallclock tests"
            calculated: [this = 
            CYGPKG_KERNEL => "tests/wallclock tests/wallclock2" else ""]

    CYGPKG_DEVICES_WALLCLOCK_DALLAS_DS12887
        display = "Wallclock device driver for Dallas 12887"
        'CYGINT_WALLCLOCK_HW_IMPLEMENTATIONS
        'CYGINT_WALLCLOCK_SET_GET_MODE_SUPPORTED
        -- ifActive
        [CYGPKG_IO_WALLCLOCK]
        -- ifActive
        [CYGIMP_WALLCLOCK_HARDWARE]

        CYGPKG_DEVICES_WALLCLOCK_DALLAS_DS12887_OPTIONS
            display = "DS12887 wallclock build options"

            CYGPKG_DEVICES_WALLCLOCK_DALLAS_DS12887_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = ""

            CYGPKG_DEVICES_WALLCLOCK_DALLAS_DS12887_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

    CYGPKG_DEVICES_WALLCLOCK_I386_PC
        display = "PC board RTC Driver"
        -- ifActive
        [CYGPKG_IO_WALLCLOCK]
        -- ifActive
        [CYGPKG_HAL_I386_PC]
        [CYGPKG_DEVICES_WALLCLOCK_DALLAS_DS12887]

        CYGDAT_DEVS_WALLCLOCK_I386_PC_RTC_ADDRESS_PORT -> integer 
            display = "IO port address of the ADDRESS register"
            -- default_value = 0x70

        CYGDAT_DEVS_WALLCLOCK_I386_PC_RTC_DATA_PORT -> integer 
            display = "IO port address of the DATA register"
            -- default_value = 0x71

CYGPKG_ERROR extends CYGINT_ISO_ERRNO_CODES
    display = "Common error code support"
    [CYGBLD_ISO_ERRNO_CODES_HEADER = "<cyg/error/codes.h>"]

    CYGPKG_ERROR_ERRNO extends CYGINT_ISO_ERRNO
        display = "errno variable"
        -- default_value = 1
        [CYGBLD_ISO_ERRNO_HEADER = "<cyg/error/errno.h>"]

        CYGSEM_ERROR_PER_THREAD_ERRNO ?
            display = "Per-thread errno"
            -- default_value = 1
            [CYGVAR_KERNEL_THREADS_DATA]

        CYGNUM_ERROR_ERRNO_TRACE_LEVEL -> integer 
            display = "Tracing level"
            -- default_value = 0
            [0 <= this && this <= 1]

    CYGPKG_ERROR_STRERROR extends CYGINT_ISO_STRERROR ?
        display = "strerror function"
        -- default_value = 1
        [CYGBLD_ISO_STRERROR_HEADER = "<cyg/error/strerror.h>"]

    CYGPKG_ERROR_OPTIONS
        display = "Error package build options"

        CYGPKG_ERROR_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_ERROR_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

CYGPKG_IO_FILEIO
    display = "POSIX File IO compatibility layer"
    'CYGINT_ISO_FCNTL
    'CYGINT_ISO_OPEN
    'CYGINT_ISO_DIRENT
    [CYGPKG_ISOINFRA]
    [CYGPKG_ERROR]
    [CYGINT_ISO_ERRNO]
    [CYGINT_ISO_ERRNO_CODES]
    [CYGINT_ISO_STRING_STRFUNCS]
    [CYGBLD_ISO_DIRENT_HEADER = "<cyg/fileio/dirent.h>"]
    [CYGBLD_ISO_OPEN_MAX_HEADER = "<cyg/fileio/limits.h>"]
    [CYGBLD_ISO_NAME_MAX_HEADER = "<cyg/fileio/limits.h>"]

    abstract CYGINT_IO_FILEIO_FS
        display = "Filesystems interfacing to FILEIO"

    CYGFUN_IO_FILEIO_SELECT extends CYGINT_ISO_SELECT ?
        display = "Enable support for select()"
        -- default_value = 1
        -- ifActive
        [CYGPKG_KERNEL]

    CYGPKG_IO_FILEIO_DEVFS_SUPPORT ?
        display = "Enable devfs support"
        -- default_value = ((CYGPKG_REDBOOT) => 0 else 1)
        -- ifActive
        [CYGPKG_IO]

    CYGPKG_IO_FILEIO_SOCKET_SUPPORT ?
        display = "Enable socket support"
        -- default_value = 1
        -- ifActive
        [CYGPKG_NET]
        -- ifActive
        [CYGPKG_KERNEL]

    CYGNUM_FILEIO_NFILE -> integer 
        display = "Maximum number of open files"
        -- default_value = 16
        [1 <= this && this <= 9999999]

    CYGNUM_FILEIO_NFD -> integer 
        display = "Maximum number of open file descriptors"
        -- default_value = 16
        [CYGNUM_FILEIO_NFILE <= this && this <= 9999999]

    CYGNUM_FILEIO_FSTAB_MAX -> integer 
        display = "Maximum number of installed filesystems"
        -- default_value = 4
        [1 <= this && this <= 9999999]

    CYGNUM_FILEIO_MTAB_MAX -> integer 
        display = "Maximum number of mounted filesystems"
        -- default_value = 8
        [CYGNUM_FILEIO_MTAB_EXTRA <= this && this <= 9999999]

    CYGNUM_FILEIO_MTAB_EXTRA -> integer 
        display = "Number of dynamically mounted filesystems"
        -- default_value = 8
        [0 <= this && this <= 9999999]

    CYGNUM_FILEIO_NSTAB_MAX -> integer 
        display = "Maximum number of installed network stacks"
        -- default_value = 1
        [1 <= this && this <= 9999999]

    CYGPKG_IO_FILEIO_TRACK_CWD ?
        display = "Enable current directory tracking"
        -- default_value = 1

    CYGPKG_IO_FILEIO_INODE
        display = "Generic inode support"
        -- default_value = 0
        [CYGINT_ISO_MALLOC]

        CYGNUM_IO_FILEIO_MAX_INODE_CACHE_DEAD -> integer 
            display = "Maximum space for unused cached inodes"
            -- default_value = 10

    CYGNUM_FILEIO_IOVEC_MAX -> integer 
        display = "Maximum size of iovec used by readv/writev"
        -- default_value = 16
        [1 <= this && this <= 9999999]

    CYGSEM_FILEIO_INFO_DISK_USAGE ?
        display = "cyg_fs_getinfo call for disk usage"
        -- default_value = 0

    CYGPKG_FILEIO_FNMATCH
        display = "POSIX fnmatch configuration"
        -- default_value = CYGINT_ISO_STRING_STRFUNCS && CYGINT_ISO_CTYPE
        [CYGBLD_ISO_FNMATCH_HEADER = "<cyg/fileio/fnmatch.h>"]

    CYGPKG_FILEIO_DIRENT_DTYPE ?
        display = "Struct dirent contains a d_type field"
        -- default_value = 0

    CYGPKG_IO_FILEIO_TESTS -> string 
        display = "Fileio tests"
        calculated: [this = 
        "tests/fileio1 tests/socket tests/select tests/stdio tests/pselect tests/fnmatch"]

CYGPKG_NET
    display = "Basic networking framework"
    'CYGINT_ISO_NETDB_PROTO
    'CYGINT_ISO_NETDB_SERV
    [CYGPKG_IO]
    [CYGPKG_ISOINFRA]
    [CYGINT_ISO_C_TIME_TYPES]
    [CYGINT_ISO_STRERROR]
    [CYGINT_ISO_ERRNO]
    [CYGINT_ISO_ERRNO_CODES]
    [CYGINT_ISO_MALLOC]
    [CYGINT_ISO_STRING_BSD_FUNCS]
    [CYGBLD_ISO_NETDB_PROTO_HEADER = "<net/netdb.h>"]
    [CYGBLD_ISO_NETDB_SERV_HEADER = "<net/netdb.h>"]
    [#CYGPKG_NET_STACK = 1]

    abstract CYGPKG_NET_DRIVER_FRAMEWORK
        display = "Suitable driver framework interface, used by network package"

    abstract CYGPKG_NET_STACK
        display = "Suitable network stack implementation, used by network package"

    abstract CYGPKG_NET_STACK_INET
        display = "Network stack support for IPv4"

    abstract CYGPKG_NET_STACK_INET6
        display = "Network stack support for IPv6"

    abstract CYGPKG_NET_STACK_IPSEC
        display = "Network stack support for IPSEC"

    CYGPKG_NET_INET
        display = "INET support"
        -- default_value = 1
        -- ifActive
        [CYGPKG_NET_STACK_INET]

        CYGPKG_NET_INET6 ?
            display = "IPv6 support"
            -- default_value = 0
            -- ifActive
            [CYGPKG_NET_STACK_INET6]
            [CYGINT_IO_ETH_MULTICAST]

        CYGPKG_NET_IPSEC ?
            display = "IPSEC support"
            -- default_value = 1
            -- ifActive
            [CYGPKG_NET_STACK_IPSEC]

        CYGSEM_NET_ROUTING ?
            display = "Multicast routing support"
            -- default_value = 0

        CYGSEM_NET_RANDOMID ?
            display = "Use random sequence for IP packet identifiers"
            -- default_value = 0

    CYGPKG_NET_TFTP
        display = "TFTP (RFC-1350) support"
        -- default_value = 1
        [CYGPKG_NET_INET]

        CYGPKG_NET_TFTPD_THREAD_PRIORITY -> integer 
            display = "Priority level for TFTP daemon thread."
            -- default_value = 10

        CYGPKG_NET_TFTPD_CLIENT_BIG_PACKET
            display = "Extension to allow negotiation of big packets"
            -- default_value = 0
            [CYGINT_ISO_STDIO_FORMATTED_IO]

            CYGPKG_NET_TFTPD_CLIENT_BIG_PACKET_SIZE -> integer 
                display = "Packet size to negotiate"
                -- default_value = 512
                [512 <= this && this <= 65464]

        CYGPKG_NET_TFTPD_THREAD_STACK_SIZE -> string 
            display = "Stack size for TFTP threads."
            -- default_value = "(CYGNUM_HAL_STACK_SIZE_TYPICAL+(3*(SEGSIZE+4)))"

        CYGSEM_NET_TFTPD_MULTITHREADED
            display = "Multiple TFTPD server threads on the same port."
            -- default_value = 1

            CYGNUM_NET_TFTPD_MULTITHREADED_PORTS -> integer 
                display = "Number of different ports with servers"
                -- default_value = 1

        CYGPKG_NET_TFTP_FILE_ACCESS ?
            display = "File I/O functions for TFTP server"
            -- default_value = 1

    CYGPKG_NET_DHCP
        display = "Use full DHCP instead of BOOTP"
        -- default_value = 1
        -- ifActive
        [#CYGHWR_NET_DRIVERS > 0]
        [CYGPKG_NET_INET]

        CYGOPT_NET_DHCP_DHCP_THREAD ?
            display = "DHCP management thread"
            -- default_value = 1

        CYGOPT_NET_DHCP_DHCP_THREAD_PARAM -> integer 
            display = "DHCP management thread loops forever"
            -- default_value = 1
            -- ifActive
            [CYGOPT_NET_DHCP_DHCP_THREAD]

        CYGPKG_NET_DHCP_THREAD_PRIORITY -> integer 
            display = "DHCP management thread priority"
            -- default_value = #CYGPKG_NET_THREAD_PRIORITY + 1
            -- ifActive
            [CYGOPT_NET_DHCP_DHCP_THREAD]

        CYGPKG_NET_DHCP_THREAD_STACK_SIZE -> string 
            display = "Stack size for DHCP management threads."
            -- default_value = "(CYGNUM_HAL_STACK_SIZE_TYPICAL+sizeof(struct bootp))"

        CYGOPT_NET_DHCP_PARM_REQ_LIST_REPLACE -> integer 
            display = "Replace DHCP request options"
            -- default_value = 0
            -- ifActive
            [CYGOPT_NET_DHCP_DHCP_THREAD]

        CYGOPT_NET_DHCP_PARM_REQ_LIST_ADDITIONAL -> integer 
            display = "Additional DHCP request options"
            -- default_value = 0
            -- ifActive
            [CYGOPT_NET_DHCP_DHCP_THREAD]

        CYGOPT_NET_DHCP_OPTION_HOST_NAME
            display = "DHCP host name option"
            -- default_value = 0
            -- ifActive
            [CYGOPT_NET_DHCP_DHCP_THREAD]

            CYGNUM_NET_DHCP_OPTION_HOST_NAME_LEN -> integer 
                display = "DHCP host name maximum length"
                -- default_value = 60
                [0 <= this && this <= 255]
                -- ifActive
                [CYGOPT_NET_DHCP_OPTION_HOST_NAME]

        CYGOPT_NET_DHCP_OPTION_DHCP_CLIENTID_MAC ?
            display = "DHCP client ID option"
            -- default_value = 0
            -- ifActive
            [CYGOPT_NET_DHCP_DHCP_THREAD]

        CYGNUM_NET_DHCP_MIN_RETRY_TIME -> integer 
            display = "DHCP minimum retry time"
            -- default_value = 100
            [0 <= this && this <= 100]

    CYGPKG_NET_IPV6_ROUTING
        display = "Options controlling IPv6 routing"
        -- default_value = 1
        -- ifActive
        [CYGPKG_NET_INET6]

        CYGOPT_NET_IPV6_ROUTING_THREAD
            display = "Thread for IPv6 routing"
            -- default_value = 1
            [CYGPKG_POSIX]

            CYGINT_NET_IPV6_ROUTING_THREAD_PRIORITY -> integer 
                display = "IPv6 routing thread priority"
                -- default_value = #CYGPKG_NET_THREAD_PRIORITY + 1

            CYGINT_NET_IPV6_ROUTING_THREAD_PERIOD
                display = "IPv6 routing thread rate"
                -- default_value = (5 * 60)

    CYGPKG_NET_DEBUG
        display = "Debug output"
        -- default_value = 0

        CYGDBG_NET_DHCP_CHATTER ?
            display = "Extra debug output for DHCP"
            -- default_value = 0

    CYGDBG_NET_TIMING_STATS ?
        display = "Network timing statistics"
        -- default_value = 0

    CYGDBG_NET_SHOW_MBUFS ?
        display = "Network MBUF diagnostics"
        -- default_value = 0

    CYGPKG_NET_OPTIONS
        display = "Networking support build options"

        CYGPKG_NET_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = "-D_KERNEL -D__ECOS -D__INSIDE_NET"

        CYGPKG_NET_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

    CYGPKG_NET_BUILD_TESTS
        display = "Testing options"

        CYGPKG_NET_BUILD_HW_TESTS ?
            display = "Build hardware networking tests (demo programs)"
            -- default_value = 0
            [CYGHWR_NET_DRIVER_ETH0_SETUP || CYGHWR_NET_DRIVER_ETH1_SETUP]

        CYGPKG_NET_TESTS -> string 
            display = "Networking tests"
            calculated: [this = 
            CYGPKG_NET_BUILD_HW_TESTS => "tests/mbuf_test tests/socket_test tests/ftp_test tests/server_test tests/nc_test_slave tests/tftp_client_test tests/tftp_server_test tests/tcp_echo tests/set_mac_address tests/bridge tests/flood tests/ping_test tests/dhcp_test tests/dhcp_test2 tests/ping_lo_test tests/tcp_lo_test tests/udp_lo_test tests/multi_lo_select tests/tcp_lo_select tests/addr_test" else "tests/ping_lo_test tests/tcp_lo_test tests/udp_lo_test tests/multi_lo_select tests/tcp_lo_select"]

        CYGPKG_NET_TESTS_USE_RT_TEST_HARNESS ?
            display = "Use real-time response test harness (if available)"
            -- default_value = 0

    CYGHWR_NET_DRIVER_ETH0
        display = "Does the hardware provide an 'eth0' device?"
        [#CYGHWR_NET_DRIVER_ETH0 <= 1]

    CYGHWR_NET_DRIVER_ETH0_SETUP_OPTIONS
        display = "Initialization options for 'eth0'"
        -- ifActive
        [#CYGHWR_NET_DRIVER_ETH0 = 1]

        abstract CYGHWR_NET_DRIVER_ETH0_SETUP
            display = "Initialization options for 'eth0'"
            [1 = #CYGHWR_NET_DRIVER_ETH0_SETUP]

        CYGHWR_NET_DRIVER_ETH0_MANUAL extends CYGHWR_NET_DRIVER_ETH0_SETUP
            display = "Initialize 'eth0' manually?"
            -- default_value = 0

        CYGHWR_NET_DRIVER_ETH0_BOOTP extends CYGHWR_NET_DRIVER_ETH0_SETUP
            display = "Use BOOTP/DHCP to initialize 'eth0'?"
            -- default_value = 1

            CYGHWR_NET_DRIVER_ETH0_DHCP ?
                display = "Use DHCP rather than BOOTP for 'eth0'?"
                -- default_value = 1
                -- ifActive
                [CYGPKG_NET_DHCP]

            CYGHWR_NET_DRIVER_ETH0_BOOTP_SHOW ?
                display = "Show BOOTP/DHCP initialization values?"
                -- default_value = 1

        CYGHWR_NET_DRIVER_ETH0_IPV6_PREFIX -> string 
            display = "Static IPv6 address prefix for 'eth0'"
            -- default_value = "3ffe:302:11:2"
            -- ifActive
            [CYGPKG_NET_INET6]

        CYGHWR_NET_DRIVER_ETH0_ADDRS extends CYGHWR_NET_DRIVER_ETH0_SETUP
            display = "Address setups for 'eth0'"

            CYGHWR_NET_DRIVER_ETH0_ADDRS_IP -> string 
                display = "IP address for 'eth0'"
                -- default_value = "192.168.1.2"

            CYGHWR_NET_DRIVER_ETH0_ADDRS_NETMASK -> string 
                display = "Network mask address for 'eth0'"
                -- default_value = "255.255.255.0"

            CYGHWR_NET_DRIVER_ETH0_ADDRS_BROADCAST -> string 
                display = "Broadcast address for 'eth0'"
                -- default_value = "192.168.1.255"

            CYGHWR_NET_DRIVER_ETH0_ADDRS_GATEWAY -> string 
                display = "Gateway/router IP address for 'eth0'"
                -- default_value = "192.168.1.1"

            CYGHWR_NET_DRIVER_ETH0_ADDRS_SERVER -> string 
                display = "Server IP address for 'eth0'"
                -- default_value = "192.168.1.101"

    CYGHWR_NET_DRIVER_ETH1
        display = "Does the hardware provide an 'eth1' device?"
        [#CYGHWR_NET_DRIVER_ETH1 <= 1]

    CYGHWR_NET_DRIVER_ETH1_SETUP_OPTIONS
        display = "Initialization options for 'eth1'"
        -- ifActive
        [#CYGHWR_NET_DRIVER_ETH1 = 1]

        abstract CYGHWR_NET_DRIVER_ETH1_SETUP
            display = "Initialization options for 'eth1'"
            [1 = #CYGHWR_NET_DRIVER_ETH1_SETUP]

        CYGHWR_NET_DRIVER_ETH1_MANUAL extends CYGHWR_NET_DRIVER_ETH1_SETUP
            display = "Initialize 'eth1' manually?"
            -- default_value = 0

        CYGHWR_NET_DRIVER_ETH1_BOOTP extends CYGHWR_NET_DRIVER_ETH1_SETUP
            display = "Use BOOTP/DHCP to initialize 'eth1'?"
            -- default_value = 1

            CYGHWR_NET_DRIVER_ETH1_DHCP ?
                display = "Use DHCP rather than BOOTP for 'eth1'?"
                -- default_value = 1
                -- ifActive
                [CYGPKG_NET_DHCP]

            CYGHWR_NET_DRIVER_ETH1_BOOTP_SHOW ?
                display = "Show BOOTP/DHCP initialization values?"
                -- default_value = 1

        CYGHWR_NET_DRIVER_ETH1_IPV6_PREFIX -> string 
            display = "Static IPv6 address prefix for 'eth1'"
            -- default_value = "3ffe:302:12:2"
            -- ifActive
            [CYGPKG_NET_INET6]

        CYGHWR_NET_DRIVER_ETH1_ADDRS extends CYGHWR_NET_DRIVER_ETH1_SETUP
            display = "Address setups for 'eth1'"

            CYGHWR_NET_DRIVER_ETH1_ADDRS_IP -> string 
                display = "IP address for 'eth1'"
                -- default_value = "192.168.1.2"

            CYGHWR_NET_DRIVER_ETH1_ADDRS_NETMASK -> string 
                display = "Network mask address for 'eth1'"
                -- default_value = "255.255.255.0"

            CYGHWR_NET_DRIVER_ETH1_ADDRS_BROADCAST -> string 
                display = "Broadcast address for 'eth1'"
                -- default_value = "192.168.1.255"

            CYGHWR_NET_DRIVER_ETH1_ADDRS_GATEWAY -> string 
                display = "Gateway/router IP address for 'eth1'"
                -- default_value = "0.0.0.0"

            CYGHWR_NET_DRIVER_ETH1_ADDRS_SERVER -> string 
                display = "Server IP address for 'eth1'"
                -- default_value = "192.168.1.101"

    CYGPKG_NET_FREEBSD_STACK
        display = "FreeBSD networking stack"
        'CYGPKG_NET_STACK
        'CYGPKG_NET_STACK_INET
        'CYGPKG_NET_STACK_INET6
        'CYGINT_ISO_BSDTYPES
        [CYGPKG_IO]
        [CYGPKG_ISOINFRA]
        [CYGINT_ISO_C_TIME_TYPES]
        [CYGINT_ISO_STRERROR]
        [CYGINT_ISO_ERRNO]
        [CYGINT_ISO_ERRNO_CODES]
        [CYGINT_ISO_MALLOC]
        [CYGINT_ISO_STRING_BSD_FUNCS]
        [CYGPKG_IO_FILEIO]
        [CYGBLD_ISO_BSDTYPES_HEADER = "<sys/bsdtypes.h>"]

        abstract CYGINT_NET_IPSEC_BSD_CRYPTO
            display = "Implementation of BSD CRYPTO functions"

        CYGPKG_NET_FREEBSD_INET
            display = "INET support"
            -- default_value = 1
            -- ifActive
            [CYGPKG_NET_INET]

            CYGPKG_NET_FREEBSD_INET6 ?
                display = "IPv6 support"
                -- default_value = 1
                -- ifActive
                [CYGPKG_NET_INET6]

            CYGPKG_NET_FREEBSD_IPSEC extends CYGPKG_NET_STACK_IPSEC ?
                display = "IPSEC support"
                -- default_value = CYGPKG_NET_IPSEC_BSD_CRYPTO
                [CYGPKG_COMPRESS_ZLIB]

            CYGPKG_NET_FREEBSD_IPSEC6 ?
                display = "IPSEC support for IPv6"
                -- default_value = 1
                -- ifActive
                [CYGPKG_NET_INET6]
                -- ifActive
                [CYGPKG_NET_FREEBSD_IPSEC]

            CYGPKG_NET_FREEBSD_SYSCTL ?
                display = "sysctl support"
                -- default_value = 0

            CYGPKG_NET_RANDOM_PORTS ?
                display = "Random source ports"
                -- default_value = 0

        CYGPKG_NET_NGIF -> integer 
            display = "Number of GIF things"
            -- default_value = 0

        CYGPKG_NET_NLOOP -> integer 
            display = "Number of loopback interfaces"
            -- default_value = 1

        CYGPKG_NET_FREEBSD_LOGGING -> integer 
            display = "Error and warning log control"
            -- default_value = 0xC08F

        CYGPKG_NET_FORCE_SERIAL_CONSOLE ?
            display = "Force use of serial console during initialization"
            -- default_value = 0

        CYGPKG_NET_MEM_USAGE -> integer 
            display = "Memory designated for networking buffers."
            -- default_value = ((256 * 1024) + (CYGPKG_NET_MAXSOCKETS * 1024))

        CYGPKG_NET_MEMPOOL_SIZE
            display = "Memory designated for network dynamically allocated memory"
            -- default_value = (CYGPKG_NET_MEM_USAGE / 4)

        CYGPKG_NET_MBUFS_SIZE
            display = "MBUFs memory size"
            -- default_value = (CYGPKG_NET_MEM_USAGE / 4)

        CYGPKG_NET_CLUSTERS_SIZE
            display = "Clusters size"
            -- default_value = (CYGPKG_NET_MEM_USAGE / 2)

        CYGPKG_NET_MAXSOCKETS
            display = "Max number of open sockets"
            -- default_value = CYGNUM_FILEIO_NFILE

        CYGPKG_NET_NUM_WAKEUP_EVENTS -> integer 
            display = "Number of supported pending network events"
            -- default_value = 8

        CYGPKG_NET_THREAD
            display = "Background network processing thread options"

            CYGPKG_NET_THREAD_PRIORITY -> integer 
                display = "Priority level for background network processing"
                -- default_value = 7

            CYGNUM_NET_THREAD_STACKSIZE -> string 
                display = "Stack size for backgound network processing"
                -- default_value = ((CYGPKG_NET_INET6) => "CYGNUM_HAL_STACK_SIZE_TYPICAL+2048" else "CYGNUM_HAL_STACK_SIZE_TYPICAL")

        CYGPKG_NET_FAST_THREAD
            display = "Fast network processing thread options"

            CYGPKG_NET_FAST_THREAD_PRIORITY -> integer 
                display = "Priority level for fast network processing"
                -- default_value = #CYGPKG_NET_THREAD_PRIORITY - 1

            CYGNUM_NET_FAST_THREAD_STACKSIZE -> string 
                display = "Stack size for fast network processing"
                -- default_value = "CYGNUM_HAL_STACK_SIZE_TYPICAL"

        CYGPKG_NET_FAST_THREAD_TICKLE_DEVS
            display = "Fast network processing thread 'tickles' drivers"
            -- default_value = 1

            CYGNUM_NET_FAST_THREAD_TICKLE_DEVS_DELAY -> integer 
                display = "Delay in kernel clocks of tickle loop"
                -- default_value = 50

        CYGPKG_NET_FREEBSD_STACK_OPTIONS
            display = "Networking support build options"

            CYGOPT_NET_FREEBSD_STACK_ACCEPT_UNICAST ?
                display = "Accept unicast packets on INADDR_ANY interfaces"
                -- default_value = 0

            CYGPKG_NET_FREEBSD_STACK_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = "-D_KERNEL"

            CYGPKG_NET_FREEBSD_STACK_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

        CYGPKG_NET_FREEBSD_STACK_TESTS -> string 
            display = "FreeBSD network stack tests"
            calculated: [this = 
            CYGPKG_NET_FREEBSD_SYSCTL => "tests/sysctl1" else ""]

    CYGPKG_SNMPAGENT
        display = "SNMP agent"
        [CYGPKG_IO]
        [0 != #CYGINT_ISO_STRING_STRFUNCS]
        [0 != #CYGINT_ISO_STDLIB_STRCONV]
        [0 != #CYGINT_ISO_STDIO_FORMATTED_IO]
        [0 != #CYGINT_ISO_STRING_STRFUNCS]
        [0 != #CYGINT_ISO_MALLOC]
        [0 != #CYGINT_ISO_ERRNO]
        [0 != #CYGINT_ISO_ERRNO_CODES]
        [CYGPKG_NET]
        [CYGPKG_SNMPLIB]

        CYGPKG_SNMPAGENT_SYSTEM_MIB
            display = "System MIB defaults"

            CYGDAT_NET_SNMPAGENT_SYS_CONTACT -> string 
                display = "Contact address"
                -- default_value = "\"nobody@nowhere.net\""

            CYGDAT_NET_SNMPAGENT_SYS_LOC -> string 
                display = "System location"
                -- default_value = "\"<unset>\""

            CYGDAT_NET_SNMPAGENT_VERS_DESC -> string 
                display = "Version description"
                -- default_value = "\"ucd-snmp-4.1.2/Red Hat eCos\""

            CYGDAT_NET_SNMPAGENT_SYS_NAME -> string 
                display = "System name "
                -- default_value = "\"eCos\""

        CYGPKG_SNMPAGENT_OPTIONS
            display = "SNMP agent build options"

            CYGPKG_SNMPAGENT_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = "-D_KERNEL -D__ECOS -DIN_UCD_SNMP_SOURCE=1 -I$(PREFIX)/include/ucd-snmp"

            CYGPKG_SNMPAGENT_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

            CYGPKG_SNMPAGENT_V3_SUPPORT ?
                display = "SNMPv3 support package"
                -- default_value = 1

            CYGPKG_SNMPAGENT_TESTS -> string 
                display = "SNMP agent tests"
                calculated: [this = 
                "tests/snmpping"]

                CYGSEM_SNMPAGENT_TESTS_PROMISCUOUS ?
                    display = "Run SNMP agent tests in promiscuous mode"
                    -- default_value = 0

                CYGSEM_SNMPAGENT_TESTS_SNMPv3 ?
                    display = "SNMP agent test for SNMP version 3"
                    -- default_value = 1
                    -- ifActive
                    [CYGPKG_SNMPAGENT_V3_SUPPORT]

                CYGNUM_SNMPAGENT_TESTS_ITERATIONS -> integer 
                    display = "Number of test iterations for SNMP agent test"
                    -- default_value = 1

    CYGPKG_SNMPLIB
        display = "SNMP library"
        [CYGPKG_IO]
        [0 != #CYGINT_ISO_STRING_STRFUNCS]
        [0 != #CYGINT_ISO_STRING_MEMFUNCS]
        [0 != #CYGINT_ISO_STDLIB_STRCONV]
        [0 != #CYGINT_ISO_STDIO_FORMATTED_IO]
        [0 != #CYGINT_ISO_STRING_STRFUNCS]
        [0 != #CYGINT_ISO_MALLOC]
        [0 != #CYGINT_ISO_ERRNO]
        [0 != #CYGINT_ISO_ERRNO_CODES]
        [CYGPKG_NET]
        [CYGPKG_POSIX_TIMERS]

        CYGDBG_NET_SNMPLIB_DEBUG ?
            display = "Enable SNMP debug printout"
            -- default_value = 0

        CYGPKG_SNMPLIB_FILESYSTEM_SUPPORT
            display = "SNMP file-system options"
            -- default_value = 1
            -- ifActive
            [CYGPKG_IO_FILEIO]
            -- ifActive
            [#CYGINT_IO_FILEIO_FS > 0]

            CYGPKG_SNMPLIB_PERSISTENT_FILESYSTEM ?
                display = "Persistent filesystem support"
                -- default_value = 0

        CYGPKG_SNMPLIB_OPTIONS
            display = "SNMP library build options"

            CYGPKG_SNMPLIB_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = "-D_KERNEL -D__ECOS -I$(PREFIX)/include/ucd-snmp"

            CYGPKG_SNMPLIB_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

    CYGPKG_HTTPD
        display = "HTTP Daemon"
        [CYGPKG_IO]
        [0 != #CYGINT_ISO_STDLIB_STRCONV]
        [0 != #CYGINT_ISO_STDIO_FORMATTED_IO]
        [0 != #CYGINT_ISO_STRING_STRFUNCS]
        [0 != #CYGINT_ISO_ERRNO]
        [0 != #CYGINT_ISO_ERRNO_CODES]
        [CYGPKG_NET]

        CYGNUM_HTTPD_SERVER_PORT -> integer 
            display = "HTTP port"
            -- default_value = 80

        CYGDAT_HTTPD_SERVER_ID -> string 
            display = "HTTP server ID"
            -- default_value = "\"eCos/1.0\""

        CYGNUM_HTTPD_THREAD_COUNT -> integer 
            display = "HTTPD thread count"
            -- default_value = 1

        CYGNUM_HTTPD_THREAD_PRIORITY -> integer 
            display = "HTTPD thread priority"
            -- default_value = (CYGNUM_KERNEL_SCHED_PRIORITIES / 2)
            [0 <= this && this <= CYGNUM_KERNEL_SCHED_PRIORITIES]

        CYGNUM_HTTPD_THREAD_STACK_SIZE -> integer 
            display = "HTTPD thread stack size"
            -- default_value = 2048

        CYGNUM_HTTPD_SERVER_BUFFER_SIZE -> integer 
            display = "HTTPD server buffer size"
            -- default_value = 256

        CYGNUM_HTTPD_SERVER_AUTO_START ?
            display = "Autostart HTTPD"
            -- default_value = 1

        CYGNUM_HTTPD_SERVER_DELAY -> integer 
            display = "HTTPD server startup delay"
            -- default_value = 0

        CYGPKG_HTTPD_MONITOR
            display = "Simple Web System Monitor"
            -- default_value = 1

        CYGPKG_HTTPD_TESTS -> string 
            display = "HTTPD tests"
            calculated: [this = 
            "tests/httpd1"]

        CYGPKG_HTTPD_OPTIONS
            display = "HTTP server build options"

            CYGPKG_HTTPD_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = "-D__ECOS"

            CYGPKG_HTTPD_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

    CYGPKG_NET_FTPCLIENT
        display = "FTP client"
        [CYGPKG_IO]
        [CYGPKG_NET]
        [CYGPKG_MEMALLOC]
        [0 != #CYGINT_ISO_STRING_STRFUNCS]
        [0 != #CYGINT_ISO_STRING_MEMFUNCS]
        [0 != #CYGINT_ISO_STDLIB_STRCONV]
        [0 != #CYGINT_ISO_STDIO_FORMATTED_IO]
        [0 != #CYGINT_ISO_STRING_STRFUNCS]
        [0 != #CYGINT_ISO_ERRNO]
        [0 != #CYGINT_ISO_ERRNO_CODES]
        [0 != #CYGINT_ISO_CTYPE]

        CYGNUM_NET_FTPCLIENT_BUFSIZE -> integer 
            display = "Size of internal buffers used during FTP transfers"
            -- default_value = 512

        CYGPKG_NET_FTPCLIENT_OPTIONS
            display = "FTP client build options"

            CYGPKG_NET_FTPCLIENT_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = "-D_KERNEL -D__ECOS"

            CYGPKG_NET_FTPCLIENT_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

        CYGPKG_NET_FTPCLIENT_TESTS -> string 
            display = "FTP Client tests"
            calculated: [this = 
            "tests/ftpclient1"]

    CYGPKG_PPP
        display = "PPP daemon"
        [CYGPKG_IO]
        [CYGPKG_IO_SERIAL]
        [CYGPKG_IO_SERIAL_DEVICES]
        [CYGOPT_IO_SERIAL_SUPPORT_NONBLOCKING]
        [CYGPKG_NET]
        [CYGPKG_IO_SERIAL_FLOW_CONTROL]
        [CYGPKG_POSIX_CLOCKS]

        CYGNUM_PPP_PPPD_THREAD_PRIORITY -> integer 
            display = "PPP thread priority"
            -- default_value = (CYGNUM_KERNEL_SCHED_PRIORITIES / 2)
            [0 <= this && this <= CYGNUM_KERNEL_SCHED_PRIORITIES]

        CYGPKG_PPP_DEBUG_WARN_ONLY
            display = "PPP protocol debug error only"
            -- default_value = 1

        CYGPKG_PPP_AUTH
            display = "PPP authentication defaults"

            CYGPKG_PPP_AUTH_DEFAULT_USER -> string 
                display = "Default user name"
                -- default_value = "\"eCos\""

            CYGPKG_PPP_AUTH_DEFAULT_PASSWD -> string 
                display = "Default password"
                -- default_value = "\"secret\""

        CYGPKG_PPP_DEFAULT_DIALUP_NUMBER -> string 
            display = "Default dialup number"
            -- default_value = "\"5551234\""

        CYGPKG_PPP_PAP
            display = "PAP support"
            -- default_value = 1

        CYGPKG_PPP_CHAP
            display = "CHAP support"
            -- default_value = 1

        CYGPKG_PPP_COMPRESSION
            display = "PPP compression options"
            -- default_value = 0

            PPP_BSDCOMP ?
                display = "Enable BSD compression"
                -- default_value = 0

            PPP_DEFLATE ?
                display = "Enable ZLIB compression"
                -- default_value = 0

            PPP_INHIBIT_OLD_VJ_COMPRESSION ?
                display = "Inhibit older-style VJ compression"
                -- default_value = 0

        CYGPKG_PPP_CHAT
            display = "Chat script support"
            -- default_value = 1

            CYGNUM_PPP_CHAT_ABORTS_MAX -> integer 
                display = "Maximum number of ABORT strings"
                -- default_value = 10
                [5 <= this && this <= 500]

            CYGNUM_PPP_CHAT_ABORTS_SIZE -> integer 
                display = "Maximum size of each ABORT string"
                -- default_value = 20
                [10 <= this && this <= 100]

            CYGNUM_PPP_CHAT_STRING_LENGTH -> integer 
                display = "Maximum size of CHAT strings"
                -- default_value = 256
                [32 <= this && this <= 32768]

        CYGPKG_PPP_WORKAROUNDS
            display = "PPP workarounds for bugs in other implementations"

            CYGPKT_PPP_WORKAROUNDS_START_FLAG ?
                display = "Add a start flag to every packet"
                -- default_value = FALSE

        CYGPKG_PPP_NEGOTIATE_OPTIONS
            display = "PPP negotiation options"

            CYGOPT_PPP_NS_NEGOTIATE ?
                display = "Name server support"
                -- default_value = CYGINT_ISO_DNS

            CYGOPT_PPP_DNS_CONFIGURE ?
                display = "Allow the PPP code to configure the resolver"
                -- default_value = 1

        CYGPKG_PPP_OPTIONS
            display = "PPP build options"

            CYGPKG_PPP_CFLAGS_ADD -> string 
                display = "Additional compiler flags"
                -- default_value = "-D__ECOS"

            CYGPKG_PPP_CFLAGS_REMOVE -> string 
                display = "Suppressed compiler flags"
                -- default_value = ""

        CYGPKG_PPP_TESTS -> string 
            display = "PPP tests"
            calculated: [this = 
            (((("tests/ppp_up ") ++
                    ("tests/ppp_updown ")) ++
                    ("tests/chat ")) ++
                    ("tests/ppp_auth ")) ++
                    (CYGPKG_PPP_TESTS_ALL => (("tests/isp ") ++
                        ("tests/tcp_echo ")) ++
                        ("tests/nc_test_slave ") else "")]

        CYGPKG_PPP_TESTS_ALL ?
            display = "Include all PPP tests"
            -- default_value = 0

        CYGPKG_PPP_TEST_DEVICE -> string 
            display = "PPP test device"
            -- default_value = "\"/dev/ser0\""

        CYGPKG_PPP_TESTS_AUTOMATE
            display = "PPP test automation"
            -- default_value = 1

            CYGDAT_PPP_TEST_BAUD_RATES -> string 
                display = "PPP test automation baud rates"
                -- default_value = (((StringLiteral("CYGNUM_SERIAL_BAUD_19200,") . StringLiteral("CYGNUM_SERIAL_BAUD_38400,")) . StringLiteral("CYGNUM_SERIAL_BAUD_57600,")) . StringLiteral("CYGNUM_SERIAL_BAUD_115200"))

        CYGBLD_PPP_WINDOWS_TELNET_APP ?
            display = "Build complete eCos PPP client interfacing to Windows PPP server"
            -- default_value = 0

CYGPKG_NS_DNS
    display = "DNS client"

    CYGPKG_NS_DNS_BUILD extends CYGINT_ISO_DNS ?
        display = "Build DNS NS client package"
        -- default_value = 1
        [CYGBLD_ISO_DNS_HEADER = "<cyg/ns/dns/dns.h>"]
        [CYGPKG_NET]
        [CYGINT_ISO_CTYPE]
        [CYGINT_ISO_MALLOC]
        [CYGINT_ISO_STRING_STRFUNCS]
        [CYGSEM_KERNEL_THREADS_DESTRUCTORS_PER_THREAD]

    CYGPKG_NS_DNS_DEFAULT
        display = "Provide a hard coded default server address"
        -- default_value = 0
        -- ifActive
        [CYGPKG_NS_DNS_BUILD]

        CYGDAT_NS_DNS_DEFAULT_SERVER -> string 
            display = "IP address of the default DNS server"
            -- default_value = "192.168.1.1"

    CYGPKG_NS_DNS_DOMAINNAME
        display = "Provide a hard coded default domain name"
        -- default_value = 0
        -- ifActive
        [CYGPKG_NS_DNS_BUILD]

        CYGDAT_NS_DNS_DOMAINNAME_NAME -> string 
            display = "Domain name for this device"
            -- default_value = "default.domain.com"

    CYGNUM_NS_DNS_GETADDRINFO_ADDRESSES -> integer 
        display = "Max number of results for getaddrinfo"
        -- default_value = 5

    CYGOPT_NS_DNS_FIRST_FAMILY -> CYGOPT_NS_DNS_FIRST_FAMILY_ENUM 
        display = "AF_INET or AF_INET6 first in the getaddrinfo list"
        -- default_value = "AF_INET6"
        -- ifActive
        [CYGPKG_NET_INET6]
enum CYGOPT_NS_DNS_FIRST_FAMILY_ENUM = "AF_INET4" | "AF_INET6"

    CYGPKG_NS_DNS_OPTIONS
        display = "DNS support build options"

        CYGPKG_NS_DNS_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = "-D_KERNEL -D__ECOS"

        CYGPKG_NS_DNS_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

    CYGPKG_NS_DNS_TESTS -> string 
        display = "DNS test"
        -- ifActive
        [CYGPKG_NS_DNS_BUILD]
        calculated: [this = 
        "tests/dns1"]

    CYGPKG_NS_DNS_TESTS_LUNN ?
        display = "Use Andrew Lunn's DNS server for tests"
        -- default_value = 1

    CYGPKG_NS_DNS_TESTS_ELSIS ?
        display = "Iztok Zupet DNS server at Elsis for tests"
        -- default_value = 1

CYGPKG_CRC
    display = "Compute CRCs"

    CYGPKG_CRC_TESTS -> string 
        display = "POSIX CRC tests"
        calculated: [this = 
        "tests/crc_test"]

CYGPKG_CPULOAD
    display = "Measure the current CPU load"
    [CYGPKG_KERNEL]
    [!CYGPKG_KERNEL_SMP_SUPPORT]

    CYGPKG_CPULOAD_TESTS -> string 
        display = "CPU load measurement tests"
        calculated: [this = 
        "tests/cpuload"]

CYGPKG_NET_SNTP
    display = "Simple Network Time Protocol Client (SNTP)"
    [CYGPKG_NET]
    [CYGPKG_LIBC_TIME]
    [CYGSEM_LIBC_TIME_TIME_WORKING]
    [CYGSEM_LIBC_TIME_SETTIME_WORKING]

    CYGPKG_NET_SNTP_UNICAST
        display = "Enable SNTP client unicast support"
        -- default_value = 0

        CYGNUM_NET_SNTP_UNICAST_MAXDHCP -> integer 
            display = "Maximum number of NTP servers to use from DHCP"
            -- default_value = 2
            [1 <= this && this <= 8]
            [CYGPKG_NET_DHCP]

    CYGPKG_NET_SNTP_OPTIONS
        display = "SNTP support build options"

        CYGPKG_NET_SNTP_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = "-D_KERNEL -D__ECOS"

        CYGPKG_NET_SNTP_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

    CYGPKG_NET_SNTP_TESTS -> string 
        display = "sntp tests"
        calculated: [this = 
        CYGPKG_NET_BUILD_HW_TESTS => "tests/sntp1" else ""]

CYGPKG_IO_FLASH
    display = "FLASH device drivers"
    [CYGPKG_ISOINFRA]
    [CYGINT_ISO_STRING_STRFUNCS]

    abstract CYGHWR_IO_FLASH_DEVICE
        display = "Hardware FLASH device drivers"
        [#CYGHWR_IO_FLASH_DEVICE >= 1]

    CYGHWR_IO_FLASH_BLOCK_LOCKING
        display = "Hardware can support block locking"

    CYGHWR_IO_FLASH_INDIRECT_READS
        display = "Hardware requires indirect reads"

    CYGHWR_IO_FLASH_DEVICE_NEEDS_CACHE_HANDLED
        display = "Device driver needs cache handled centrally"

    CYGHWR_IO_FLASH_DEVICE_LEGACY extends CYGHWR_IO_FLASH_DEVICE_NEEDS_CACHE_HANDLED
        display = "Hardware driver uses the legacy interface"
        [#CYGHWR_IO_FLASH_DEVICE_LEGACY <= 1]

    CYGSEM_IO_FLASH_READ_INDIRECT ?
        display = "Legacy device driver uses indirect reads."
        -- default_value = 0
        -- ifActive
        [CYGHWR_IO_FLASH_DEVICE_LEGACY]
        [!CYGSEM_IO_FLASH_VERIFY_PROGRAM]

    CYGSEM_IO_FLASH_CHATTER ?
        display = "Display status messages during flash operations"
        -- default_value = 1

    CYGSEM_IO_FLASH_VERIFY_PROGRAM ?
        display = "Verify data programmed to flash"
        -- default_value = 1
        -- ifActive
        [CYGHWR_IO_FLASH_INDIRECT_READS < CYGHWR_IO_FLASH_DEVICE]

    CYGSEM_IO_FLASH_SOFT_WRITE_PROTECT ?
        display = "Platform has flash soft DIP switch write-protect"
        -- default_value = 0

    CYGPKG_IO_FLASH_BLOCK_DEVICE
        display = "Provide /dev block devices"
        -- default_value = 0
        -- ifActive
        [CYGPKG_IO]
        [#CYGINT_IO_FLASH_BLOCK_DEVICE_METHODS > 0]

        CYGINT_IO_FLASH_BLOCK_DEVICE_METHODS
            display = "Number of methods to reference Flash"

        CYGNUM_IO_FLASH_BLOCK_DEVICES -> integer 
            display = "Number of /dev/flash/ device slots"
            -- default_value = 2

        CYGFUN_IO_FLASH_BLOCK_FROM_FIS extends CYGINT_IO_FLASH_BLOCK_DEVICE_METHODS ?
            display = "Access using named FIS areas"
            -- default_value = CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
            [CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT]

        CYGFUN_IO_FLASH_BLOCK_FROM_DEVOFFSET extends CYGINT_IO_FLASH_BLOCK_DEVICE_METHODS ?
            display = "Access using device numbers,offsets"
            -- default_value = 1

    CYGSEM_IO_FLASH_LEGACY_API ?
        display = "Provide the legacy user API"
        -- default_value = 1

    CYGPKG_IO_FLASH_BLOCK_DEVICE_LEGACY
        display = "Provide /dev block devices (legacy format)"
        -- default_value = 0
        -- ifActive
        [CYGPKG_IO]

        CYGPKG_IO_FLASH_BLOCK_DEVICE_1
            display = "Provide block device 1"
            -- default_value = 1

            CYGDAT_IO_FLASH_BLOCK_DEVICE_NAME_1 -> string 
                display = "Name of flash block device 1"
                -- default_value = "\"/dev/flash1\""

            abstract CYGINT_IO_FLASH_BLOCK_CFG_1
                [1 = #CYGINT_IO_FLASH_BLOCK_CFG_1]

            CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_1 extends CYGINT_IO_FLASH_BLOCK_CFG_1
                display = "Static configuration via offset"
                -- default_value = 1

                CYGNUM_IO_FLASH_BLOCK_OFFSET_1 -> integer 
                    display = "Start offset from flash base"
                    -- default_value = 0xFFFFFFFF
                    [0xFFFFFFFF != #CYGNUM_IO_FLASH_BLOCK_OFFSET_1]

                CYGNUM_IO_FLASH_BLOCK_LENGTH_1 -> integer 
                    display = "Length"
                    -- default_value = 0
                    [0 != #CYGNUM_IO_FLASH_BLOCK_OFFSET_1]

            CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_1 extends CYGINT_IO_FLASH_BLOCK_CFG_1
                display = "Static configuration via absolute address"
                -- default_value = 0

                CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_1 -> integer 
                    display = "Start offset from flash base"
                    -- default_value = 0xFFFFFFFF
                    [0xFFFFFFFF != #CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_1]

                CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_1 -> integer 
                    display = "Length"
                    -- default_value = 0
                    [0 != #CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_1]

            CYGNUM_IO_FLASH_BLOCK_CFG_FIS_1 extends CYGINT_IO_FLASH_BLOCK_CFG_1
                display = "Configuration from FIS"
                -- default_value = 0

                CYGDAT_IO_FLASH_BLOCK_FIS_NAME_1 -> string 
                    display = "Name of FIS entry"
                    -- default_value = "\"jffs2\""
                    ["" != CYGDAT_IO_FLASH_BLOCK_FIS_NAME_1]

        CYGPKG_IO_FLASH_BLOCK_DEVICE_2
            display = "Provide block device 2"
            -- default_value = 0

            CYGDAT_IO_FLASH_BLOCK_DEVICE_NAME_2 -> string 
                display = "Name of flash block device 2"
                -- default_value = "\"/dev/flash2\""

            abstract CYGINT_IO_FLASH_BLOCK_CFG_2
                [1 = #CYGINT_IO_FLASH_BLOCK_CFG_2]

            CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_2 extends CYGINT_IO_FLASH_BLOCK_CFG_2
                display = "Static configuration via offset"
                -- default_value = 1

                CYGNUM_IO_FLASH_BLOCK_OFFSET_2 -> integer 
                    display = "Start offset from flash base"
                    -- default_value = 0xFFFFFFFF
                    [0xFFFFFFFF != #CYGNUM_IO_FLASH_BLOCK_OFFSET_2]

                CYGNUM_IO_FLASH_BLOCK_LENGTH_2 -> integer 
                    display = "Length"
                    -- default_value = 0
                    [0 != #CYGNUM_IO_FLASH_BLOCK_OFFSET_2]

            CYGNUM_IO_FLASH_BLOCK_CFG_STATIC_ABSOLUTE_2 extends CYGINT_IO_FLASH_BLOCK_CFG_2
                display = "Static configuration via absolute address"
                -- default_value = 0

                CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_2 -> integer 
                    display = "Start offset from flash base"
                    -- default_value = 0xFFFFFFFF
                    [0xFFFFFFFF != #CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_START_2]

                CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_2 -> integer 
                    display = "Length"
                    -- default_value = 0
                    [0 != #CYGNUM_IO_FLASH_BLOCK_ABSOLUTE_LENGTH_2]

            CYGNUM_IO_FLASH_BLOCK_CFG_FIS_2 extends CYGINT_IO_FLASH_BLOCK_CFG_2
                display = "Configuration from FIS"
                -- default_value = 0

                CYGDAT_IO_FLASH_BLOCK_FIS_NAME_2 -> string 
                    display = "Name of FIS entry"
                    -- default_value = "\"jffs2-2\""
                    ["" != CYGDAT_IO_FLASH_BLOCK_FIS_NAME_2]

    CYGPKG_IO_FLASH_OPTIONS
        display = "Flash device driver build options"

        CYGPKG_IO_FLASH_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_IO_FLASH_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

        CYGPKG_IO_FLASH_TESTS -> string 
            display = "Flash device driver tests"
            calculated: [this = 
            (CYGSEM_IO_FLASH_LEGACY_API => "tests/flash1" else "") ++
                    (CYGPKG_IO_FLASH_BLOCK_DEVICE => " tests/flashdev" else "")]

            CYGNUM_IO_FLASH_TEST_OFFSET -> integer 
                display = "Start offset from flash base"
                -- default_value = 0x100000

            CYGNUM_IO_FLASH_TEST_LENGTH -> integer 
                display = "Length"
                -- default_value = 0x100000

CYGPKG_FS_RAM extends CYGINT_IO_FILEIO_FS
    display = "RAM filesystem"
    [CYGPKG_IO_FILEIO]
    [CYGPKG_ISOINFRA]
    [CYGPKG_ERROR]
    [CYGINT_ISO_ERRNO]
    [CYGINT_ISO_ERRNO_CODES]
    [#CYGINT_FS_RAM_ALLOC = 1]

    abstract CYGINT_FS_RAM_ALLOC
        display = "Functions to allocate RAM"

    CYGPKG_FS_RAM_SIMPLE extends CYGINT_FS_RAM_ALLOC
        display = "Simple, malloc() based, implementation"
        -- default_value = 1
        -- ifActive
        [!CYGPKG_FS_RAM_BLOCKS]
        [#CYGINT_ISO_MALLOC != 0]

        CYGNUM_RAMFS_REALLOC_INCREMENT -> integer 
            display = "Size of file data storage increment"
            -- default_value = 256
            [64 <= this && this <= 32768]

    CYGPKG_FS_RAM_BLOCKS extends CYGINT_FS_RAM_ALLOC
        display = "Block-based RAM filesystem allocation"
        -- default_value = 0
        -- ifActive
        [!CYGPKG_FS_RAM_SIMPLE]

        CYGNUM_RAMFS_BLOCK_SIZE -> integer 
            display = "Size of file data storage block"
            -- default_value = 256
            [64 <= this && this <= 32768]

        CYGNUM_RAMFS_BLOCKS_DIRECT -> integer 
            display = "Directly referenced data storage blocks"
            -- default_value = 8
            [0 <= this && this <= 32]

        CYGNUM_RAMFS_BLOCKS_INDIRECT1 -> integer 
            display = "Single level indirect data storage blocks"
            -- default_value = 1
            [0 <= this && this <= 32]

        CYGNUM_RAMFS_BLOCKS_INDIRECT2 -> integer 
            display = "Two level indirect data storage blocks"
            -- default_value = 1
            [0 <= this && this <= 32]

        CYGPKG_FS_RAM_BLOCKS_ARRAY
            display = "Use block array rather than malloc()"
            -- default_value = 0

            CYGPKG_FS_RAM_BLOCKS_ARRAY_EXTERN ?
                display = "Block array is external"
                -- default_value = 0

            CYGPKG_FS_RAM_BLOCKS_ARRAY_NAME
                display = "Name of external block array"
                -- default_value = cyg_ramfs_block_array
                -- ifActive
                [CYGPKG_FS_RAM_BLOCKS_ARRAY_EXTERN]

            CYGNUM_FS_RAM_BLOCKS_ARRAY_SIZE -> integer 
                display = "Size of blocks array"
                -- default_value = 128
                [1 <= this && this <= 2147483647]

    CYGNUM_RAMFS_DIRENT_SIZE -> integer 
        display = "Directory entry size"
        -- default_value = 32
        [16 <= this && this <= ((CYGNUM_RAMFS_BLOCK_SIZE) => CYGNUM_RAMFS_BLOCK_SIZE else 128)]

    CYGPKG_FS_RAM_RET_DIRENT_DTYPE ?
        display = "Support for fileio's struct dirent d_type field"
        -- default_value = 0
        -- ifActive
        [CYGPKG_FILEIO_DIRENT_DTYPE]

    CYGPKG_FS_RAM_TESTS -> string 
        display = "RAM FS tests"
        calculated: [this = 
        "tests/ramfs1 tests/ramfs2 tests/ramfs3"]

CYGPKG_FS_ROM extends CYGINT_IO_FILEIO_FS
    display = "ROM filesystem"
    [CYGPKG_IO_FILEIO]
    [CYGPKG_ISOINFRA]
    [CYGINT_ISO_ERRNO]
    [CYGINT_ISO_ERRNO_CODES]

    CYGBLD_FS_ROMFS_MK_ROMFS ?
        display = "Build the tool used to build filesystems"
        -- default_value = 1

    CYGPKG_FS_ROM_RET_DIRENT_DTYPE ?
        display = "Support for fileio's struct dirent d_type field"
        -- default_value = 0
        -- ifActive
        [CYGPKG_FILEIO_DIRENT_DTYPE]

    CYGTST_ROMFS_BUILD_TESTS
        display = "Build ROM filesystem tests"
        -- default_value = 0
        [CYGINT_LIBC_STARTUP_CONTEXT]
        [CYGINT_ISO_STDIO_FORMATTED_IO]
        [CYGINT_ISO_STRERROR]
        [CYGBLD_FS_ROMFS_MK_ROMFS]

        CYGPKG_FS_ROM_TESTS -> string 
            display = "ROM filesystem tests"
            calculated: [this = 
            "tests/romfs1"]

CYGPKG_FS_JFFS2 extends CYGINT_IO_FILEIO_FS
    display = "JFFS2 filesystem"
    [CYGPKG_IO_FILEIO]
    [CYGPKG_IO_FLASH]
    [CYGINT_ISO_MALLOC]
    [CYGPKG_ISOINFRA]
    [CYGPKG_ERROR]
    [CYGINT_ISO_ERRNO]
    [CYGINT_ISO_ERRNO_CODES]
    [CYGPKG_IO_FLASH_BLOCK_DEVICE]
    [CYGPKG_IO_FILEIO_INODE]
    [CYGPKG_LINUX_COMPAT]
    [CYGPKG_CRC]

    CYGOPT_FS_JFFS2_GCTHREAD
        display = "Support garbage-collection background thread"
        -- default_value = 0
        [CYGPKG_KERNEL]

        CYGNUM_JFFS2_GC_THREAD_PRIORITY -> integer 
            display = "jffs2 gc thread priority"
            -- default_value = CYGNUM_KERNEL_SCHED_PRIORITIES-2
            [0 <= this && this <= CYGNUM_KERNEL_SCHED_PRIORITIES]

        CYGNUM_JFFS2_GC_THREAD_STACK_SIZE -> integer 
            display = "jffs2 gc stackstack size"
            -- default_value = 8192
            [2048 <= this && this <= 0x7fffffff]

        CYGNUM_JFFS2_GS_THREAD_TICKS -> integer 
            display = "ticks between each garbage collect"
            -- default_value = 100

    CYGOPT_FS_JFFS2_WRITE ?
        display = "Include write support for JFFS2"
        -- default_value = 1

    CYGOPT_FS_JFFS2_NAND ?
        display = "Support for NAND flash"
        [0]

    CYGOPT_FS_JFFS2_DEBUG -> integer 
        display = "Debug level"
        -- default_value = 0
        [0 <= this && this <= 2]

    CYGOPT_FS_JFFS2_COMPRESS
        display = "Compress data"
        -- default_value = 1

        CYGOPT_FS_JFFS2_COMPRESS_ZLIB ?
            display = "Compress data using zlib"
            -- default_value = 1
            [CYGPKG_COMPRESS_ZLIB]

        CYGOPT_FS_JFFS2_COMPRESS_RTIME ?
            display = "Compress data using rtime"
            -- default_value = 1

        CYGOPT_FS_JFFS2_COMPRESS_RUBIN ?
            display = "Compress data using rubin"
            [CYGOPT_FS_JFFS2_COMPRESS]

        CYGOPT_FS_JFFS2_COMPRESS_CMODE -> CYGOPT_FS_JFFS2_COMPRESS_CMODE_ENUM 
            display = "Set the default compression mode"
            -- default_value = "PRIORITY"
enum CYGOPT_FS_JFFS2_COMPRESS_CMODE_ENUM = "NONE" | "PRIORITY" | "SIZE"

    CYGNUM_FS_JFFS2_RAW_NODE_REF_CACHE_POOL_SIZE -> integer 
        display = "Memory pool size"
        -- default_value = 0

    CYGPKG_FS_JFFS2_CFLAGS_ADD -> string 
        display = "Additional compiler flags"
        -- default_value = (StringLiteral("-D__ECOS ") . Conditional(CYGPKG_HAL_SYNTH,StringLiteral(" -nostdinc -iwithprefix include -iwithprefix include-fixed"),StringLiteral("")))

    CYGPKG_FS_JFFS2_CFLAGS_REMOVE -> string 
        display = "Suppressed compiler flags"
        -- default_value = ""

    CYGPKG_FS_JFFS2_RET_DIRENT_DTYPE ?
        display = "Support for fileio's struct dirent d_type field"
        -- default_value = 0
        -- ifActive
        [CYGPKG_FILEIO_DIRENT_DTYPE]

    CYGPKG_FS_JFFS2_TESTS -> string 
        display = "JFFS2 FS tests"
        calculated: [this = 
        "tests/jffs2_1 tests/jffs2_2 tests/jffs2_3"]

CYGPKG_LINUX_COMPAT
    display = "Linux compatibility layer"

    CYGNUM_LINUX_COMPAT_PAGE_SIZE_EXPONENT -> integer 
        display = "Define page size"
        -- default_value = 12
        [10 <= this && this <= 16]

CYGPKG_COMPRESS_ZLIB
    display = "Zlib compress and decompress package"
    [CYGPKG_ISOINFRA]
    [CYGPKG_CRC]

    abstract CYGINT_COMPRESS_ZLIB_LOCAL_ALLOC
        display = "Override memory allocation routines."

    CYGSEM_COMPRESS_ZLIB_DEFLATE_MAKES_GZIP ?
        display = "Should deflate() produce 'gzip' compatible output?"
        -- default_value = 1

    CYGSEM_COMPRESS_ZLIB_NEEDS_MALLOC ?
        display = "Does this library need malloc?"
        -- default_value = 1
        -- ifActive
        [#CYGINT_COMPRESS_ZLIB_LOCAL_ALLOC = 0]
        [CYGPKG_MEMALLOC]

    CYGFUN_COMPRESS_ZLIB_GZIO ?
        display = "Include stdio-like utility functions"
        -- default_value = ((CYGPKG_LIBC_STDIO_OPEN) => 1 else 0)
        [CYGINT_ISO_STDIO_FILEPOS]
        [CYGINT_ISO_STRING_STRFUNCS]
        [CYGINT_ISO_STDIO_FORMATTED_IO]
        [CYGINT_ISO_STDIO_FILEACCESS]

    CYGPKG_COMPRESS_ZLIB_OPTIONS
        display = "Zlib compress and decompress package build options"

        CYGPKG_COMPRESS_ZLIB_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = "-D__ECOS__ -DNO_ERRNO_H"

        CYGPKG_COMPRESS_ZLIB_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = "-Wstrict-prototypes"

        CYGPKG_COMPRESS_ZLIB_LDFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_COMPRESS_ZLIB_LDFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

    CYGPKG_COMPRESS_ZLIB_TESTS -> string 
        display = "zlib tests"
        calculated: [this = 
        "tests/zlib1 tests/zlib2"]

CYGPKG_VNC_SERVER
    display = "VNC Server"
    [#CYGNUM_VNC_SERVER_PIXEL_SELECTED <= 1]
    [CYGPKG_IO]
    [CYGPKG_NET || CYGPKG_NET_LWIP]

    CYGNUM_VNC_SERVER_PORT -> integer 
        display = "VNC server port number"
        -- default_value = 5900

    CYGDAT_VNC_DESKTOP_NAME -> string 
        display = "VNC Desktop Name"
        -- default_value = "\"eCos Desktop\""

    CYGNUM_VNC_SERVER_DELAY -> integer 
        display = "VNC server startup delay"
        -- default_value = 0

    CYGNUM_VNC_SERVER_PRIORITY -> integer 
        display = "VNC server thread priority"
        -- default_value = CYGNUM_KERNEL_SCHED_PRIORITIES-2
        [0 <= this && this <= CYGNUM_KERNEL_SCHED_PRIORITIES]

    CYGPKG_VNC_SERVER_ENCODING_OPTIONS
        display = "Encoding options"

        CYGNUM_VNC_SERVER_USE_CORRE_ENCODING
            display = "Use CoRRE encoding"
            -- default_value = 1

            CYGNUM_VNC_SERVER_CORRE_ENCODING_HACK ?
                display = "Work-around CoRRE bug in vncviewer"
                -- default_value = 1

    CYGPKG_VNC_SERVER_DISPLAY_OPTIONS
        display = "Display options"

        CYGNUM_VNC_SERVER_FRAME_WIDTH -> integer 
            display = "Frame width in pixels"
            -- default_value = 640

        CYGNUM_VNC_SERVER_FRAME_HEIGHT -> integer 
            display = "Frame heigth in pixels"
            -- default_value = 480

        CYGNUM_VNC_SERVER_TILE_SIZE -> integer 
            display = "Display tile size"
            -- default_value = 32
            [1 <= this && this <= 255]

        abstract CYGNUM_VNC_SERVER_PIXEL_SELECTED
            display = "Pixel format support"

        CYGNUM_VNC_SERVER_PIXEL_RGB332 extends CYGNUM_VNC_SERVER_PIXEL_SELECTED ?
            display = "RGB332 pixel format (8-bit)"
            -- default_value = 0

        CYGNUM_VNC_SERVER_PIXEL_BGR233 extends CYGNUM_VNC_SERVER_PIXEL_SELECTED ?
            display = "BGR233 pixel format (8-bit)"
            -- default_value = 1

        CYGNUM_VNC_SERVER_PIXEL_RGB555 extends CYGNUM_VNC_SERVER_PIXEL_SELECTED ?
            display = "RGB555 pixel format (16-bit)"
            -- default_value = 0

        CYGNUM_VNC_SERVER_PIXEL_RGB565 extends CYGNUM_VNC_SERVER_PIXEL_SELECTED ?
            display = "RGB565 pixel format (16-bit)"
            -- default_value = 0

        CYGNUM_VNC_SERVER_PIXEL_TRUECOLOR0888 extends CYGNUM_VNC_SERVER_PIXEL_SELECTED ?
            display = "True Color pixel format (32-bit)"
            -- default_value = 0

        CYGNUM_VNC_SERVER_INCLUDE_VNC_PRINTF ?
            display = "Include VncPrintf() function"
            -- default_value = 1
            [!CYGPKG_MICROWINDOWS]

    CYGPKG_VNC_SERVER_BUILD_MOUSE_DRIVER
        display = "Build VNC mouse driver"
        -- default_value = 1
        [CYGPKG_IO_FILEIO]

        CYGNUM_VNC_SERVER_MOUSE_EVENTS -> integer 
            display = "Number of mouse events for VNC server mouse driver to buffer."
            -- default_value = 64

        CYGDAT_VNC_SERVER_MOUSE_NAME -> string 
            display = "Device name for the VNC server mouse driver"
            -- default_value = "\"/dev/vnc_mouse\""

    CYGPKG_VNC_SERVER_BUILD_KEYBOARD_DRIVER
        display = "Build VNC keyboard driver"
        -- default_value = 1
        [CYGPKG_IO_FILEIO]

        CYGNUM_VNC_SERVER_KEYBOARD_EVENTS -> integer 
            display = "Number of keyboard events for VNC server keyboard driver to buffer."
            -- default_value = 64

        CYGDAT_VNC_SERVER_KEYBOARD_NAME -> string 
            display = "Device name for the VNC server keyboard driver"
            -- default_value = "\"/dev/vnc_kbd\""

    CYGPKG_VNC_SERVER_TESTS -> string 
        display = "VNC server tests"
        calculated: [this = 
        "tests/vnc-test"]

CYGPKG_IO_DISK
    display = "Disk device drivers"
    -- ifActive
    [CYGPKG_IO]
    [CYGPKG_ERROR]

    CYGPKG_IO_DISK_DEVICES
        display = "Hardware disk device drivers"
        -- default_value = 1

    CYGDBG_IO_DISK_DEBUG
        display = "Enable debugging output"
        -- default_value = 0

    CYGPKG_IO_DISK_OPTIONS
        display = "Disk device driver build options"

        CYGPKG_IO_DISK_CFLAGS_ADD -> string 
            display = "Additional compiler flags"
            -- default_value = ""

        CYGPKG_IO_DISK_CFLAGS_REMOVE -> string 
            display = "Suppressed compiler flags"
            -- default_value = ""

CYGPKG_BLOCK_LIB
    display = "Block cache and access library"
    [CYGPKG_ISOINFRA]
    [CYGPKG_MEMALLOC]
    [CYGPKG_LINUX_COMPAT]
    [CYGPKG_ERROR]

    CYGIMP_BLOCK_LIB_STATISTICS ?
        display = "Block access statistics support"
        -- default_value = 1

CYGPKG_FS_FAT extends CYGINT_IO_FILEIO_FS
    display = "FAT filesystem"
    [CYGPKG_IO_FILEIO]
    [CYGPKG_ISOINFRA]
    [CYGINT_ISO_ERRNO]
    [CYGINT_ISO_ERRNO_CODES]
    [CYGPKG_MEMALLOC]
    [CYGPKG_BLOCK_LIB]

    CYGNUM_FS_FAT_NODE_HASH_TABLE_SIZE -> integer 
        display = "Node hash table size"
        -- default_value = 32
        [1 <= this && this <= 2147483647]

    CYGNUM_FS_FAT_NODE_POOL_SIZE -> integer 
        display = "Node pool size"
        -- default_value = #CYGNUM_FILEIO_NFILE + 2
        [1 <= this && this <= 2147483647]
        [#CYGNUM_FS_FAT_NODE_POOL_SIZE >= #CYGNUM_FILEIO_NFILE + 2]

    CYGNUM_FS_FAT_BLOCK_CACHE_MEMSIZE -> integer 
        display = "FAT block cache memory size"
        -- default_value = 10240
        [1 <= this && this <= 2147483647]

    CYGDBG_FS_FAT_NODE_CACHE_EXTRA_CHECKS ?
        display = "Node cache extra checks"
        -- default_value = 1
        -- ifActive
        [CYGPKG_INFRA_DEBUG && CYGDBG_USE_ASSERTS]

    CYGCFG_FS_FAT_USE_ATTRIBUTES ?
        display = "Support for FAT FS file attributes"
        -- default_value = 0

    CYGPKG_FS_FAT_RET_DIRENT_DTYPE ?
        display = "Support for fileio's struct dirent d_type field"
        -- default_value = 0
        -- ifActive
        [CYGPKG_FILEIO_DIRENT_DTYPE]

    CYGPKG_DEVS_DISK_TESTING
        display = "Testing configuration"
        -- default_value = 1

        CYGDAT_DEVS_DISK_TEST_DEVICE -> string 
            display = "Test device driver"
            -- default_value = "\"/dev/synthdisk0/1\""

        CYGDAT_DEVS_DISK_TEST_DEVICE2 -> string 
            display = "Second Test device driver"
            -- default_value = "\"/dev/synthdisk0/2\""

    CYGPKG_FS_FAT_TESTS -> string 
        display = "FAT FS tests"
        calculated: [this = 
        "tests/fatfs1"]